!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADS_PER_QUEUE	kademlia/KademliaCommonConfig.java	/^    public static int ADS_PER_QUEUE = 200; \/\/the number of ads per topic queue$/;"	f	class:KademliaCommonConfig
AD_LIFE_TIME	kademlia/KademliaCommonConfig.java	/^    public static int AD_LIFE_TIME = 250000; \/\/life time of ads the topic table$/;"	f	class:KademliaCommonConfig
ALL_BUCKET_ORDER	kademlia/KademliaCommonConfig.java	/^    public static final int ALL_BUCKET_ORDER = 2;$/;"	f	class:KademliaCommonConfig
ALPHA	kademlia/KademliaCommonConfig.java	/^	public static int ALPHA = 3; \/\/ number of simultaneous lookup (default is 3)$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_DOS	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_DOS = "DosAttack";$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_HYBRID	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_HYBRID = "HybridAttacker";$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_MALICIOUS_REGISTRAR	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_MALICIOUS_REGISTRAR = "MaliciousRegistrar";$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_RANDOM_SPAM	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_RANDOM_SPAM = "RandomSpam";$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_TOPIC_SPAM	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_TOPIC_SPAM = "TopicSpam";$/;"	f	class:KademliaCommonConfig
ATTACK_TYPE_WAITING_TIME_SPAM	kademlia/KademliaCommonConfig.java	/^    public static String ATTACK_TYPE_WAITING_TIME_SPAM = "WaitingTimeSpam";$/;"	f	class:KademliaCommonConfig
BITS	kademlia/KademliaCommonConfig.java	/^	public static int BITS = 256; \/\/ length of Id (default is 160)$/;"	f	class:KademliaCommonConfig
BLACK	graph/GraphAlgorithms.java	/^public final static int BLACK=2;$/;"	f	class:GraphAlgorithms
BackoffService	kademlia/BackoffService.java	/^	 public BackoffService(int slotTime, int maxRetries){$/;"	m	class:BackoffService
BackoffService	kademlia/BackoffService.java	/^public class BackoffService {$/;"	c
BallExpansion	reports/BallExpansion.java	/^public BallExpansion(String name)$/;"	m	class:BallExpansion
BallExpansion	reports/BallExpansion.java	/^public class BallExpansion extends GraphObserver$/;"	c
BitMatrixGraph	graph/BitMatrixGraph.java	/^public BitMatrixGraph( int n ) {$/;"	m	class:BitMatrixGraph
BitMatrixGraph	graph/BitMatrixGraph.java	/^public BitMatrixGraph( int n, boolean directed ) {$/;"	m	class:BitMatrixGraph
BitMatrixGraph	graph/BitMatrixGraph.java	/^public class BitMatrixGraph implements Graph {$/;"	c
CDProtocol	cdsim/CDProtocol.java	/^public interface CDProtocol extends Protocol$/;"	i
CDSIM	Simulator.java	/^public static final int CDSIM = 0;$/;"	f	class:Simulator
CDSIM	config/CheckConfig.java	/^protected static final int CDSIM = 0;$/;"	f	class:CheckConfig
CDScheduler	edsim/CDScheduler.java	/^public CDScheduler(String n) {$/;"	m	class:CDScheduler
CDScheduler	edsim/CDScheduler.java	/^public class CDScheduler implements Control, NodeInitializer {$/;"	c
CDSimulator	cdsim/CDSimulator.java	/^private CDSimulator()$/;"	m	class:CDSimulator	file:
CDSimulator	cdsim/CDSimulator.java	/^public class CDSimulator$/;"	c
CDState	cdsim/CDState.java	/^private CDState() {}$/;"	m	class:CDState	file:
CDState	cdsim/CDState.java	/^public class CDState extends CommonState {$/;"	c
CLOSEST_BUCKET_ORDER	kademlia/KademliaCommonConfig.java	/^    public static final int CLOSEST_BUCKET_ORDER = 1;$/;"	f	class:KademliaCommonConfig
COMPLETE_WALK	kademlia/KademliaCommonConfig.java	/^    public static final int COMPLETE_WALK = 3;$/;"	f	class:KademliaCommonConfig
CheckConfig	config/CheckConfig.java	/^public class CheckConfig {$/;"	c
ClassFinder	config/ClassFinder.java	/^class ClassFinder $/;"	c
Cleanable	core/Cleanable.java	/^public interface Cleanable$/;"	i
Client	kademlia/Client.java	/^	public Client(String prefix) {$/;"	m	class:Client
Client	kademlia/Client.java	/^public class Client implements Control {$/;"	c
Clustering	reports/Clustering.java	/^public Clustering(String name)$/;"	m	class:Clustering
Clustering	reports/Clustering.java	/^public class Clustering extends GraphObserver$/;"	c
CommonState	core/CommonState.java	/^protected CommonState() {}$/;"	m	class:CommonState
CommonState	core/CommonState.java	/^public class CommonState$/;"	c
ConfigContainer	config/ConfigContainer.java	/^public ConfigContainer(Properties config, boolean check)$/;"	m	class:ConfigContainer
ConfigContainer	config/ConfigContainer.java	/^public class ConfigContainer$/;"	c
ConfigProperties	config/ConfigProperties.java	/^public	ConfigProperties( Properties props ) {$/;"	m	class:ConfigProperties
ConfigProperties	config/ConfigProperties.java	/^public	ConfigProperties( String[] pars ) {$/;"	m	class:ConfigProperties
ConfigProperties	config/ConfigProperties.java	/^public	ConfigProperties( String[] pars, String resource ) {$/;"	m	class:ConfigProperties
ConfigProperties	config/ConfigProperties.java	/^public ConfigProperties( String fileName ) throws IOException {$/;"	m	class:ConfigProperties
ConfigProperties	config/ConfigProperties.java	/^public ConfigProperties() { super(); }$/;"	m	class:ConfigProperties
ConfigProperties	config/ConfigProperties.java	/^public class ConfigProperties extends Properties {$/;"	c
Configuration	config/Configuration.java	/^private Configuration()$/;"	m	class:Configuration	file:
Configuration	config/Configuration.java	/^public class Configuration$/;"	c
ConnectivityObserver	reports/ConnectivityObserver.java	/^public ConnectivityObserver(String name)$/;"	m	class:ConnectivityObserver
ConnectivityObserver	reports/ConnectivityObserver.java	/^public class ConnectivityObserver extends GraphObserver$/;"	c
ConstUndirGraph	graph/ConstUndirGraph.java	/^public ConstUndirGraph( Graph g ) {$/;"	m	class:ConstUndirGraph
ConstUndirGraph	graph/ConstUndirGraph.java	/^public class ConstUndirGraph implements Graph {$/;"	c
Control	core/Control.java	/^public interface Control$/;"	i
ControlEvent	edsim/ControlEvent.java	/^class ControlEvent$/;"	c
ControlEvent	edsim/ControlEvent.java	/^public ControlEvent(Control control, Scheduler scheduler, int order)$/;"	m	class:ControlEvent
CustomDistribution	kademlia/CustomDistribution.java	/^    public CustomDistribution(String prefix) {$/;"	m	class:CustomDistribution
CustomDistribution	kademlia/CustomDistribution.java	/^public class CustomDistribution implements peersim.core.Control {$/;"	c
DEAD	core/Fallible.java	/^	public int DEAD = 1;$/;"	f	interface:Fallible
DEBUG_CONTEXT	config/ConfigContainer.java	/^private static final int DEBUG_CONTEXT = 2;$/;"	f	class:ConfigContainer	file:
DEBUG_EXTENDED	config/Configuration.java	/^static final String DEBUG_EXTENDED = "context";$/;"	f	class:Configuration
DEBUG_FULL	config/Configuration.java	/^static final String DEBUG_FULL = "full";$/;"	f	class:Configuration
DEBUG_NO	config/ConfigContainer.java	/^private static final int DEBUG_NO = 0;$/;"	f	class:ConfigContainer	file:
DEBUG_REG	config/ConfigContainer.java	/^private static final int DEBUG_REG = 1;$/;"	f	class:ConfigContainer	file:
DEFAULT_INITIAL_CAPACITY	core/IdleProtocol.java	/^private static final int DEFAULT_INITIAL_CAPACITY = 10;$/;"	f	class:IdleProtocol	file:
DEFAULT_MAXDEPTH	config/Configuration.java	/^public static final int DEFAULT_MAXDEPTH = 100;$/;"	f	class:Configuration
DOWN	core/Fallible.java	/^	public int DOWN = 2;$/;"	f	interface:Fallible
DaemonProtocol	cdsim/DaemonProtocol.java	/^public DaemonProtocol(String s)$/;"	m	class:DaemonProtocol
DaemonProtocol	cdsim/DaemonProtocol.java	/^public class DaemonProtocol implements CDProtocol {$/;"	c
DegreeStats	reports/DegreeStats.java	/^public DegreeStats(String name)$/;"	m	class:DegreeStats
DegreeStats	reports/DegreeStats.java	/^public class DegreeStats extends GraphObserver$/;"	c
Discv5EvilTicketProtocol	kademlia/Discv5EvilTicketProtocol.java	/^    public Discv5EvilTicketProtocol(String prefix) {$/;"	m	class:Discv5EvilTicketProtocol
Discv5EvilTicketProtocol	kademlia/Discv5EvilTicketProtocol.java	/^public class Discv5EvilTicketProtocol extends Discv5TicketProtocol {$/;"	c
Discv5GlobalTopicTable	kademlia/Discv5GlobalTopicTable.java	/^	public Discv5GlobalTopicTable() {$/;"	m	class:Discv5GlobalTopicTable
Discv5GlobalTopicTable	kademlia/Discv5GlobalTopicTable.java	/^public class Discv5GlobalTopicTable extends Discv5TopicTable { \/\/ implements TopicTable $/;"	c
Discv5MultiTopicTrafficGenerator	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	public Discv5MultiTopicTrafficGenerator(String prefix) {$/;"	m	class:Discv5MultiTopicTrafficGenerator
Discv5MultiTopicTrafficGenerator	kademlia/Discv5MultiTopicTrafficGenerator.java	/^public class Discv5MultiTopicTrafficGenerator extends Discv5ZipfTrafficGenerator {$/;"	c
Discv5RRTopicTable	kademlia/Discv5RRTopicTable.java	/^	public Discv5RRTopicTable() {$/;"	m	class:Discv5RRTopicTable
Discv5RRTopicTable	kademlia/Discv5RRTopicTable.java	/^public class Discv5RRTopicTable extends Discv5TopicTable { \/\/ implements TopicTable $/;"	c
Discv5StatefulTopicTable	kademlia/Discv5StatefulTopicTable.java	/^    public Discv5StatefulTopicTable() {$/;"	m	class:Discv5StatefulTopicTable
Discv5StatefulTopicTable	kademlia/Discv5StatefulTopicTable.java	/^public class Discv5StatefulTopicTable extends Discv5GlobalTopicTable {$/;"	c
Discv5TicketProtocol	kademlia/Discv5TicketProtocol.java	/^	public Discv5TicketProtocol(String prefix) {$/;"	m	class:Discv5TicketProtocol
Discv5TicketProtocol	kademlia/Discv5TicketProtocol.java	/^public class Discv5TicketProtocol extends KademliaProtocol implements Cleanable {$/;"	c
Discv5TopicTable	kademlia/Discv5TopicTable.java	/^    public Discv5TopicTable() {$/;"	m	class:Discv5TopicTable
Discv5TopicTable	kademlia/Discv5TopicTable.java	/^public class Discv5TopicTable { \/\/ implements TopicTable {$/;"	c
Discv5TrafficGenerator	kademlia/Discv5TrafficGenerator.java	/^	public Discv5TrafficGenerator(String prefix) {$/;"	m	class:Discv5TrafficGenerator
Discv5TrafficGenerator	kademlia/Discv5TrafficGenerator.java	/^public class Discv5TrafficGenerator implements Control {$/;"	c
Discv5ZipfTrafficGenerator	kademlia/Discv5ZipfTrafficGenerator.java	/^	public Discv5ZipfTrafficGenerator(String prefix) {$/;"	m	class:Discv5ZipfTrafficGenerator
Discv5ZipfTrafficGenerator	kademlia/Discv5ZipfTrafficGenerator.java	/^public class Discv5ZipfTrafficGenerator implements Control {$/;"	c
DnsListDistribution	kademlia/DnsListDistribution.java	/^	public DnsListDistribution(String prefix) {$/;"	m	class:DnsListDistribution
DnsListDistribution	kademlia/DnsListDistribution.java	/^public class DnsListDistribution implements peersim.core.Control {$/;"	c
DynamicNetwork	dynamics/DynamicNetwork.java	/^public DynamicNetwork(String prefix)$/;"	m	class:DynamicNetwork
DynamicNetwork	dynamics/DynamicNetwork.java	/^public class DynamicNetwork implements Control$/;"	c
E2ENetwork	transport/E2ENetwork.java	/^private E2ENetwork() {}$/;"	m	class:E2ENetwork	file:
E2ENetwork	transport/E2ENetwork.java	/^public class E2ENetwork$/;"	c
E2ETransport	transport/E2ETransport.java	/^public E2ETransport(String prefix)$/;"	m	class:E2ETransport
E2ETransport	transport/E2ETransport.java	/^public class E2ETransport implements Transport, RouterInfo$/;"	c
EDProtocol	edsim/EDProtocol.java	/^public interface EDProtocol $/;"	i
EDSIM	Simulator.java	/^public static final int EDSIM = 1;$/;"	f	class:Simulator
EDSIM	config/CheckConfig.java	/^protected static final int EDSIM = 1;$/;"	f	class:CheckConfig
EDSimulator	edsim/EDSimulator.java	/^private EDSimulator() {}$/;"	m	class:EDSimulator	file:
EDSimulator	edsim/EDSimulator.java	/^public class EDSimulator$/;"	c
EthClient	kademlia/EthClient.java	/^	public EthClient(String prefix) {$/;"	m	class:EthClient
EthClient	kademlia/EthClient.java	/^public class EthClient implements Control {$/;"	c
Event	edsim/PriorityQ.java	/^public class Event$/;"	c	interface:PriorityQ
ExtendedRandom	util/ExtendedRandom.java	/^public ExtendedRandom(long seed) {$/;"	m	class:ExtendedRandom
ExtendedRandom	util/ExtendedRandom.java	/^public class ExtendedRandom extends Random {$/;"	c
FILTER_RESULTS	kademlia/KademliaCommonConfig.java	/^    public static int FILTER_RESULTS = 1;$/;"	f	class:KademliaCommonConfig
Fallible	core/Fallible.java	/^public interface Fallible {$/;"	i
FastConfig	config/FastConfig.java	/^private FastConfig() {}$/;"	m	class:FastConfig	file:
FastConfig	config/FastConfig.java	/^public class FastConfig$/;"	c
FastUndirGraph	graph/FastUndirGraph.java	/^public FastUndirGraph(Graph graph)$/;"	m	class:FastUndirGraph
FastUndirGraph	graph/FastUndirGraph.java	/^public class FastUndirGraph extends ConstUndirGraph$/;"	c
FileNameGenerator	util/FileNameGenerator.java	/^public FileNameGenerator(String prefix, String ext) {$/;"	m	class:FileNameGenerator
FileNameGenerator	util/FileNameGenerator.java	/^public class FileNameGenerator {$/;"	c
FindOperation	kademlia/operations/FindOperation.java	/^	public FindOperation(BigInteger srcNode, BigInteger destNode, long timestamp) {$/;"	m	class:FindOperation
FindOperation	kademlia/operations/FindOperation.java	/^public class FindOperation extends Operation{$/;"	c
FullNextCycle	cdsim/FullNextCycle.java	/^public FullNextCycle(String prefix) {$/;"	m	class:FullNextCycle
FullNextCycle	cdsim/FullNextCycle.java	/^public class FullNextCycle implements Control {$/;"	c
GREY	graph/GraphAlgorithms.java	/^public final static int GREY=1;$/;"	f	class:GraphAlgorithms
GeneralNode	core/GeneralNode.java	/^public GeneralNode(String prefix) {$/;"	m	class:GeneralNode
GeneralNode	core/GeneralNode.java	/^public class GeneralNode implements Node {$/;"	c
Getter	vector/Getter.java	/^public Getter(String prefix, String protocol, String methodn) {$/;"	m	class:Getter
Getter	vector/Getter.java	/^public class Getter {$/;"	c
GetterSetterFinder	vector/GetterSetterFinder.java	/^class GetterSetterFinder$/;"	c
Graph	graph/Graph.java	/^public interface Graph {$/;"	i
GraphAlgorithms	graph/GraphAlgorithms.java	/^public class GraphAlgorithms {$/;"	c
GraphFactory	graph/GraphFactory.java	/^private GraphFactory() {}$/;"	m	class:GraphFactory	file:
GraphFactory	graph/GraphFactory.java	/^public class GraphFactory {$/;"	c
GraphIO	graph/GraphIO.java	/^private GraphIO() {}$/;"	m	class:GraphIO	file:
GraphIO	graph/GraphIO.java	/^public class GraphIO {$/;"	c
GraphObserver	reports/GraphObserver.java	/^protected GraphObserver(String name) {$/;"	m	class:GraphObserver
GraphObserver	reports/GraphObserver.java	/^public abstract class GraphObserver implements Control {$/;"	c
GraphPrinter	reports/GraphPrinter.java	/^public GraphPrinter(String name) {$/;"	m	class:GraphPrinter
GraphPrinter	reports/GraphPrinter.java	/^public class GraphPrinter extends GraphObserver {$/;"	c
GraphStats	reports/GraphStats.java	/^public GraphStats(String name) {$/;"	m	class:GraphStats
GraphStats	reports/GraphStats.java	/^public class GraphStats extends GraphObserver {$/;"	c
Heap	edsim/Heap.java	/^public Heap() {$/;"	m	class:Heap
Heap	edsim/Heap.java	/^public Heap(String prefix) {$/;"	m	class:Heap
Heap	edsim/Heap.java	/^public class Heap implements PriorityQ {$/;"	c
ID	core/GeneralNode.java	/^private long ID;$/;"	f	class:GeneralNode	file:
ID_GENERATOR	kademlia/Message.java	/^	private static long ID_GENERATOR = 0;$/;"	f	class:Message	file:
IdleProtocol	core/IdleProtocol.java	/^public IdleProtocol(String s)$/;"	m	class:IdleProtocol
IdleProtocol	core/IdleProtocol.java	/^public class IdleProtocol implements Protocol, Linkable$/;"	c
IllegalParameterException	config/IllegalParameterException.java	/^public IllegalParameterException(String name, String message) {$/;"	m	class:IllegalParameterException
IllegalParameterException	config/IllegalParameterException.java	/^public class IllegalParameterException extends RuntimeException {$/;"	c
IncrementalFreq	util/IncrementalFreq.java	/^public IncrementalFreq() {$/;"	m	class:IncrementalFreq
IncrementalFreq	util/IncrementalFreq.java	/^public IncrementalFreq(int maxvalue) {$/;"	m	class:IncrementalFreq
IncrementalFreq	util/IncrementalFreq.java	/^public class IncrementalFreq implements Cloneable {$/;"	c
IncrementalStats	util/IncrementalStats.java	/^public IncrementalStats() { reset(); }$/;"	m	class:IncrementalStats
IncrementalStats	util/IncrementalStats.java	/^public class IncrementalStats {$/;"	c
IndexIterator	util/IndexIterator.java	/^public interface IndexIterator {$/;"	i
InitVectFromFile	vector/InitVectFromFile.java	/^public InitVectFromFile(String prefix)$/;"	m	class:InitVectFromFile
InitVectFromFile	vector/InitVectFromFile.java	/^public class InitVectFromFile extends VectControl$/;"	c
K	kademlia/KademliaCommonConfig.java	/^	public static int K = 16; \/\/ dimension of k-buckets (default is 5)$/;"	f	class:KademliaCommonConfig
KBucket	kademlia/KBucket.java	/^	public KBucket(RoutingTable rTable,int k, int maxReplacements) {$/;"	m	class:KBucket
KBucket	kademlia/KBucket.java	/^public class KBucket implements Cloneable {$/;"	c
KademliaCommonConfig	kademlia/KademliaCommonConfig.java	/^public class KademliaCommonConfig {$/;"	c
KademliaNode	kademlia/KademliaNode.java	/^    public KademliaNode(BigInteger id){$/;"	m	class:KademliaNode
KademliaNode	kademlia/KademliaNode.java	/^    public KademliaNode(BigInteger id, BigInteger attackerId,  String addr, int port) {$/;"	m	class:KademliaNode
KademliaNode	kademlia/KademliaNode.java	/^    public KademliaNode(BigInteger id, String addr, int port){$/;"	m	class:KademliaNode
KademliaNode	kademlia/KademliaNode.java	/^    public KademliaNode(KademliaNode n){$/;"	m	class:KademliaNode
KademliaNode	kademlia/KademliaNode.java	/^public class KademliaNode implements Comparable<KademliaNode>{$/;"	c
KademliaObserver	kademlia/KademliaObserver.java	/^	public KademliaObserver(String prefix) {$/;"	m	class:KademliaObserver
KademliaObserver	kademlia/KademliaObserver.java	/^public class KademliaObserver implements Control {$/;"	c
KademliaProtocol	kademlia/KademliaProtocol.java	/^	public KademliaProtocol(String prefix) {$/;"	m	class:KademliaProtocol
KademliaProtocol	kademlia/KademliaProtocol.java	/^public class KademliaProtocol implements Cloneable, EDProtocol {$/;"	c
KingParser	transport/KingParser.java	/^public KingParser(String prefix)$/;"	m	class:KingParser
KingParser	transport/KingParser.java	/^public class KingParser implements Control$/;"	c
LOOKUP_BUCKET_ORDER	kademlia/KademliaCommonConfig.java	/^    public static int LOOKUP_BUCKET_ORDER = 0;$/;"	f	class:KademliaCommonConfig
LinearDistribution	vector/LinearDistribution.java	/^public LinearDistribution(String prefix)$/;"	m	class:LinearDistribution
LinearDistribution	vector/LinearDistribution.java	/^public class LinearDistribution extends VectControl$/;"	c
LinearIterator	util/LinearIterator.java	/^public LinearIterator( boolean rev ) { reverse=rev; }$/;"	m	class:LinearIterator
LinearIterator	util/LinearIterator.java	/^public LinearIterator() { reverse=false; }$/;"	m	class:LinearIterator
LinearIterator	util/LinearIterator.java	/^public class LinearIterator implements IndexIterator {$/;"	c
Linkable	core/Linkable.java	/^public interface Linkable extends Cleanable {$/;"	i
LookupInfo	kademlia/LookupInfo.java	/^	public LookupInfo(BigInteger address,Topic topic,boolean radiusLookup) {$/;"	m	class:LookupInfo
LookupInfo	kademlia/LookupInfo.java	/^public class LookupInfo {$/;"	c
LookupOperation	kademlia/operations/LookupOperation.java	/^    public LookupOperation(BigInteger srcNode, Long timestamp, Topic t) {$/;"	m	class:LookupOperation
LookupOperation	kademlia/operations/LookupOperation.java	/^public class LookupOperation extends Operation {$/;"	c
LookupTicketOperation	kademlia/operations/LookupTicketOperation.java	/^	public LookupTicketOperation(BigInteger srcNode, SearchTable sTable, Long timestamp, Topic t){$/;"	m	class:LookupTicketOperation
LookupTicketOperation	kademlia/operations/LookupTicketOperation.java	/^public class LookupTicketOperation extends LookupOperation {$/;"	c
MAXCONNECTIONS	kademlia/Client.java	/^	private static final int MAXCONNECTIONS=50;$/;"	f	class:Client	file:
MAXCONNECTIONS	kademlia/EthClient.java	/^	private static final int MAXCONNECTIONS=50;$/;"	f	class:EthClient	file:
MAXCONNECTIONS	kademlia/KademliaCommonConfig.java	/^	public static int MAXCONNECTIONS = 150; \/\/periodic time used to check nodes down in k-buckets$/;"	f	class:KademliaCommonConfig
MAXFINDNODEFAILURES	kademlia/KademliaCommonConfig.java	/^	public static int MAXFINDNODEFAILURES = 5; \/\/periodic time used to check nodes down in k-buckets$/;"	f	class:KademliaCommonConfig
MAXREPLACEMENT	kademlia/KademliaCommonConfig.java	/^	public static int MAXREPLACEMENT = 10; \/\/the number of nodes saved in the replacement list$/;"	f	class:KademliaCommonConfig
MAX_REGISTRATION_RETRIES	kademlia/KademliaCommonConfig.java	/^    public static int MAX_REGISTRATION_RETRIES = 10; \/\/life time of ads the topic table$/;"	f	class:KademliaCommonConfig
MAX_REG_BUCKETS	kademlia/KademliaCommonConfig.java	/^    public static int MAX_REG_BUCKETS = 0;$/;"	f	class:KademliaCommonConfig
MAX_SEARCH_HOPS	kademlia/KademliaCommonConfig.java	/^    public static int MAX_SEARCH_HOPS = 50; \/\/how many high quality nodes do we want to find for each topic; after this number we stop$/;"	f	class:KademliaCommonConfig
MAX_TICKETS	kademlia/KademliaCommonConfig.java	/^    public static int MAX_TICKETS = 100;$/;"	f	class:KademliaCommonConfig
MAX_TOPIC_REPLY	kademlia/KademliaCommonConfig.java	/^    public static int MAX_TOPIC_REPLY = 15;$/;"	f	class:KademliaCommonConfig
MAX_VALUE	kademlia/RegistrationLog.java	/^    public static final long   MAX_VALUE = 0x7fffffffffffffffL;$/;"	f	class:RegistrationLog
MSG_EMPTY	kademlia/Message.java	/^	public static final int MSG_EMPTY = 0;$/;"	f	class:Message
MSG_FIND	kademlia/Message.java	/^	public static final int MSG_FIND = 3;$/;"	f	class:Message
MSG_INIT_FIND	kademlia/Message.java	/^	public static final int MSG_INIT_FIND = 2;$/;"	f	class:Message
MSG_INIT_REGISTER	kademlia/Message.java	/^	public static final int MSG_INIT_REGISTER = 6;$/;"	f	class:Message
MSG_INIT_TOPIC_LOOKUP	kademlia/Message.java	/^	public static final int MSG_INIT_TOPIC_LOOKUP = 12;$/;"	f	class:Message
MSG_REGISTER	kademlia/Message.java	/^	public static final int MSG_REGISTER = 5;$/;"	f	class:Message
MSG_REGISTER_RESPONSE	kademlia/Message.java	/^	public static final int MSG_REGISTER_RESPONSE = 10; $/;"	f	class:Message
MSG_RESPONSE	kademlia/Message.java	/^	public static final int MSG_RESPONSE = 4;$/;"	f	class:Message
MSG_STORE	kademlia/Message.java	/^	public static final int MSG_STORE = 1;$/;"	f	class:Message
MSG_TICKET_REQUEST	kademlia/Message.java	/^	public static final int MSG_TICKET_REQUEST = 7;$/;"	f	class:Message
MSG_TICKET_RESPONSE	kademlia/Message.java	/^	public static final int MSG_TICKET_RESPONSE = 8;$/;"	f	class:Message
MSG_TOPIC_QUERY	kademlia/Message.java	/^	public static final int MSG_TOPIC_QUERY = 9;$/;"	f	class:Message
MSG_TOPIC_QUERY_REPLY	kademlia/Message.java	/^	public static final int MSG_TOPIC_QUERY_REPLY = 11;$/;"	f	class:Message
MaliciousProtocol	core/MaliciousProtocol.java	/^public interface MaliciousProtocol $/;"	i
MedianStats	util/MedianStats.java	/^public MedianStats()$/;"	m	class:MedianStats
MedianStats	util/MedianStats.java	/^public class MedianStats extends IncrementalStats$/;"	c
MemoryObserver	reports/MemoryObserver.java	/^public MemoryObserver(String prefix)$/;"	m	class:MemoryObserver
MemoryObserver	reports/MemoryObserver.java	/^public class MemoryObserver implements Control$/;"	c
Message	kademlia/Message.java	/^	public Message() {$/;"	m	class:Message
Message	kademlia/Message.java	/^	public Message(int messageType) {$/;"	m	class:Message
Message	kademlia/Message.java	/^	public Message(int messageType, Object body) {$/;"	m	class:Message
Message	kademlia/Message.java	/^public class Message extends SimpleEvent {$/;"	c
MethodInvoker	dynamics/MethodInvoker.java	/^public MethodInvoker(String prefix) {$/;"	m	class:MethodInvoker
MethodInvoker	dynamics/MethodInvoker.java	/^public class MethodInvoker implements Control, NodeInitializer {$/;"	c
MissingParameterException	config/MissingParameterException.java	/^MissingParameterException(String name) {$/;"	m	class:MissingParameterException
MissingParameterException	config/MissingParameterException.java	/^MissingParameterException(String name, String motivation) {$/;"	m	class:MissingParameterException
MissingParameterException	config/MissingParameterException.java	/^public class MissingParameterException extends RuntimeException {$/;"	c
ModifiableNode	core/ModifiableNode.java	/^public ModifiableNode(String prefix)$/;"	m	class:ModifiableNode
ModifiableNode	core/ModifiableNode.java	/^public class ModifiableNode extends GeneralNode$/;"	c
MomentStats	util/MomentStats.java	/^    public MomentStats() {$/;"	m	class:MomentStats
MomentStats	util/MomentStats.java	/^public class MomentStats extends IncrementalStats {$/;"	c
N	util/IncrementalFreq.java	/^private final int N;$/;"	f	class:IncrementalFreq	file:
NBUCKETS	kademlia/KademliaCommonConfig.java	/^	public static int NBUCKETS = 256;$/;"	f	class:KademliaCommonConfig
NON_UNIFORM_ID_DISTRIBUTION	kademlia/KademliaCommonConfig.java	/^    public static String NON_UNIFORM_ID_DISTRIBUTION = "nonUniform";$/;"	f	class:KademliaCommonConfig
NeighbourListGraph	graph/NeighbourListGraph.java	/^public NeighbourListGraph( boolean directed ) {$/;"	m	class:NeighbourListGraph
NeighbourListGraph	graph/NeighbourListGraph.java	/^public NeighbourListGraph( int size, boolean directed ) {$/;"	m	class:NeighbourListGraph
NeighbourListGraph	graph/NeighbourListGraph.java	/^public class NeighbourListGraph implements Graph, java.io.Serializable {$/;"	c
Network	core/Network.java	/^private Network() {}$/;"	m	class:Network	file:
Network	core/Network.java	/^public class Network {$/;"	c
NextCycle	cdsim/NextCycle.java	/^public NextCycle(String prefix) {$/;"	m	class:NextCycle
NextCycle	cdsim/NextCycle.java	/^public class NextCycle extends FullNextCycle {$/;"	c
NextCycleEvent	edsim/NextCycleEvent.java	/^public NextCycleEvent(String n) {}$/;"	m	class:NextCycleEvent
NextCycleEvent	edsim/NextCycleEvent.java	/^public class NextCycleEvent implements Cloneable {$/;"	c
Node	core/Node.java	/^public interface Node extends Fallible, Cloneable$/;"	i
NodeConnections	kademlia/NodeConnections.java	/^	public NodeConnections(String topic,KademliaNode n) {$/;"	m	class:NodeConnections
NodeConnections	kademlia/NodeConnections.java	/^public class NodeConnections {$/;"	c
NodeInitializer	dynamics/NodeInitializer.java	/^public interface NodeInitializer$/;"	i
Normalizer	vector/Normalizer.java	/^public Normalizer(String prefix)$/;"	m	class:Normalizer
Normalizer	vector/Normalizer.java	/^public class Normalizer extends VectControl$/;"	c
NullPrintStream	config/NullPrintStream.java	/^public NullPrintStream()$/;"	m	class:NullPrintStream
NullPrintStream	config/NullPrintStream.java	/^public class NullPrintStream extends PrintStream$/;"	c
OK	core/Fallible.java	/^	public int OK = 0;$/;"	f	interface:Fallible
ONE_UNIT_OF_TIME	kademlia/KademliaCommonConfig.java	/^    public static int ONE_UNIT_OF_TIME = 1; \/\/ smallest time value$/;"	f	class:KademliaCommonConfig
OPERATION_ID_GENERATOR	kademlia/operations/Operation.java	/^	private static long OPERATION_ID_GENERATOR = 0;$/;"	f	class:Operation	file:
Operation	kademlia/operations/Operation.java	/^	public Operation(BigInteger srcNode, BigInteger dstNode, int type, long timestamp) {$/;"	m	class:Operation
Operation	kademlia/operations/Operation.java	/^public class Operation {$/;"	c
Operators	config/Operators.java	/^	public Operators() {$/;"	m	class:Operators
Operators	config/Operators.java	/^public class Operators extends Group implements IntegralDomainI,HasDivI,$/;"	c
OracleIdleProtocol	core/OracleIdleProtocol.java	/^public OracleIdleProtocol(String prefix) {}$/;"	m	class:OracleIdleProtocol
OracleIdleProtocol	core/OracleIdleProtocol.java	/^public final class OracleIdleProtocol implements Protocol, Linkable {$/;"	c
OscillatingNetwork	dynamics/OscillatingNetwork.java	/^public OscillatingNetwork(String prefix)$/;"	m	class:OscillatingNetwork
OscillatingNetwork	dynamics/OscillatingNetwork.java	/^public class OscillatingNetwork implements Control$/;"	c
OverlayGraph	core/OverlayGraph.java	/^public OverlayGraph( int protocolID ) {$/;"	m	class:OverlayGraph
OverlayGraph	core/OverlayGraph.java	/^public OverlayGraph( int protocolID, boolean wireDirected ) {$/;"	m	class:OverlayGraph
OverlayGraph	core/OverlayGraph.java	/^public class OverlayGraph implements Graph {$/;"	c
PARALLELREGISTRATIONS	kademlia/KademliaCommonConfig.java	/^    public static int PARALLELREGISTRATIONS = 0;$/;"	f	class:KademliaCommonConfig
PAR_ACCURACY	vector/SingleValueObserver.java	/^private static final String PAR_ACCURACY = "accuracy";$/;"	f	class:SingleValueObserver	file:
PAR_ADD	dynamics/DynamicNetwork.java	/^private static final String PAR_ADD = "add";$/;"	f	class:DynamicNetwork	file:
PAR_ADD	kademlia/Turbulence.java	/^	private static final String PAR_ADD = "p_add";$/;"	f	class:Turbulence	file:
PAR_ADS_PER_QUEUE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_ADS_PER_QUEUE = "ADS_PER_QUEUE";$/;"	f	class:Discv5TicketProtocol
PAR_AD_LIFE_TIME	kademlia/Discv5TicketProtocol.java	/^	final String PAR_AD_LIFE_TIME = "AD_LIFE_TIME";$/;"	f	class:Discv5TicketProtocol
PAR_ALPHA	kademlia/KademliaProtocol.java	/^	final String PAR_ALPHA = "ALPHA";$/;"	f	class:KademliaProtocol
PAR_ARG	dynamics/WireByMethod.java	/^private static final String PAR_ARG = "arg";$/;"	f	class:WireByMethod	file:
PAR_AT	core/Scheduler.java	/^private static final String PAR_AT = "at";$/;"	f	class:Scheduler	file:
PAR_ATTACKTOPIC	kademlia/Discv5ZipfTrafficGenerator.java	/^    private final static String PAR_ATTACKTOPIC = "attackTopic";$/;"	f	class:Discv5ZipfTrafficGenerator	file:
PAR_ATTACK_TOPIC	kademlia/CustomDistribution.java	/^    private static final String PAR_ATTACK_TOPIC = "attackTopic";$/;"	f	class:CustomDistribution	file:
PAR_ATTACK_TYPE	kademlia/CustomDistribution.java	/^    private static final String PAR_ATTACK_TYPE = "attackType";$/;"	f	class:CustomDistribution	file:
PAR_ATTACK_TYPE	kademlia/Discv5EvilTicketProtocol.java	/^    final String PAR_ATTACK_TYPE = "attackType";$/;"	f	class:Discv5EvilTicketProtocol
PAR_BASENAME	reports/GraphPrinter.java	/^private static final String PAR_BASENAME = "outf";$/;"	f	class:GraphPrinter	file:
PAR_BASENAME	vector/ValueDumper.java	/^private static final String PAR_BASENAME = "outf";$/;"	f	class:ValueDumper	file:
PAR_BETA	dynamics/WireWS.java	/^private static final String PAR_BETA = "beta";$/;"	f	class:WireWS	file:
PAR_BITS	kademlia/KademliaProtocol.java	/^	final String PAR_BITS = "BITS";$/;"	f	class:KademliaProtocol
PAR_CLASS	dynamics/WireByMethod.java	/^private static final String PAR_CLASS = "class";$/;"	f	class:WireByMethod	file:
PAR_CTRL	cdsim/CDSimulator.java	/^private static final String PAR_CTRL = "control";$/;"	f	class:CDSimulator	file:
PAR_CTRL	cdsim/DaemonProtocol.java	/^private static final String PAR_CTRL = "control";$/;"	f	class:DaemonProtocol	file:
PAR_CTRL	edsim/EDSimulator.java	/^private static final String PAR_CTRL = "control";$/;"	f	class:EDSimulator	file:
PAR_CYCLES	cdsim/CDSimulator.java	/^public static final String PAR_CYCLES = "simulation.cycles";$/;"	f	class:CDSimulator
PAR_DEBUG	config/Configuration.java	/^static final String PAR_DEBUG = "debug.config";$/;"	f	class:Configuration
PAR_DEGREE	dynamics/RandNI.java	/^private static final String PAR_DEGREE = "k";$/;"	f	class:RandNI	file:
PAR_DEGREE	dynamics/WireKOut.java	/^private static final String PAR_DEGREE = "k";$/;"	f	class:WireKOut	file:
PAR_DEGREE	dynamics/WireRegRootedTree.java	/^private static final String PAR_DEGREE = "k";$/;"	f	class:WireRegRootedTree	file:
PAR_DEGREE	dynamics/WireScaleFreeBA.java	/^private static final String PAR_DEGREE = "k";$/;"	f	class:WireScaleFreeBA	file:
PAR_DEGREE	dynamics/WireWS.java	/^private static final String PAR_DEGREE = "k";$/;"	f	class:WireWS	file:
PAR_DROP	transport/UnreliableTransport.java	/^private static final String PAR_DROP = "drop";$/;"	f	class:UnreliableTransport	file:
PAR_EDGES	dynamics/WireScaleFreeDM.java	/^private static final String PAR_EDGES = "k";$/;"	f	class:WireScaleFreeDM	file:
PAR_ENDTIME	edsim/EDSimulator.java	/^public static final String PAR_ENDTIME = "simulation.endtime";	$/;"	f	class:EDSimulator
PAR_EVIL_PROT	kademlia/CustomDistribution.java	/^    private static final String PAR_EVIL_PROT = "evilProtocol";$/;"	f	class:CustomDistribution	file:
PAR_EXPS	Simulator.java	/^public static final String PAR_EXPS = "simulation.experiments";$/;"	f	class:Simulator
PAR_FAST	reports/GraphObserver.java	/^private static final String PAR_FAST = "graphobserver.fast";$/;"	f	class:GraphObserver	file:
PAR_FILE	dynamics/WireFromFile.java	/^private static final String PAR_FILE = "file";$/;"	f	class:WireFromFile	file:
PAR_FILE	transport/KingParser.java	/^private static final String PAR_FILE = "file";$/;"	f	class:KingParser	file:
PAR_FILE	transport/TriangularMatrixParser.java	/^private static final String PAR_FILE = "file";$/;"	f	class:TriangularMatrixParser	file:
PAR_FILE	vector/InitVectFromFile.java	/^private static final String PAR_FILE = "file";$/;"	f	class:InitVectFromFile	file:
PAR_FILTERESULTS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_FILTERESULTS = "FILTER_RESULTS";$/;"	f	class:Discv5TicketProtocol
PAR_FINAL	core/Scheduler.java	/^private static final String PAR_FINAL = "FINAL";$/;"	f	class:Scheduler	file:
PAR_FORMAT	reports/GraphPrinter.java	/^private static final String PAR_FORMAT = "format";$/;"	f	class:GraphPrinter	file:
PAR_FROM	core/Scheduler.java	/^private static final String PAR_FROM = "from";$/;"	f	class:Scheduler	file:
PAR_GETPAIR	cdsim/FullNextCycle.java	/^private static final String PAR_GETPAIR = "getpair";$/;"	f	class:FullNextCycle	file:
PAR_GETTER	vector/VectControl.java	/^protected static final String PAR_GETTER = "getter";$/;"	f	class:VectControl
PAR_IDLE	kademlia/Turbulence.java	/^	private static final String PAR_IDLE = "p_idle";$/;"	f	class:Turbulence	file:
PAR_ID_DIST	kademlia/CustomDistribution.java	/^    private static final String PAR_ID_DIST = "idDistribution";$/;"	f	class:CustomDistribution	file:
PAR_ID_POOL_SIZE	kademlia/CustomDistribution.java	/^    private static final String PAR_ID_POOL_SIZE = "nodeIdSize";$/;"	f	class:CustomDistribution	file:
PAR_INCLUDE	config/Configuration.java	/^static final String PAR_INCLUDE = "include";$/;"	f	class:Configuration
PAR_INIT	cdsim/CDSimulator.java	/^private static final String PAR_INIT = "init";$/;"	f	class:CDSimulator	file:
PAR_INIT	dynamics/DynamicNetwork.java	/^private static final String PAR_INIT = "init";$/;"	f	class:DynamicNetwork	file:
PAR_INIT	dynamics/OscillatingNetwork.java	/^private static final String PAR_INIT = "init";$/;"	f	class:OscillatingNetwork	file:
PAR_INIT	edsim/EDSimulator.java	/^private static final String PAR_INIT = "init";$/;"	f	class:EDSimulator	file:
PAR_INIT	kademlia/DnsListDistribution.java	/^	private static final String PAR_INIT = "init";$/;"	f	class:DnsListDistribution	file:
PAR_INIT	kademlia/Turbulence.java	/^	private static final String PAR_INIT = "init";$/;"	f	class:Turbulence	file:
PAR_INITCAP	core/IdleProtocol.java	/^private static final String PAR_INITCAP = "capacity";$/;"	f	class:IdleProtocol	file:
PAR_IP_POOL_SIZE	kademlia/CustomDistribution.java	/^    private static final String PAR_IP_POOL_SIZE = "iPSize";$/;"	f	class:CustomDistribution	file:
PAR_JVM	rangesim/RangeSimulator.java	/^public static final String PAR_JVM = "jvm.options";$/;"	f	class:RangeSimulator
PAR_K	dynamics/WireFromFile.java	/^private static final String PAR_K = "k";$/;"	f	class:WireFromFile	file:
PAR_K	dynamics/WireRingLattice.java	/^private static final String PAR_K = "k";$/;"	f	class:WireRingLattice	file:
PAR_K	kademlia/KademliaProtocol.java	/^	final String PAR_K = "K";$/;"	f	class:KademliaProtocol
PAR_L1	vector/Normalizer.java	/^private static final String PAR_L1 = "l1";$/;"	f	class:Normalizer	file:
PAR_LINKABLE	config/FastConfig.java	/^private static final String PAR_LINKABLE = "linkable";$/;"	f	class:FastConfig	file:
PAR_LOCAL	transport/E2ETransport.java	/^private static final String PAR_LOCAL = "local";$/;"	f	class:E2ETransport	file:
PAR_LOGTIME	edsim/EDSimulator.java	/^private static final String PAR_LOGTIME = "simulation.logtime";	$/;"	f	class:EDSimulator	file:
PAR_LOOKUPS	kademlia/Discv5MultiTopicTrafficGenerator.java	/^    private final static String PAR_LOOKUPS = "randomlookups";$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
PAR_LOOKUPS	kademlia/Discv5ZipfTrafficGenerator.java	/^    private final static String PAR_LOOKUPS = "randomlookups";$/;"	f	class:Discv5ZipfTrafficGenerator	file:
PAR_LOOKUPS	kademlia/TurbulenceMultiTopic.java	/^    private final static String PAR_LOOKUPS = "randomlookups";$/;"	f	class:TurbulenceMultiTopic	file:
PAR_LOOKUP_BUCKET_ORDER	kademlia/Discv5TicketProtocol.java	/^	final String PAR_LOOKUP_BUCKET_ORDER = "LOOKUP_BUCKET_ORDER";$/;"	f	class:Discv5TicketProtocol
PAR_LVALUE	vector/PeakDistribution.java	/^private static final String PAR_LVALUE = "background";$/;"	f	class:PeakDistribution	file:
PAR_MAX	dynamics/DynamicNetwork.java	/^private static final String PAR_MAX = "maxsize";$/;"	f	class:DynamicNetwork	file:
PAR_MAX	dynamics/OscillatingNetwork.java	/^private static final String PAR_MAX = "maxsize";$/;"	f	class:OscillatingNetwork	file:
PAR_MAX	vector/LinearDistribution.java	/^private static final String PAR_MAX = "max";$/;"	f	class:LinearDistribution	file:
PAR_MAX	vector/UniformDistribution.java	/^private static final String PAR_MAX = "max";$/;"	f	class:UniformDistribution	file:
PAR_MAXD	reports/BallExpansion.java	/^private static final String PAR_MAXD = "maxd";$/;"	f	class:BallExpansion	file:
PAR_MAXDELAY	transport/UniformRandomTransport.java	/^private static final String PAR_MAXDELAY = "maxdelay";	$/;"	f	class:UniformRandomTransport	file:
PAR_MAXDEPTH	config/Configuration.java	/^static final String PAR_MAXDEPTH = "expressions.maxdepth";$/;"	f	class:Configuration
PAR_MAXSIZE	core/Network.java	/^private static final String PAR_MAXSIZE = "network.initialCapacity";$/;"	f	class:Network	file:
PAR_MAXSIZE	kademlia/Turbulence.java	/^	private static final String PAR_MAXSIZE = "maxsize";$/;"	f	class:Turbulence	file:
PAR_MAXTOPIC	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	private final static String PAR_MAXTOPIC = "maxtopicnum";$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
PAR_MAXTOPIC	kademlia/TurbulenceMultiTopic.java	/^	private final static String PAR_MAXTOPIC = "maxtopicnum";$/;"	f	class:TurbulenceMultiTopic	file:
PAR_MAX_REGISTRATION_RETRIES	kademlia/Discv5TicketProtocol.java	/^	final String PAR_MAX_REGISTRATION_RETRIES = "MAX_REGISTRATION_RETRIES";$/;"	f	class:Discv5TicketProtocol
PAR_MAX_REG_BUCKETS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_MAX_REG_BUCKETS = "MAX_REG_BUCKETS";$/;"	f	class:Discv5TicketProtocol
PAR_METHOD	dynamics/MethodInvoker.java	/^private static final String PAR_METHOD = "method";$/;"	f	class:MethodInvoker	file:
PAR_METHOD	dynamics/WireByMethod.java	/^private static final String PAR_METHOD = "method";$/;"	f	class:WireByMethod	file:
PAR_METHOD	reports/DegreeStats.java	/^private static final String PAR_METHOD = "method";$/;"	f	class:DegreeStats	file:
PAR_METHOD	vector/VectControl.java	/^protected static final String PAR_METHOD = "setter";$/;"	f	class:VectControl
PAR_METHOD1	vector/VectAngle.java	/^private static final String PAR_METHOD1 = "getter1";$/;"	f	class:VectAngle	file:
PAR_METHOD2	vector/VectAngle.java	/^private static final String PAR_METHOD2 = "getter2";$/;"	f	class:VectAngle	file:
PAR_MIN	dynamics/DynamicNetwork.java	/^private static final String PAR_MIN = "minsize";$/;"	f	class:DynamicNetwork	file:
PAR_MIN	dynamics/OscillatingNetwork.java	/^private static final String PAR_MIN = "minsize";$/;"	f	class:OscillatingNetwork	file:
PAR_MIN	vector/LinearDistribution.java	/^private static final String PAR_MIN = "min";$/;"	f	class:LinearDistribution	file:
PAR_MIN	vector/UniformDistribution.java	/^private static final String PAR_MIN = "min";$/;"	f	class:UniformDistribution	file:
PAR_MINDELAY	transport/UniformRandomTransport.java	/^private static final String PAR_MINDELAY = "mindelay";	$/;"	f	class:UniformRandomTransport	file:
PAR_MINSIZE	kademlia/Turbulence.java	/^	private static final String PAR_MINSIZE = "minsize";$/;"	f	class:Turbulence	file:
PAR_MINTOPIC	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	private final static String PAR_MINTOPIC = "mintopicnum";$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
PAR_MINTOPIC	kademlia/TurbulenceMultiTopic.java	/^	private final static String PAR_MINTOPIC = "mintopicnum";$/;"	f	class:TurbulenceMultiTopic	file:
PAR_N	reports/BallExpansion.java	/^private static final String PAR_N = "n";$/;"	f	class:BallExpansion	file:
PAR_N	reports/Clustering.java	/^private static final String PAR_N = "n";$/;"	f	class:Clustering	file:
PAR_N	reports/DegreeStats.java	/^private static final String PAR_N = "n";$/;"	f	class:DegreeStats	file:
PAR_N	reports/RandRemoval.java	/^private static final String PAR_N = "n";$/;"	f	class:RandRemoval	file:
PAR_NBUCKETS	kademlia/KademliaProtocol.java	/^	final String PAR_NBUCKETS = "NBUCKETS";$/;"	f	class:KademliaProtocol
PAR_NC	reports/GraphStats.java	/^private static final String PAR_NC = "nc";$/;"	f	class:GraphStats	file:
PAR_NEXTC	edsim/CDScheduler.java	/^private static final String PAR_NEXTC = "nextcycle";$/;"	f	class:CDScheduler	file:
PAR_NL	reports/GraphStats.java	/^private static final String PAR_NL = "nl";$/;"	f	class:GraphStats	file:
PAR_NODE	core/Network.java	/^private static final String PAR_NODE = "network.node";$/;"	f	class:Network	file:
PAR_NOMAIN	cdsim/CDSimulator.java	/^private static final String PAR_NOMAIN = "simulation.nodefaultcycle";$/;"	f	class:CDSimulator	file:
PAR_NUMBER_OF_REGISTRATIONS	kademlia/Discv5EvilTicketProtocol.java	/^    final String PAR_NUMBER_OF_REGISTRATIONS = "numberOfRegistrations";$/;"	f	class:Discv5EvilTicketProtocol
PAR_ORDER	config/Configuration.java	/^static final String PAR_ORDER = "order";$/;"	f	class:Configuration
PAR_PACK	dynamics/RandNI.java	/^private static final String PAR_PACK = "pack";$/;"	f	class:RandNI	file:
PAR_PACK	dynamics/StarNI.java	/^private static final String PAR_PACK = "pack";$/;"	f	class:StarNI	file:
PAR_PACK	dynamics/WireGraph.java	/^private static final String PAR_PACK = "pack";$/;"	f	class:WireGraph	file:
PAR_PARALLELREGISTRATIONS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_PARALLELREGISTRATIONS = "PARALLELREGISTRATIONS";$/;"	f	class:Discv5TicketProtocol
PAR_PBITS	edsim/Heap.java	/^private static final String PAR_PBITS = "pbits";$/;"	f	class:Heap	file:
PAR_PBITS_LEGACY	edsim/Heap.java	/^private static final String PAR_PBITS_LEGACY = "simulation.timebits";$/;"	f	class:Heap	file:
PAR_PEAKS	vector/PeakDistribution.java	/^private static final String PAR_PEAKS = "peaks";$/;"	f	class:PeakDistribution	file:
PAR_PERCENT_EVIL	kademlia/CustomDistribution.java	/^    private static final String PAR_PERCENT_EVIL = "percentEvil";$/;"	f	class:CustomDistribution	file:
PAR_PERIOD	dynamics/OscillatingNetwork.java	/^private static final String PAR_PERIOD = "period";$/;"	f	class:OscillatingNetwork	file:
PAR_PQ	edsim/EDSimulator.java	/^private static final String PAR_PQ = "simulation.eventqueue";$/;"	f	class:EDSimulator	file:
PAR_PROT	config/Configuration.java	/^static final String PAR_PROT = "protocol";$/;"	f	class:Configuration
PAR_PROT	core/Node.java	/^public static final String PAR_PROT = "protocol";$/;"	f	interface:Node
PAR_PROT	dynamics/MethodInvoker.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:MethodInvoker	file:
PAR_PROT	dynamics/RandNI.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:RandNI	file:
PAR_PROT	dynamics/StarNI.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:StarNI	file:
PAR_PROT	dynamics/WireGraph.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:WireGraph	file:
PAR_PROT	kademlia/Client.java	/^	private final static String PAR_PROT = "protocol";$/;"	f	class:Client	file:
PAR_PROT	kademlia/CustomDistribution.java	/^    private static final String PAR_PROT = "protocol";$/;"	f	class:CustomDistribution	file:
PAR_PROT	kademlia/Discv5TrafficGenerator.java	/^	private final static String PAR_PROT = "protocol";$/;"	f	class:Discv5TrafficGenerator	file:
PAR_PROT	kademlia/DnsListDistribution.java	/^	private static final String PAR_PROT = "protocol";$/;"	f	class:DnsListDistribution	file:
PAR_PROT	kademlia/EthClient.java	/^	private final static String PAR_PROT = "protocol";$/;"	f	class:EthClient	file:
PAR_PROT	kademlia/TrafficGenerator.java	/^	private final static String PAR_PROT = "protocol";$/;"	f	class:TrafficGenerator	file:
PAR_PROT	kademlia/Turbulence.java	/^	private static final String PAR_PROT = "protocol";$/;"	f	class:Turbulence	file:
PAR_PROT	reports/GraphObserver.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:GraphObserver	file:
PAR_PROT	transport/UniformRouterAssignment.java	/^private static final String PAR_PROT = "protocol"; $/;"	f	class:UniformRouterAssignment	file:
PAR_PROT	vector/SingleValueObserver.java	/^private static final String PAR_PROT = "protocol";$/;"	f	class:SingleValueObserver	file:
PAR_PROT	vector/VectControl.java	/^protected static final String PAR_PROT = "protocol";$/;"	f	class:VectControl
PAR_PROT1	vector/VectAngle.java	/^private static final String PAR_PROT1 = "protocol1";$/;"	f	class:VectAngle	file:
PAR_PROT2	vector/VectAngle.java	/^private static final String PAR_PROT2 = "protocol2";$/;"	f	class:VectAngle	file:
PAR_PROTOCOL	edsim/CDScheduler.java	/^private static final String PAR_PROTOCOL = "protocol";$/;"	f	class:CDScheduler	file:
PAR_PROTS	cdsim/NextCycle.java	/^private static final String PAR_PROTS = "protocol";$/;"	f	class:NextCycle	file:
PAR_RANDOM	core/CommonState.java	/^public static final String PAR_RANDOM = "random";$/;"	f	class:CommonState
PAR_RANGE	config/CheckConfig.java	/^private static final String PAR_RANGE = "range";$/;"	f	class:CheckConfig	file:
PAR_RANGE	rangesim/RangeSimulator.java	/^private static final String PAR_RANGE = "range";$/;"	f	class:RangeSimulator	file:
PAR_RANGES	rangesim/TaggedOutputStream.java	/^public static final String PAR_RANGES = "ranges";$/;"	f	class:TaggedOutputStream
PAR_RANGE_EXPERIMENT	kademlia/KademliaObserver.java	/^    private static final String PAR_RANGE_EXPERIMENT = "rangeExperiment";$/;"	f	class:KademliaObserver	file:
PAR_RATIO	transport/KingParser.java	/^private static final String PAR_RATIO = "ratio";$/;"	f	class:KingParser	file:
PAR_RATIO	transport/TriangularMatrixParser.java	/^private static final String PAR_RATIO = "ratio";$/;"	f	class:TriangularMatrixParser	file:
PAR_REDIRECT	Simulator.java	/^public static final String PAR_REDIRECT = "simulation.stdout";$/;"	f	class:Simulator
PAR_REFRESHTIME	kademlia/KademliaProtocol.java	/^	final String PAR_REFRESHTIME = "REFRESH";$/;"	f	class:KademliaProtocol
PAR_REFRESH_SEARCH_TABLE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_REFRESH_SEARCH_TABLE = "REFRESH_SEARCH_TABLE";$/;"	f	class:Discv5TicketProtocol
PAR_REFRESH_TICKET_TABLE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_REFRESH_TICKET_TABLE = "REFRESH_TICKET_TABLE";$/;"	f	class:Discv5TicketProtocol
PAR_REGTIMEOUT	kademlia/Discv5TicketProtocol.java	/^	final String PAR_REGTIMEOUT = "REG_TIMEOUT";$/;"	f	class:Discv5TicketProtocol
PAR_REM	kademlia/Turbulence.java	/^	private static final String PAR_REM = "p_rem";$/;"	f	class:Turbulence	file:
PAR_REPORT_MSG	kademlia/KademliaObserver.java	/^    private static final String PAR_REPORT_MSG = "reportMsg";$/;"	f	class:KademliaObserver	file:
PAR_REPORT_MSG	kademlia/KademliaProtocol.java	/^	final String PAR_REPORT_MSG = "REPORT_MSG";$/;"	f	class:KademliaProtocol
PAR_REPORT_REG	kademlia/KademliaObserver.java	/^    private static final String PAR_REPORT_REG = "reportReg";$/;"	f	class:KademliaObserver	file:
PAR_RNDSTART	edsim/CDScheduler.java	/^private static final String PAR_RNDSTART = "randstart";$/;"	f	class:CDScheduler	file:
PAR_ROUND_ROBIN_TOPIC_TABLE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_ROUND_ROBIN_TOPIC_TABLE = "ROUND_ROBIN";$/;"	f	class:Discv5TicketProtocol
PAR_SEARCH_TABLE_BUCKET_SIZE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_SEARCH_TABLE_BUCKET_SIZE = "SEARCH_TABLE_BUCKET_SIZE";$/;"	f	class:Discv5TicketProtocol
PAR_SEARCH_TABLE_REPLACEMENTS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_SEARCH_TABLE_REPLACEMENTS = "SEARCH_TABLE_REPLACEMENTS";$/;"	f	class:Discv5TicketProtocol
PAR_SEED	core/CommonState.java	/^public static final String PAR_SEED = "random.seed";$/;"	f	class:CommonState
PAR_SHUFFLE	cdsim/FullNextCycle.java	/^private static final String PAR_SHUFFLE = "shuffle";$/;"	f	class:FullNextCycle	file:
PAR_SIZE	core/Network.java	/^private static final String PAR_SIZE = "network.size";$/;"	f	class:Network	file:
PAR_SIZE	edsim/Heap.java	/^private static final String PAR_SIZE = "size";$/;"	f	class:Heap	file:
PAR_SOURCE	vector/VectCopy.java	/^private static final String PAR_SOURCE = "source";$/;"	f	class:VectCopy	file:
PAR_STATS	reports/BallExpansion.java	/^private static final String PAR_STATS = "stats";$/;"	f	class:BallExpansion	file:
PAR_STATS	reports/ConnectivityObserver.java	/^private static final String PAR_STATS = "stats";$/;"	f	class:ConnectivityObserver	file:
PAR_STEP	cdsim/DaemonProtocol.java	/^private static final String PAR_STEP = "cstep";$/;"	f	class:DaemonProtocol	file:
PAR_STEP	core/Scheduler.java	/^private static final String PAR_STEP = "step";$/;"	f	class:Scheduler	file:
PAR_STEP	kademlia/KademliaObserver.java	/^    private static final String PAR_STEP = "step";$/;"	f	class:KademliaObserver	file:
PAR_STNBUCKETS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_STNBUCKETS = "STNBUCKETS";$/;"	f	class:Discv5TicketProtocol
PAR_STOP_REGISTER_MIN_REGS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_STOP_REGISTER_MIN_REGS = "STOP_REGISTER_MIN_REGS";$/;"	f	class:Discv5TicketProtocol
PAR_STOP_REGISTER_WINDOW_SIZE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_STOP_REGISTER_WINDOW_SIZE = "STOP_REGISTER_WINDOW_SIZE";$/;"	f	class:Discv5TicketProtocol
PAR_SUBST	dynamics/DynamicNetwork.java	/^private static final String PAR_SUBST = "substitute";$/;"	f	class:DynamicNetwork	file:
PAR_TICKET_NEIGHBOURS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TICKET_NEIGHBOURS = "TICKET_NEIGHBOURS";$/;"	f	class:Discv5TicketProtocol
PAR_TICKET_REMOVE_AFTER_REG	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TICKET_REMOVE_AFTER_REG = "TICKET_REMOVE_AFTER_REG";$/;"	f	class:Discv5TicketProtocol
PAR_TICKET_TABLE_BUCKET_SIZE	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TICKET_TABLE_BUCKET_SIZE = "TICKET_TABLE_BUCKET_SIZE";$/;"	f	class:Discv5TicketProtocol
PAR_TICKET_TABLE_REPLACEMENTS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TICKET_TABLE_REPLACEMENTS = "TICKET_TABLE_REPLACEMENTS";$/;"	f	class:Discv5TicketProtocol
PAR_TIME	rangesim/TaggedOutputStream.java	/^public static final String PAR_TIME = "simulation.timed-observers";$/;"	f	class:TaggedOutputStream
PAR_TOPICNUM	kademlia/CustomDistribution.java	/^    private final static String PAR_TOPICNUM = "topicnum";$/;"	f	class:CustomDistribution	file:
PAR_TOPICNUM	kademlia/Discv5ZipfTrafficGenerator.java	/^	private final static String PAR_TOPICNUM = "topicnum";$/;"	f	class:Discv5ZipfTrafficGenerator	file:
PAR_TOPICNUM	kademlia/TurbulenceSingleTopic.java	/^	private final static String PAR_TOPICNUM = "topicnum";$/;"	f	class:TurbulenceSingleTopic	file:
PAR_TOPIC_TABLE_CAP	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TOPIC_TABLE_CAP = "TOPIC_TABLE_CAP";$/;"	f	class:Discv5TicketProtocol
PAR_TRACE	reports/DegreeStats.java	/^private static final String PAR_TRACE = "trace";$/;"	f	class:DegreeStats	file:
PAR_TRANSPORT	config/FastConfig.java	/^private static final String PAR_TRANSPORT = "transport";$/;"	f	class:FastConfig	file:
PAR_TRANSPORT	kademlia/KademliaProtocol.java	/^	private static final String PAR_TRANSPORT = "transport";$/;"	f	class:KademliaProtocol	file:
PAR_TRANSPORT	kademlia/StateBuilder.java	/^	private static final String PAR_TRANSPORT = "transport";$/;"	f	class:StateBuilder	file:
PAR_TRANSPORT	kademlia/Turbulence.java	/^	private static final String PAR_TRANSPORT = "transport";$/;"	f	class:Turbulence	file:
PAR_TRANSPORT	transport/UnreliableTransport.java	/^private static final String PAR_TRANSPORT = "transport";$/;"	f	class:UnreliableTransport	file:
PAR_TTNBUCKETS	kademlia/Discv5TicketProtocol.java	/^	final String PAR_TTNBUCKETS = "TTNBUCKETS";$/;"	f	class:Discv5TicketProtocol
PAR_TYPE	reports/ConnectivityObserver.java	/^private static final String PAR_TYPE = "type";$/;"	f	class:ConnectivityObserver	file:
PAR_TYPE	reports/DegreeStats.java	/^private static final String PAR_TYPE = "linktype";$/;"	f	class:DegreeStats	file:
PAR_UNDIR	dynamics/WireGraph.java	/^private static final String PAR_UNDIR = "undir";$/;"	f	class:WireGraph	file:
PAR_UNDIR	reports/GraphObserver.java	/^protected static final String PAR_UNDIR = "undir";$/;"	f	class:GraphObserver
PAR_UNDIR_ALT	dynamics/WireGraph.java	/^private static final String PAR_UNDIR_ALT = "undirected";$/;"	f	class:WireGraph	file:
PAR_UNDIR_ALT	reports/GraphObserver.java	/^private static final String PAR_UNDIR_ALT = "undirected";$/;"	f	class:GraphObserver	file:
PAR_UNTIL	core/Scheduler.java	/^private static final String PAR_UNTIL = "until";$/;"	f	class:Scheduler	file:
PAR_VALUE	vector/PeakDistribution.java	/^private static final String PAR_VALUE = "value";$/;"	f	class:PeakDistribution	file:
PAR_ZIPF	kademlia/CustomDistribution.java	/^    private final static String PAR_ZIPF = "zipf";$/;"	f	class:CustomDistribution	file:
PAR_ZIPF	kademlia/Discv5ZipfTrafficGenerator.java	/^	private final static String PAR_ZIPF = "zipf";$/;"	f	class:Discv5ZipfTrafficGenerator	file:
PAR_ZIPF	kademlia/TurbulenceMultiTopic.java	/^	private final static String PAR_ZIPF = "zipf";$/;"	f	class:TurbulenceMultiTopic	file:
PAR_ZIPF	kademlia/TurbulenceSingleTopic.java	/^	private final static String PAR_ZIPF = "zipf";$/;"	f	class:TurbulenceSingleTopic	file:
PHASE_UNKNOWN	core/CommonState.java	/^public static final int PHASE_UNKNOWN = 0;$/;"	f	class:CommonState
POST_SIMULATION	core/CommonState.java	/^public static final int POST_SIMULATION = 1;$/;"	f	class:CommonState
ParsedProperties	config/ParsedProperties.java	/^public	ParsedProperties( String filename ) throws IOException {$/;"	m	class:ParsedProperties
ParsedProperties	config/ParsedProperties.java	/^public	ParsedProperties( String[] pars ) {$/;"	m	class:ParsedProperties
ParsedProperties	config/ParsedProperties.java	/^public class ParsedProperties extends ConfigProperties {$/;"	c
PeakDistribution	vector/PeakDistribution.java	/^public PeakDistribution(String prefix)$/;"	m	class:PeakDistribution
PeakDistribution	vector/PeakDistribution.java	/^public class PeakDistribution extends VectControl$/;"	c
PrefixSubGraph	graph/PrefixSubGraph.java	/^public PrefixSubGraph( Graph g ) {$/;"	m	class:PrefixSubGraph
PrefixSubGraph	graph/PrefixSubGraph.java	/^public class PrefixSubGraph implements Graph {$/;"	c
PriorityQ	edsim/PriorityQ.java	/^public interface PriorityQ {$/;"	i
ProcessHandler	rangesim/ProcessHandler.java	/^public interface ProcessHandler$/;"	i
ProcessManager	rangesim/ProcessManager.java	/^public ProcessManager()$/;"	m	class:ProcessManager
ProcessManager	rangesim/ProcessManager.java	/^public class ProcessManager extends Thread$/;"	c
Protocol	core/Protocol.java	/^public interface Protocol extends Cloneable$/;"	i
RANDOM_BUCKET_ORDER	kademlia/KademliaCommonConfig.java	/^    public static final int RANDOM_BUCKET_ORDER = 0;$/;"	f	class:KademliaCommonConfig
REFRESHTIME	kademlia/KademliaCommonConfig.java	/^	public static int REFRESHTIME = 10*100; \/\/periodic time used to check nodes down in k-buckets$/;"	f	class:KademliaCommonConfig
REG_TIMEOUT	kademlia/KademliaCommonConfig.java	/^	public static int REG_TIMEOUT = 1000000000;$/;"	f	class:KademliaCommonConfig
REG_TIMEOUT	kademlia/Timeout.java	/^	public static final int REG_TIMEOUT = 102;$/;"	f	class:Timeout
REG_WINDOW	kademlia/KademliaCommonConfig.java	/^    public static int REG_WINDOW = 10000;$/;"	f	class:KademliaCommonConfig
REPORT_MSG_ACTIVATED	kademlia/KademliaCommonConfig.java	/^    public static int REPORT_MSG_ACTIVATED = 0; $/;"	f	class:KademliaCommonConfig
RETRY	kademlia/RetryTimeout.java	/^	public static final int RETRY = 200;$/;"	f	class:RetryTimeout
ROUND_ROBIN_TOPIC_TABLE	kademlia/KademliaCommonConfig.java	/^    public static int ROUND_ROBIN_TOPIC_TABLE = 2;$/;"	f	class:KademliaCommonConfig
RandNI	dynamics/RandNI.java	/^public RandNI(String prefix)$/;"	m	class:RandNI
RandNI	dynamics/RandNI.java	/^public class RandNI implements NodeInitializer {$/;"	c
RandNextCycle	edsim/RandNextCycle.java	/^public RandNextCycle(String n) { super(n); }$/;"	m	class:RandNextCycle
RandNextCycle	edsim/RandNextCycle.java	/^public class RandNextCycle extends NextCycleEvent {$/;"	c
RandPermutation	util/RandPermutation.java	/^public RandPermutation( Random r ) { this.r=r; }$/;"	m	class:RandPermutation
RandPermutation	util/RandPermutation.java	/^public RandPermutation( int k, Random r ) {$/;"	m	class:RandPermutation
RandPermutation	util/RandPermutation.java	/^public class RandPermutation implements IndexIterator {$/;"	c
RandRemoval	reports/RandRemoval.java	/^public RandRemoval(String name)$/;"	m	class:RandRemoval
RandRemoval	reports/RandRemoval.java	/^public class RandRemoval extends GraphObserver$/;"	c
RangeSimulator	rangesim/RangeSimulator.java	/^RangeSimulator()$/;"	m	class:RangeSimulator
RangeSimulator	rangesim/RangeSimulator.java	/^public RangeSimulator(String[] args)$/;"	m	class:RangeSimulator
RangeSimulator	rangesim/RangeSimulator.java	/^public class RangeSimulator implements ProcessHandler$/;"	c
RefreshBuckets	kademlia/RefreshBuckets.java	/^	public RefreshBuckets(String prefix) {$/;"	m	class:RefreshBuckets
RefreshBuckets	kademlia/RefreshBuckets.java	/^public class RefreshBuckets implements Control {$/;"	c
RegRandNextCycle	edsim/RegRandNextCycle.java	/^public RegRandNextCycle(String n) {$/;"	m	class:RegRandNextCycle
RegRandNextCycle	edsim/RegRandNextCycle.java	/^public class RegRandNextCycle extends NextCycleEvent {$/;"	c
RegisterOperation	kademlia/operations/RegisterOperation.java	/^	public RegisterOperation(BigInteger srcNode, long timestamp, Topic t, TopicRegistration r) {$/;"	m	class:RegisterOperation
RegisterOperation	kademlia/operations/RegisterOperation.java	/^    public RegisterOperation(BigInteger srcNode, long timestamp, Topic t, BigInteger targetAddr) {$/;"	m	class:RegisterOperation
RegisterOperation	kademlia/operations/RegisterOperation.java	/^public class RegisterOperation extends Operation{$/;"	c
RegistrationLog	kademlia/RegistrationLog.java	/^	public RegistrationLog(BigInteger node, long currTime) {$/;"	m	class:RegistrationLog
RegistrationLog	kademlia/RegistrationLog.java	/^public class RegistrationLog {$/;"	c
RetryTimeout	kademlia/RetryTimeout.java	/^    public RetryTimeout(Topic topic, BigInteger nodeSrc) {$/;"	m	class:RetryTimeout
RetryTimeout	kademlia/RetryTimeout.java	/^public class RetryTimeout extends SimpleEvent {$/;"	c
RouterInfo	transport/RouterInfo.java	/^public interface RouterInfo$/;"	i
RoutingTable	kademlia/RoutingTable.java	/^	public RoutingTable(int nBuckets, int k, int maxReplacements) {$/;"	m	class:RoutingTable
RoutingTable	kademlia/RoutingTable.java	/^public class RoutingTable implements Cloneable {$/;"	c
SEARCH_BUCKET_SIZE	kademlia/KademliaCommonConfig.java	/^    public static int SEARCH_BUCKET_SIZE = 3;$/;"	f	class:KademliaCommonConfig
SEARCH_REFRESH	kademlia/KademliaCommonConfig.java	/^    public static int SEARCH_REFRESH = 0;$/;"	f	class:KademliaCommonConfig
SEARCH_TABLE_REPLACEMENTS	kademlia/KademliaCommonConfig.java	/^    public static int SEARCH_TABLE_REPLACEMENTS=0;$/;"	f	class:KademliaCommonConfig
SLOT	kademlia/KademliaCommonConfig.java	/^	public static int SLOT = 1000;$/;"	f	class:KademliaCommonConfig
STNBUCKETS	kademlia/KademliaCommonConfig.java	/^    public static int STNBUCKETS = 16; $/;"	f	class:KademliaCommonConfig
STOP_REGISTER_MIN_REGS	kademlia/KademliaCommonConfig.java	/^    public static int STOP_REGISTER_MIN_REGS = 3;$/;"	f	class:KademliaCommonConfig
STOP_REGISTER_WINDOW_SIZE	kademlia/KademliaCommonConfig.java	/^    public static int STOP_REGISTER_WINDOW_SIZE = 0;$/;"	f	class:KademliaCommonConfig
Scheduler	core/Scheduler.java	/^public Scheduler(String prefix) {$/;"	m	class:Scheduler
Scheduler	core/Scheduler.java	/^public Scheduler(String prefix, boolean useDefault)$/;"	m	class:Scheduler
Scheduler	core/Scheduler.java	/^public class Scheduler {$/;"	c
SearchTable	kademlia/SearchTable.java	/^	public SearchTable(int nBuckets, int k, int maxReplacements, Discv5TicketProtocol protocol, Topic t, int myPid,$/;"	m	class:SearchTable
SearchTable	kademlia/SearchTable.java	/^public class SearchTable extends RoutingTable {$/;"	c
Setter	vector/Setter.java	/^public Setter(String prefix, String protocol, String methodn) {$/;"	m	class:Setter
Setter	vector/Setter.java	/^public class Setter {$/;"	c
Shuffle	cdsim/Shuffle.java	/^public Shuffle(String prefix) {}$/;"	m	class:Shuffle
Shuffle	cdsim/Shuffle.java	/^public class Shuffle implements Control {$/;"	c
SimpleEvent	kademlia/SimpleEvent.java	/^	public SimpleEvent() {$/;"	m	class:SimpleEvent
SimpleEvent	kademlia/SimpleEvent.java	/^	public SimpleEvent(int type) {$/;"	m	class:SimpleEvent
SimpleEvent	kademlia/SimpleEvent.java	/^public class SimpleEvent {$/;"	c
Simulator	Simulator.java	/^public class Simulator {$/;"	c
SingleValue	vector/SingleValue.java	/^public interface SingleValue {$/;"	i
SingleValueComparator	vector/SingleValueComparator.java	/^public SingleValueComparator(int pid) { this.pid = pid; }$/;"	m	class:SingleValueComparator
SingleValueComparator	vector/SingleValueComparator.java	/^public class SingleValueComparator implements Comparator $/;"	c
SingleValueHolder	vector/SingleValueHolder.java	/^public SingleValueHolder(String prefix)$/;"	m	class:SingleValueHolder
SingleValueHolder	vector/SingleValueHolder.java	/^public class SingleValueHolder $/;"	c
SingleValueObserver	vector/SingleValueObserver.java	/^public SingleValueObserver(String name)$/;"	m	class:SingleValueObserver
SingleValueObserver	vector/SingleValueObserver.java	/^public class SingleValueObserver implements Control {$/;"	c
StarNI	dynamics/StarNI.java	/^public StarNI(String prefix) {$/;"	m	class:StarNI
StarNI	dynamics/StarNI.java	/^public class StarNI implements NodeInitializer {$/;"	c
StateBuilder	kademlia/StateBuilder.java	/^	public StateBuilder(String prefix) {$/;"	m	class:StateBuilder
StateBuilder	kademlia/StateBuilder.java	/^public class StateBuilder implements peersim.core.Control {$/;"	c
StringListParser	util/StringListParser.java	/^private StringListParser() { }$/;"	m	class:StringListParser	file:
StringListParser	util/StringListParser.java	/^public class StringListParser$/;"	c
SubGraphEdges	graph/SubGraphEdges.java	/^public SubGraphEdges( Graph g ) {$/;"	m	class:SubGraphEdges
SubGraphEdges	graph/SubGraphEdges.java	/^public class SubGraphEdges implements Graph {$/;"	c
TAG	rangesim/TaggedOutputStream.java	/^public static final int TAG = 1;$/;"	f	class:TaggedOutputStream
TICKET_BUCKET_SIZE	kademlia/KademliaCommonConfig.java	/^    public static int TICKET_BUCKET_SIZE = 3;$/;"	f	class:KademliaCommonConfig
TICKET_NEIGHBOURS	kademlia/KademliaCommonConfig.java	/^    public static int TICKET_NEIGHBOURS = 0;$/;"	f	class:KademliaCommonConfig
TICKET_REFRESH	kademlia/KademliaCommonConfig.java	/^    public static int TICKET_REFRESH = 0;$/;"	f	class:KademliaCommonConfig
TICKET_REMOVE_AFTER_REG	kademlia/KademliaCommonConfig.java	/^    public static int TICKET_REMOVE_AFTER_REG=0;$/;"	f	class:KademliaCommonConfig
TICKET_TABLE_REPLACEMENTS	kademlia/KademliaCommonConfig.java	/^    public static int TICKET_TABLE_REPLACEMENTS=0;$/;"	f	class:KademliaCommonConfig
TICKET_TIMEOUT	kademlia/Timeout.java	/^	public static final int TICKET_TIMEOUT = 101;$/;"	f	class:Timeout
TIMEOUT	kademlia/Timeout.java	/^	public static final int TIMEOUT = 100;$/;"	f	class:Timeout
TOPIC_PEER_LIMIT	kademlia/KademliaCommonConfig.java	/^    public static int TOPIC_PEER_LIMIT = MAXCONNECTIONS; \/\/how many high quality nodes do we want to find for each topic; after this number we stop$/;"	f	class:KademliaCommonConfig
TOPIC_TABLE_CAP	kademlia/KademliaCommonConfig.java	/^	public static int TOPIC_TABLE_CAP = 10000; \/\/the number of topics per node we can regiter$/;"	f	class:KademliaCommonConfig
TTNBUCKETS	kademlia/KademliaCommonConfig.java	/^    public static int TTNBUCKETS = 10; $/;"	f	class:KademliaCommonConfig
TaggedOutputStream	rangesim/TaggedOutputStream.java	/^public TaggedOutputStream(String prefix)$/;"	m	class:TaggedOutputStream
TaggedOutputStream	rangesim/TaggedOutputStream.java	/^public class TaggedOutputStream extends PrintStream$/;"	c
TestVectors	vector/TestVectors.java	/^public TestVectors(String prefix) { super(prefix); }$/;"	m	class:TestVectors
TestVectors	vector/TestVectors.java	/^public class TestVectors extends SingleValueHolder$/;"	c
Ticket	kademlia/Ticket.java	/^    public Ticket(Topic topic, long req_time, long wait_time, KademliaNode src, long delay, int queueOccupancy) {$/;"	m	class:Ticket
Ticket	kademlia/Ticket.java	/^public class Ticket implements Comparable<Ticket> {$/;"	c
TicketOperation	kademlia/operations/TicketOperation.java	/^    public TicketOperation(BigInteger srcNode, long timestamp, Topic t) {$/;"	m	class:TicketOperation
TicketOperation	kademlia/operations/TicketOperation.java	/^public class TicketOperation extends Operation{$/;"	c
TicketReplyBody	kademlia/Message.java	/^		public TicketReplyBody(Ticket ticket, BigInteger[] neighbours) {$/;"	m	class:Message.TicketReplyBody
TicketReplyBody	kademlia/Message.java	/^	static class TicketReplyBody{$/;"	c	class:Message
TicketTable	kademlia/TicketTable.java	/^	public TicketTable(int nBuckets, int k, int maxReplacements,Discv5TicketProtocol protocol,Topic t, int myPid, boolean refresh) {$/;"	m	class:TicketTable
TicketTable	kademlia/TicketTable.java	/^public class TicketTable extends RoutingTable {$/;"	c
Timeout	kademlia/Timeout.java	/^	public Timeout(BigInteger node, long msgID, long opID) {$/;"	m	class:Timeout
Timeout	kademlia/Timeout.java	/^    public Timeout(Topic topic) {$/;"	m	class:Timeout
Timeout	kademlia/Timeout.java	/^    public Timeout(Topic topic, BigInteger nodeSrc) {$/;"	m	class:Timeout
Timeout	kademlia/Timeout.java	/^public class Timeout extends SimpleEvent {$/;"	c
Topic	kademlia/Topic.java	/^    public Topic() {$/;"	m	class:Topic
Topic	kademlia/Topic.java	/^    public Topic(BigInteger hostID, String topic) {$/;"	m	class:Topic
Topic	kademlia/Topic.java	/^    public Topic(String topic){$/;"	m	class:Topic
Topic	kademlia/Topic.java	/^    public Topic(Topic t){$/;"	m	class:Topic
Topic	kademlia/Topic.java	/^public class Topic implements Comparable<Topic> {$/;"	c
TopicLookupBody	kademlia/Message.java	/^		public TopicLookupBody(TopicRegistration [] registrations, BigInteger[] neighbours) {$/;"	m	class:Message.TopicLookupBody
TopicLookupBody	kademlia/Message.java	/^	static class TopicLookupBody{$/;"	c	class:Message
TopicRegistration	kademlia/TopicRegistration.java	/^    public TopicRegistration(KademliaNode node) {$/;"	m	class:TopicRegistration
TopicRegistration	kademlia/TopicRegistration.java	/^    public TopicRegistration(KademliaNode node, Topic topic) {$/;"	m	class:TopicRegistration
TopicRegistration	kademlia/TopicRegistration.java	/^    public TopicRegistration(KademliaNode node, Topic topic, long curr_time) {$/;"	m	class:TopicRegistration
TopicRegistration	kademlia/TopicRegistration.java	/^    public TopicRegistration(TopicRegistration r) {$/;"	m	class:TopicRegistration
TopicRegistration	kademlia/TopicRegistration.java	/^public class TopicRegistration implements Comparable<TopicRegistration>{$/;"	c
TopicTable	kademlia/TopicTable.java	/^interface TopicTable {$/;"	i
TrafficGenerator	kademlia/TrafficGenerator.java	/^	public TrafficGenerator(String prefix) {$/;"	m	class:TrafficGenerator
TrafficGenerator	kademlia/TrafficGenerator.java	/^public class TrafficGenerator implements Control {$/;"	c
Transport	transport/Transport.java	/^public interface Transport extends Protocol$/;"	i
TriangularMatrixParser	transport/TriangularMatrixParser.java	/^public TriangularMatrixParser(String prefix)$/;"	m	class:TriangularMatrixParser
TriangularMatrixParser	transport/TriangularMatrixParser.java	/^public class TriangularMatrixParser implements Control$/;"	c
Turbulence	kademlia/Turbulence.java	/^	public Turbulence(String prefix) {$/;"	m	class:Turbulence
Turbulence	kademlia/Turbulence.java	/^public class Turbulence implements Control {$/;"	c
TurbulenceMultiTopic	kademlia/TurbulenceMultiTopic.java	/^		public TurbulenceMultiTopic(String prefix) {$/;"	m	class:TurbulenceMultiTopic
TurbulenceMultiTopic	kademlia/TurbulenceMultiTopic.java	/^public class TurbulenceMultiTopic extends Turbulence{$/;"	c
TurbulenceSingleTopic	kademlia/TurbulenceSingleTopic.java	/^		public TurbulenceSingleTopic(String prefix) {$/;"	m	class:TurbulenceSingleTopic
TurbulenceSingleTopic	kademlia/TurbulenceSingleTopic.java	/^public class TurbulenceSingleTopic extends Turbulence{$/;"	c
UNIFORM_ID_DISTRIBUTION	kademlia/KademliaCommonConfig.java	/^    public static String UNIFORM_ID_DISTRIBUTION = "uniform";$/;"	f	class:KademliaCommonConfig
UNKNOWN	Simulator.java	/^public static final int UNKNOWN = -1;$/;"	f	class:Simulator
UNKNOWN	config/CheckConfig.java	/^protected static final int UNKNOWN = -1;$/;"	f	class:CheckConfig
UndirectedGraph	graph/UndirectedGraph.java	/^public UndirectedGraph( Graph g ) {$/;"	m	class:UndirectedGraph
UndirectedGraph	graph/UndirectedGraph.java	/^public class UndirectedGraph implements Graph {$/;"	c
UniformDistribution	vector/UniformDistribution.java	/^public UniformDistribution(String prefix)$/;"	m	class:UniformDistribution
UniformDistribution	vector/UniformDistribution.java	/^public class UniformDistribution extends VectControl implements NodeInitializer$/;"	c
UniformRandomGenerator	kademlia/UniformRandomGenerator.java	/^	public UniformRandomGenerator(int aBits, Random r) {$/;"	m	class:UniformRandomGenerator
UniformRandomGenerator	kademlia/UniformRandomGenerator.java	/^	public UniformRandomGenerator(int aBits, long aSeed) {$/;"	m	class:UniformRandomGenerator
UniformRandomGenerator	kademlia/UniformRandomGenerator.java	/^public final class UniformRandomGenerator {$/;"	c
UniformRandomTransport	transport/UniformRandomTransport.java	/^public UniformRandomTransport(String prefix)$/;"	m	class:UniformRandomTransport
UniformRandomTransport	transport/UniformRandomTransport.java	/^public final class UniformRandomTransport implements Transport$/;"	c
UniformRouterAssignment	transport/UniformRouterAssignment.java	/^public UniformRouterAssignment(String prefix)$/;"	m	class:UniformRouterAssignment
UniformRouterAssignment	transport/UniformRouterAssignment.java	/^public class UniformRouterAssignment implements Control$/;"	c
UnreliableTransport	transport/UnreliableTransport.java	/^public UnreliableTransport(String prefix)$/;"	m	class:UnreliableTransport
UnreliableTransport	transport/UnreliableTransport.java	/^public final class UnreliableTransport implements Transport$/;"	c
Util	kademlia/Util.java	/^public class Util {$/;"	c
ValueDumper	vector/ValueDumper.java	/^public ValueDumper(String prefix) {$/;"	m	class:ValueDumper
ValueDumper	vector/ValueDumper.java	/^public class ValueDumper extends VectControl {$/;"	c
VectAngle	vector/VectAngle.java	/^public VectAngle(String prefix)$/;"	m	class:VectAngle
VectAngle	vector/VectAngle.java	/^public class VectAngle implements Control$/;"	c
VectControl	vector/VectControl.java	/^protected VectControl(String prefix)$/;"	m	class:VectControl
VectControl	vector/VectControl.java	/^public abstract class VectControl implements Control {$/;"	c
VectCopy	vector/VectCopy.java	/^public VectCopy(String prefix)$/;"	m	class:VectCopy
VectCopy	vector/VectCopy.java	/^public class VectCopy extends VectControl implements  NodeInitializer {$/;"	c
VectorComparator	vector/VectorComparator.java	/^public VectorComparator(int pid, String methodName)$/;"	m	class:VectorComparator
VectorComparator	vector/VectorComparator.java	/^public class VectorComparator implements Comparator$/;"	c
VectorObserver	vector/VectorObserver.java	/^public VectorObserver(String prefix) {$/;"	m	class:VectorObserver
VectorObserver	vector/VectorObserver.java	/^public class VectorObserver extends VectControl {$/;"	c
WHITE	graph/GraphAlgorithms.java	/^public final static int WHITE=0;$/;"	f	class:GraphAlgorithms
WeightedRandPerm	util/WeightedRandPerm.java	/^public WeightedRandPerm( Random r, double[] weights ) {$/;"	m	class:WeightedRandPerm
WeightedRandPerm	util/WeightedRandPerm.java	/^public class WeightedRandPerm implements IndexIterator {$/;"	c
WireByMethod	dynamics/WireByMethod.java	/^public WireByMethod(String prefix)$/;"	m	class:WireByMethod
WireByMethod	dynamics/WireByMethod.java	/^public class WireByMethod extends WireGraph {$/;"	c
WireFromFile	dynamics/WireFromFile.java	/^public WireFromFile(String prefix) {$/;"	m	class:WireFromFile
WireFromFile	dynamics/WireFromFile.java	/^public class WireFromFile extends WireGraph {$/;"	c
WireGraph	dynamics/WireGraph.java	/^protected WireGraph(String prefix) {$/;"	m	class:WireGraph
WireGraph	dynamics/WireGraph.java	/^public abstract class WireGraph implements Control$/;"	c
WireKOut	dynamics/WireKOut.java	/^public WireKOut(String prefix)$/;"	m	class:WireKOut
WireKOut	dynamics/WireKOut.java	/^public class WireKOut extends WireGraph {$/;"	c
WireRegRootedTree	dynamics/WireRegRootedTree.java	/^public WireRegRootedTree(String prefix)$/;"	m	class:WireRegRootedTree
WireRegRootedTree	dynamics/WireRegRootedTree.java	/^public class WireRegRootedTree extends WireGraph {$/;"	c
WireRingLattice	dynamics/WireRingLattice.java	/^public WireRingLattice(String prefix)$/;"	m	class:WireRingLattice
WireRingLattice	dynamics/WireRingLattice.java	/^public class WireRingLattice extends WireGraph {$/;"	c
WireScaleFreeBA	dynamics/WireScaleFreeBA.java	/^public WireScaleFreeBA(String prefix)$/;"	m	class:WireScaleFreeBA
WireScaleFreeBA	dynamics/WireScaleFreeBA.java	/^public class WireScaleFreeBA extends WireGraph {$/;"	c
WireScaleFreeDM	dynamics/WireScaleFreeDM.java	/^public WireScaleFreeDM(String prefix)$/;"	m	class:WireScaleFreeDM
WireScaleFreeDM	dynamics/WireScaleFreeDM.java	/^public class WireScaleFreeDM extends WireGraph {$/;"	c
WireStar	dynamics/WireStar.java	/^public WireStar(String prefix) { super(prefix); }$/;"	m	class:WireStar
WireStar	dynamics/WireStar.java	/^public class WireStar extends WireGraph {$/;"	c
WireWS	dynamics/WireWS.java	/^public WireWS(String prefix) {$/;"	m	class:WireWS
WireWS	dynamics/WireWS.java	/^public class WireWS extends WireGraph {$/;"	c
_ALREADY_INSTALLED	kademlia/KademliaProtocol.java	/^	protected static boolean _ALREADY_INSTALLED = false;$/;"	f	class:KademliaProtocol
_init	kademlia/Discv5EvilTicketProtocol.java	/^	protected void _init() {$/;"	m	class:Discv5EvilTicketProtocol
_init	kademlia/Discv5TicketProtocol.java	/^	protected void _init() {$/;"	m	class:Discv5TicketProtocol
_init	kademlia/KademliaProtocol.java	/^	protected void _init() {$/;"	m	class:KademliaProtocol
acceptedReg	kademlia/TicketTable.java	/^	public void acceptedReg(BigInteger node) {$/;"	m	class:TicketTable
accountMsg	kademlia/KademliaObserver.java	/^    private static void accountMsg(Message m) {$/;"	m	class:KademliaObserver	file:
accuracy	vector/SingleValueObserver.java	/^private final double accuracy;$/;"	f	class:SingleValueObserver	file:
ackId	kademlia/Message.java	/^	public long ackId;$/;"	f	class:Message
active	core/Scheduler.java	/^public boolean active() {$/;"	m	class:Scheduler
active	core/Scheduler.java	/^public boolean active(long time) {$/;"	m	class:Scheduler
activeRegistrations	kademlia/KademliaObserver.java	/^    public static TreeMap<String, Integer> activeRegistrations = new TreeMap<String, Integer>();$/;"	f	class:KademliaObserver
activeRegistrations	kademlia/TicketTable.java	/^    private int[]	 activeRegistrations;$/;"	f	class:TicketTable	file:
activeRegistrationsByMalicious	kademlia/KademliaObserver.java	/^    public static TreeMap<String, Integer> activeRegistrationsByMalicious = new TreeMap<String, Integer>();$/;"	f	class:KademliaObserver
adLifeTime	kademlia/Discv5TopicTable.java	/^    protected int adLifeTime = KademliaCommonConfig.AD_LIFE_TIME;$/;"	f	class:Discv5TopicTable
add	config/Operators.java	/^	public Number add(Number num1, Number num2) {$/;"	m	class:Operators
add	core/Network.java	/^public static void add( Node n ) {$/;"	m	class:Network
add	dynamics/DynamicNetwork.java	/^protected final double add;$/;"	f	class:DynamicNetwork
add	dynamics/DynamicNetwork.java	/^protected void add(int n)$/;"	m	class:DynamicNetwork
add	dynamics/OscillatingNetwork.java	/^protected void add(int n)$/;"	m	class:OscillatingNetwork
add	edsim/EDSimulator.java	/^public static void add(long delay, Object event, Node node, int pid)$/;"	m	class:EDSimulator
add	edsim/Heap.java	/^public void add(long time, Object event, Node node, byte pid) $/;"	m	class:Heap
add	edsim/Heap.java	/^public void add(long time, Object event, Node node, byte pid, long priority) $/;"	m	class:Heap
add	edsim/PriorityQ.java	/^public void add(long time, Object event, Node node, byte pid);$/;"	m	interface:PriorityQ
add	edsim/PriorityQ.java	/^public void add(long time, Object event, Node node, byte pid, long priority);$/;"	m	interface:PriorityQ
add	kademlia/Turbulence.java	/^	public boolean add() {$/;"	m	class:Turbulence
add	kademlia/TurbulenceMultiTopic.java	/^		public boolean add() {$/;"	m	class:TurbulenceMultiTopic
add	kademlia/TurbulenceSingleTopic.java	/^		public boolean add() {$/;"	m	class:TurbulenceSingleTopic
add	util/IncrementalFreq.java	/^public final void add( int i ) { add(i,1); }$/;"	m	class:IncrementalFreq
add	util/IncrementalFreq.java	/^public void add( int i, int k ) {$/;"	m	class:IncrementalFreq
add	util/IncrementalStats.java	/^public final void add( double item ) { add(item,1); }$/;"	m	class:IncrementalStats
add	util/IncrementalStats.java	/^public void add( double item, int k ) {$/;"	m	class:IncrementalStats
add	util/MedianStats.java	/^public void add(double item, int k)$/;"	m	class:MedianStats
add	util/MomentStats.java	/^    public void add(double item, int k) {$/;"	m	class:MomentStats
addAcceptedRegistration	kademlia/KademliaObserver.java	/^    public static void addAcceptedRegistration(Topic t, BigInteger registrant,  BigInteger registrar, long waitingTime) {$/;"	m	class:KademliaObserver
addControlEvent	edsim/EDSimulator.java	/^static void addControlEvent(long time, int order, ControlEvent event)$/;"	m	class:EDSimulator
addDiscovered	kademlia/KademliaObserver.java	/^    public static void addDiscovered(Topic t, BigInteger requesting,  BigInteger discovered) {$/;"	m	class:KademliaObserver
addDiscovered	kademlia/RegistrationLog.java	/^	public void addDiscovered(BigInteger node, long currentTime) {$/;"	m	class:RegistrationLog
addDiscovered	kademlia/operations/LookupOperation.java	/^    public void addDiscovered(KademliaNode n,BigInteger sourceId) {$/;"	m	class:LookupOperation
addIncomingConnection	kademlia/KademliaNode.java	/^    public boolean addIncomingConnection(KademliaNode node,String topic) {$/;"	m	class:KademliaNode
addIncomingConnection	kademlia/NodeConnections.java	/^    public boolean addIncomingConnection(KademliaNode node) {$/;"	m	class:NodeConnections
addLookupResult	kademlia/NodeConnections.java	/^	public void addLookupResult(HashMap<KademliaNode,BigInteger> lookupResultBuffer) {$/;"	m	class:NodeConnections
addNearNodes	kademlia/Turbulence.java	/^	public void addNearNodes(Node iNode, int num) {$/;"	m	class:Turbulence
addNeighbor	core/IdleProtocol.java	/^public boolean addNeighbor(Node n)$/;"	m	class:IdleProtocol
addNeighbor	core/Linkable.java	/^	public boolean addNeighbor(Node neighbour);$/;"	m	interface:Linkable
addNeighbor	core/OracleIdleProtocol.java	/^public boolean addNeighbor(Node n) {$/;"	m	class:OracleIdleProtocol
addNeighbour	kademlia/KBucket.java	/^	public boolean addNeighbour(BigInteger node) {$/;"	m	class:KBucket
addNeighbour	kademlia/RoutingTable.java	/^	public boolean addNeighbour(BigInteger node) {$/;"	m	class:RoutingTable
addNeighbour	kademlia/SearchTable.java	/^	public boolean addNeighbour(BigInteger node) {$/;"	m	class:SearchTable
addNeighbour	kademlia/SearchTable.java	/^	public void addNeighbour(BigInteger[] node) {$/;"	m	class:SearchTable
addNeighbour	kademlia/TicketTable.java	/^	public boolean addNeighbour(BigInteger node) {$/;"	m	class:TicketTable
addNeighbour	kademlia/TicketTable.java	/^	public void addNeighbour(BigInteger[] nodes) {$/;"	m	class:TicketTable
addNode	graph/NeighbourListGraph.java	/^public int addNode( Object o ) {$/;"	m	class:NeighbourListGraph
addNode	graph/SubGraphEdges.java	/^public boolean addNode(int i) {$/;"	m	class:SubGraphEdges
addOutgoingConnection	kademlia/NodeConnections.java	/^    public boolean addOutgoingConnection(KademliaNode node) {$/;"	m	class:NodeConnections
addRandomConnections	kademlia/StateBuilder.java	/^	public void addRandomConnections(int num) {$/;"	m	class:StateBuilder
addRandomConnections	kademlia/Turbulence.java	/^	public void addRandomConnections(Node iNode, int num) {$/;"	m	class:Turbulence
addRegisteredList	kademlia/TicketTable.java	/^	public void addRegisteredList(BigInteger node) {$/;"	m	class:TicketTable
addRegistrar	kademlia/RegistrationLog.java	/^	public void addRegistrar(BigInteger node, long currentTime, long waitingTime) {$/;"	m	class:RegistrationLog
addReplacement	kademlia/KBucket.java	/^	public void addReplacement(BigInteger node) {$/;"	m	class:KBucket
addThread	rangesim/ProcessManager.java	/^public void addThread(ProcessHandler p)$/;"	m	class:ProcessManager
addTicket	kademlia/TicketTable.java	/^	public void addTicket(Message m,Ticket ticket) {$/;"	m	class:TicketTable
addTopicRegistration	kademlia/KademliaObserver.java	/^    public static void addTopicRegistration(Topic t, BigInteger registrant) {$/;"	m	class:KademliaObserver
add_to_competingTickets	kademlia/Discv5TopicTable.java	/^    private boolean add_to_competingTickets (Topic topic, Ticket ticket) {$/;"	m	class:Discv5TopicTable	file:
added	kademlia/SearchTable.java	/^	HashSet<BigInteger> added;$/;"	f	class:SearchTable
addr	kademlia/KademliaNode.java	/^    private String addr;$/;"	f	class:KademliaNode	file:
addrMap	kademlia/KBucket.java	/^	protected HashMap<BigInteger,String> addrMap;$/;"	f	class:KBucket
address	kademlia/LookupInfo.java	/^	private BigInteger address;$/;"	f	class:LookupInfo	file:
addresses	kademlia/KBucket.java	/^	protected HashSet<String> addresses;$/;"	f	class:KBucket
adsPerQueue	kademlia/Discv5TopicTable.java	/^    protected int adsPerQueue = KademliaCommonConfig.ADS_PER_QUEUE;$/;"	f	class:Discv5TopicTable
allAds	kademlia/Discv5TopicTable.java	/^    protected ArrayDeque<TopicRegistration> allAds;$/;"	f	class:Discv5TopicTable
all_topics	kademlia/KademliaObserver.java	/^    private static List<String> all_topics;$/;"	f	class:KademliaObserver	file:
amplify	kademlia/Discv5GlobalTopicTable.java	/^    protected static final int amplify = 1; $/;"	f	class:Discv5GlobalTopicTable
args	dynamics/WireByMethod.java	/^private final Object[] args;$/;"	f	class:WireByMethod	file:
args	rangesim/RangeSimulator.java	/^private String[] args;$/;"	f	class:RangeSimulator	file:
array	transport/E2ENetwork.java	/^private static int[][] array;$/;"	f	class:E2ENetwork	file:
attackTopicIndex	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected final int attackTopicIndex; \/\/index of the topic attacked by all the malicious nodes$/;"	f	class:Discv5ZipfTrafficGenerator
attackTopicNo	kademlia/CustomDistribution.java	/^    private int attackTopicNo;$/;"	f	class:CustomDistribution	file:
attackType	kademlia/CustomDistribution.java	/^    private String attackType;$/;"	f	class:CustomDistribution	file:
attackType	kademlia/Discv5EvilTicketProtocol.java	/^    private String attackType;$/;"	f	class:Discv5EvilTicketProtocol	file:
attackerID	kademlia/KademliaNode.java	/^    private BigInteger attackerID; $/;"	f	class:KademliaNode	file:
available_requests	kademlia/TicketTable.java	/^    private int available_requests;$/;"	f	class:TicketTable	file:
available_requests	kademlia/operations/Operation.java	/^	public int available_requests;$/;"	f	class:Operation
avgCounter	kademlia/KademliaObserver.java	/^    private static HashMap<BigInteger, Integer> avgCounter;$/;"	f	class:KademliaObserver	file:
b	reports/BallExpansion.java	/^private final int[] b;$/;"	f	class:BallExpansion	file:
baseMultiplier	kademlia/Discv5GlobalTopicTable.java	/^    protected static final int baseMultiplier = 30;$/;"	f	class:Discv5GlobalTopicTable
baseName	reports/GraphPrinter.java	/^private final String baseName;$/;"	f	class:GraphPrinter	file:
baseName	vector/ValueDumper.java	/^private final String baseName;$/;"	f	class:ValueDumper	file:
base_last_modifier	kademlia/Discv5StatefulTopicTable.java	/^    private double base_last_modifier;$/;"	f	class:Discv5StatefulTopicTable	file:
base_timestamp	kademlia/Discv5StatefulTopicTable.java	/^    private double base_timestamp;$/;"	f	class:Discv5StatefulTopicTable	file:
beta	dynamics/WireWS.java	/^private final double beta;$/;"	f	class:WireWS	file:
betterTimes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> betterTimes = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
betterTimesCount	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> betterTimesCount = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
bfs	graph/GraphAlgorithms.java	/^private void bfs( int from ) {$/;"	m	class:GraphAlgorithms	file:
bigIntegetSetToString	kademlia/Util.java	/^    public static String bigIntegetSetToString(HashSet<BigInteger> set) {$/;"	m	class:Util
bits	kademlia/UniformRandomGenerator.java	/^	private final int bits;$/;"	f	class:UniformRandomGenerator	file:
body	kademlia/Message.java	/^	public Object body = null;$/;"	f	class:Message
body	kademlia/operations/Operation.java	/^	public Object body;$/;"	f	class:Operation
bucketAtDistance	kademlia/RoutingTable.java	/^	protected KBucket bucketAtDistance(int distance) {$/;"	m	class:RoutingTable
bucketMinDistance	kademlia/RoutingTable.java	/^	protected int bucketMinDistance;$/;"	f	class:RoutingTable
bucketWithRegs	kademlia/TicketTable.java	/^	public int bucketWithRegs() {$/;"	m	class:TicketTable
buffer	kademlia/Client.java	/^	private List<BigInteger> buffer;$/;"	f	class:Client	file:
buffer	kademlia/EthClient.java	/^	private List<BigInteger> buffer;$/;"	f	class:EthClient	file:
buffer	rangesim/TaggedOutputStream.java	/^private byte[] buffer = new byte[1024];$/;"	f	class:TaggedOutputStream	file:
buffer	util/RandPermutation.java	/^private int[] buffer = null;$/;"	f	class:RandPermutation	file:
buffer	util/WeightedRandPerm.java	/^private int[] buffer = null;$/;"	f	class:WeightedRandPerm	file:
center	dynamics/StarNI.java	/^protected Node center = null;$/;"	f	class:StarNI
check	config/ConfigContainer.java	/^private boolean check = false;$/;"	f	class:ConfigContainer	file:
checkAndReplaceLast	kademlia/KBucket.java	/^	public void checkAndReplaceLast() {$/;"	m	class:KBucket
classname	config/ClassFinder.java	/^private static String classname(String classFile, String filesep)$/;"	m	class:ClassFinder	file:
clearEdge	core/OverlayGraph.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:OverlayGraph
clearEdge	graph/BitMatrixGraph.java	/^public boolean clearEdge(int i, int j) {$/;"	m	class:BitMatrixGraph
clearEdge	graph/ConstUndirGraph.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:ConstUndirGraph
clearEdge	graph/Graph.java	/^	public boolean clearEdge(int i, int j);$/;"	m	interface:Graph
clearEdge	graph/NeighbourListGraph.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:NeighbourListGraph
clearEdge	graph/PrefixSubGraph.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:PrefixSubGraph
clearEdge	graph/SubGraphEdges.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:SubGraphEdges
clearEdge	graph/UndirectedGraph.java	/^public boolean clearEdge( int i, int j ) {$/;"	m	class:UndirectedGraph
clone	cdsim/DaemonProtocol.java	/^public Object clone() {$/;"	m	class:DaemonProtocol
clone	core/GeneralNode.java	/^public Object clone() {$/;"	m	class:GeneralNode
clone	core/IdleProtocol.java	/^public Object clone()$/;"	m	class:IdleProtocol
clone	core/Node.java	/^public Object clone();$/;"	m	interface:Node
clone	core/OracleIdleProtocol.java	/^public Object clone() { return this; }$/;"	m	class:OracleIdleProtocol
clone	core/Protocol.java	/^public Object clone();$/;"	m	interface:Protocol
clone	edsim/NextCycleEvent.java	/^public Object clone() throws CloneNotSupportedException {$/;"	m	class:NextCycleEvent
clone	edsim/RandNextCycle.java	/^public Object clone() throws CloneNotSupportedException {$/;"	m	class:RandNextCycle
clone	edsim/RegRandNextCycle.java	/^public Object clone() throws CloneNotSupportedException {$/;"	m	class:RegRandNextCycle
clone	kademlia/Discv5EvilTicketProtocol.java	/^    public Object clone() {$/;"	m	class:Discv5EvilTicketProtocol
clone	kademlia/Discv5TicketProtocol.java	/^	public Object clone() {$/;"	m	class:Discv5TicketProtocol
clone	kademlia/KBucket.java	/^	public Object clone() {$/;"	m	class:KBucket
clone	kademlia/KademliaProtocol.java	/^	public Object clone() {$/;"	m	class:KademliaProtocol
clone	kademlia/RoutingTable.java	/^	public Object clone() {$/;"	m	class:RoutingTable
clone	transport/E2ETransport.java	/^public Object clone()$/;"	m	class:E2ETransport
clone	transport/UniformRandomTransport.java	/^public Object clone()$/;"	m	class:UniformRandomTransport
clone	transport/UnreliableTransport.java	/^public Object clone()$/;"	m	class:UnreliableTransport
clone	util/IncrementalFreq.java	/^public Object clone() throws CloneNotSupportedException {$/;"	m	class:IncrementalFreq
clone	vector/SingleValueHolder.java	/^public Object clone()$/;"	m	class:SingleValueHolder
closestSet	kademlia/operations/Operation.java	/^	protected HashMap<BigInteger, Boolean> closestSet;$/;"	f	class:Operation
cluster	graph/GraphAlgorithms.java	/^public Set<Integer> cluster = null;$/;"	f	class:GraphAlgorithms
clustering	graph/GraphAlgorithms.java	/^public static double clustering( Graph g, int i ) {$/;"	m	class:GraphAlgorithms
color	graph/GraphAlgorithms.java	/^public int[] color = null;$/;"	f	class:GraphAlgorithms
compare	config/Operators.java	/^	public int compare(Number num1,Number num2)	{$/;"	m	class:Operators
compare	vector/SingleValueComparator.java	/^public int compare(Object o1, Object o2)$/;"	m	class:SingleValueComparator
compare	vector/VectorComparator.java	/^public int compare(Object o1, Object o2)$/;"	m	class:VectorComparator
compareAddr	kademlia/Util.java	/^	public static final boolean compareAddr(String addr1, String addr2) {$/;"	m	class:Util
compareAddresses	kademlia/RoutingTable.java	/^	public boolean compareAddresses(String addr) {$/;"	m	class:RoutingTable
compareStrings	config/ConfigContainer.java	/^private double compareStrings(String str1, String str2)$/;"	m	class:ConfigContainer	file:
compareTo	kademlia/KademliaNode.java	/^    public int compareTo(KademliaNode n){$/;"	m	class:KademliaNode
compareTo	kademlia/Ticket.java	/^    public int compareTo(Ticket other) {$/;"	m	class:Ticket
compareTo	kademlia/Topic.java	/^    public int compareTo(Topic t){$/;"	m	class:Topic
compareTo	kademlia/TopicRegistration.java	/^    public int compareTo(TopicRegistration r){$/;"	m	class:TopicRegistration
competingTickets	kademlia/Discv5TopicTable.java	/^    protected HashMap<Topic, ArrayList<Ticket>> competingTickets;$/;"	f	class:Discv5TopicTable
competingTickets	kademlia/KademliaObserver.java	/^    private static HashMap<String, HashMap<BigInteger,Integer>> competingTickets;$/;"	f	class:KademliaObserver	file:
completed	kademlia/operations/LookupTicketOperation.java	/^    private boolean completed;$/;"	f	class:LookupTicketOperation	file:
completed	kademlia/operations/LookupTicketOperation.java	/^    public boolean completed() {$/;"	m	class:LookupTicketOperation
config	config/ConfigContainer.java	/^private Properties config;$/;"	f	class:ConfigContainer	file:
config	config/Configuration.java	/^private static ConfigContainer config = null;$/;"	f	class:Configuration	file:
connections	kademlia/Client.java	/^	private int connections=0;$/;"	f	class:Client	file:
connections	kademlia/EthClient.java	/^	private int connections=0;$/;"	f	class:EthClient	file:
connections	kademlia/KademliaNode.java	/^    public HashMap<String,NodeConnections> connections;$/;"	f	class:KademliaNode
contains	config/ConfigContainer.java	/^public boolean contains(String name)$/;"	m	class:ConfigContainer
contains	config/Configuration.java	/^public static boolean contains(String name)$/;"	m	class:Configuration
contains	core/IdleProtocol.java	/^public boolean contains(Node n)$/;"	m	class:IdleProtocol
contains	core/Linkable.java	/^	public boolean contains(Node neighbor);$/;"	m	interface:Linkable
contains	core/OracleIdleProtocol.java	/^public boolean contains(Node n) {$/;"	m	class:OracleIdleProtocol
containsNode	kademlia/RoutingTable.java	/^	public int containsNode(BigInteger id){$/;"	m	class:RoutingTable
containsReg	kademlia/Discv5GlobalTopicTable.java	/^    private boolean containsReg(TopicRegistration reg) {$/;"	m	class:Discv5GlobalTopicTable	file:
control	edsim/ControlEvent.java	/^private Control control;$/;"	f	class:ControlEvent	file:
controls	cdsim/CDSimulator.java	/^private static Control[] controls = null;$/;"	f	class:CDSimulator	file:
controls	cdsim/DaemonProtocol.java	/^private static Control[] controls=null;$/;"	f	class:DaemonProtocol	file:
controls	edsim/EDSimulator.java	/^private static Control[] controls=null;$/;"	f	class:EDSimulator	file:
copy	kademlia/Message.java	/^	public Message copy() {$/;"	m	class:Message
counter	graph/GraphAlgorithms.java	/^private int counter=0;$/;"	f	class:GraphAlgorithms	file:
counter	kademlia/Discv5TrafficGenerator.java	/^	private int counter = 0;$/;"	f	class:Discv5TrafficGenerator	file:
counter	util/FileNameGenerator.java	/^private long counter = 0;$/;"	f	class:FileNameGenerator	file:
counterID	core/GeneralNode.java	/^private static long counterID = -1;$/;"	f	class:GeneralNode	file:
countmax	util/IncrementalStats.java	/^private int countmax;$/;"	f	class:IncrementalStats	file:
countmin	util/IncrementalStats.java	/^private int countmin;$/;"	f	class:IncrementalStats	file:
ctime	cdsim/CDState.java	/^private static int ctime = -1;$/;"	f	class:CDState	file:
ctime	reports/GraphObserver.java	/^private static int ctime = -1234;$/;"	f	class:GraphObserver	file:
ctrlSchedules	cdsim/CDSimulator.java	/^private static Scheduler[] ctrlSchedules = null;$/;"	f	class:CDSimulator	file:
ctrlSchedules	edsim/EDSimulator.java	/^private static Scheduler[] ctrlSchedules = null;$/;"	f	class:EDSimulator	file:
cubicsum	util/MomentStats.java	/^    private double cubicsum, quadsum; \/\/ incremental sums$/;"	f	class:MomentStats	file:
cumWaitingTimes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> cumWaitingTimes = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
cumWaitingTimesByEvilNodes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> cumWaitingTimesByEvilNodes = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
cum_wait	kademlia/Ticket.java	/^    private long cum_wait;$/;"	f	class:Ticket	file:
cycle	cdsim/CDState.java	/^private static int cycle = -1;$/;"	f	class:CDState	file:
cycles	cdsim/CDSimulator.java	/^private static int cycles;$/;"	f	class:CDSimulator	file:
d	graph/GraphAlgorithms.java	/^public int[] d = null;$/;"	f	class:GraphAlgorithms
data	util/MedianStats.java	/^private final ArrayList<Double> data=new ArrayList<Double>();$/;"	f	class:MedianStats	file:
debug	config/ConfigContainer.java	/^private void debug(String name, String result)$/;"	m	class:ConfigContainer	file:
debugLevel	config/ConfigContainer.java	/^private int debugLevel;$/;"	f	class:ConfigContainer	file:
decreaseAvailableRequests	kademlia/TicketTable.java	/^	public void decreaseAvailableRequests() {$/;"	m	class:TicketTable
degree	core/IdleProtocol.java	/^public int degree()$/;"	m	class:IdleProtocol
degree	core/Linkable.java	/^	public int degree();$/;"	m	interface:Linkable
degree	core/OracleIdleProtocol.java	/^public int degree() {$/;"	m	class:OracleIdleProtocol
degree	core/OverlayGraph.java	/^public int degree(int i) {$/;"	m	class:OverlayGraph
degree	graph/BitMatrixGraph.java	/^public int degree(int i) {$/;"	m	class:BitMatrixGraph
degree	graph/ConstUndirGraph.java	/^public int degree(int i) { return g.degree(i)+(in==null?0:in[i].size()); }$/;"	m	class:ConstUndirGraph
degree	graph/Graph.java	/^	public int degree(int i);$/;"	m	interface:Graph
degree	graph/NeighbourListGraph.java	/^public int degree(int i) { return neighbors.get(i).size(); }$/;"	m	class:NeighbourListGraph
degree	graph/PrefixSubGraph.java	/^public int degree(int i) {$/;"	m	class:PrefixSubGraph
degree	graph/SubGraphEdges.java	/^public int degree(int i) {$/;"	m	class:SubGraphEdges
degree	graph/UndirectedGraph.java	/^public int degree(int i) {$/;"	m	class:UndirectedGraph
deleteIncomingConnection	kademlia/KademliaNode.java	/^    public void deleteIncomingConnection(KademliaNode node) {$/;"	m	class:KademliaNode
deleteOutgoingConnection	kademlia/KademliaNode.java	/^    public void deleteOutgoingConnection(KademliaNode node) {$/;"	m	class:KademliaNode
dest	kademlia/Message.java	/^	public KademliaNode dest;$/;"	f	class:Message
destNode	kademlia/operations/Operation.java	/^	public BigInteger destNode;$/;"	f	class:Operation
dfs	graph/GraphAlgorithms.java	/^private void dfs( int from ) {$/;"	m	class:GraphAlgorithms	file:
directed	core/OverlayGraph.java	/^public boolean directed() { return true; }$/;"	m	class:OverlayGraph
directed	graph/BitMatrixGraph.java	/^private final boolean directed;$/;"	f	class:BitMatrixGraph	file:
directed	graph/BitMatrixGraph.java	/^public boolean directed() { return directed; }$/;"	m	class:BitMatrixGraph
directed	graph/ConstUndirGraph.java	/^public boolean directed() { return false; }$/;"	m	class:ConstUndirGraph
directed	graph/Graph.java	/^	boolean directed();$/;"	m	interface:Graph
directed	graph/NeighbourListGraph.java	/^private final boolean directed;$/;"	f	class:NeighbourListGraph	file:
directed	graph/NeighbourListGraph.java	/^public boolean directed() { return directed; }$/;"	m	class:NeighbourListGraph
directed	graph/PrefixSubGraph.java	/^public boolean directed() { return g.directed(); }$/;"	m	class:PrefixSubGraph
directed	graph/SubGraphEdges.java	/^public boolean directed() { return g.directed(); }$/;"	m	class:SubGraphEdges
directed	graph/UndirectedGraph.java	/^public boolean directed() { return false; }$/;"	m	class:UndirectedGraph
dirg	reports/GraphObserver.java	/^private static Graph dirg;$/;"	f	class:GraphObserver	file:
discovered	kademlia/RegistrationLog.java	/^	private Map<BigInteger,Long> discovered;$/;"	f	class:RegistrationLog	file:
discovered	kademlia/operations/LookupOperation.java	/^    private HashMap<KademliaNode,BigInteger> discovered;$/;"	f	class:LookupOperation	file:
discoveredCount	kademlia/operations/LookupOperation.java	/^    public int discoveredCount() {$/;"	m	class:LookupOperation
discoveredMaliciousToString	kademlia/operations/LookupOperation.java	/^    public String discoveredMaliciousToString() {$/;"	m	class:LookupOperation
discoveredToString	kademlia/operations/LookupOperation.java	/^    public String discoveredToString() {$/;"	m	class:LookupOperation
dist	graph/GraphAlgorithms.java	/^public void dist( Graph g, int i ) {$/;"	m	class:GraphAlgorithms
distance	kademlia/Util.java	/^	public static final BigInteger distance(BigInteger a, BigInteger b) {$/;"	m	class:Util
div	config/Operators.java	/^	public Number div(Number num1, Number num2) {$/;"	m	class:Operators
doExperiments	rangesim/RangeSimulator.java	/^private void doExperiments(String[] args)$/;"	m	class:RangeSimulator	file:
doStop	rangesim/ProcessHandler.java	/^public abstract void doStop();$/;"	m	interface:ProcessHandler
doStop	rangesim/RangeSimulator.java	/^public void doStop()$/;"	m	class:RangeSimulator
doubleCapacity	edsim/Heap.java	/^private void doubleCapacity() {$/;"	m	class:Heap	file:
dump	kademlia/SearchTable.java	/^	public void dump() {$/;"	m	class:SearchTable
dumpRegistrations	kademlia/Discv5TopicTable.java	/^    public String dumpRegistrations() {$/;"	m	class:Discv5TopicTable
dumpRegistrations	kademlia/TopicTable.java	/^    public String dumpRegistrations();$/;"	m	interface:TopicTable
elaborateResponse	kademlia/operations/Operation.java	/^	public void elaborateResponse(BigInteger[] neighbours) {$/;"	m	class:Operation
emptyBufferCallback	kademlia/Client.java	/^	public void emptyBufferCallback(Node n) {$/;"	m	class:Client
emptyBufferCallback	kademlia/Discv5ZipfTrafficGenerator.java	/^	public void emptyBufferCallback(Node n, Topic t) {$/;"	m	class:Discv5ZipfTrafficGenerator
emptyBufferCallback	kademlia/EthClient.java	/^	public void emptyBufferCallback(Node n) {$/;"	m	class:EthClient
endOfRoundTime	kademlia/Discv5RRTopicTable.java	/^    Long endOfRoundTime; \/\/time of next round start$/;"	f	class:Discv5RRTopicTable
endtime	core/CommonState.java	/^private static long endtime = -1;$/;"	f	class:CommonState	file:
endtime	edsim/EDSimulator.java	/^private static long endtime;$/;"	f	class:EDSimulator	file:
equals	config/Operators.java	/^	public boolean equals(Number num1, Number num2)	{$/;"	m	class:Operators
equals	kademlia/KademliaNode.java	/^    public boolean equals(Object o) { $/;"	m	class:KademliaNode
equals	kademlia/Ticket.java	/^    public boolean equals(Object o) { $/;"	m	class:Ticket
equals	kademlia/Topic.java	/^    public boolean equals(Object o) { $/;"	m	class:Topic
equals	kademlia/TopicRegistration.java	/^    public boolean equals(Object o) { $/;"	m	class:TopicRegistration
equals	util/IncrementalFreq.java	/^public boolean equals(Object obj) {$/;"	m	class:IncrementalFreq
ev	edsim/Heap.java	/^private final Event ev = new Event();$/;"	f	class:Heap	file:
event	edsim/PriorityQ.java	/^	public Object event;$/;"	f	class:PriorityQ.Event
events	edsim/Heap.java	/^private Object[] events;$/;"	f	class:Heap	file:
evilProtocolID	kademlia/CustomDistribution.java	/^    private int evilProtocolID;$/;"	f	class:CustomDistribution	file:
evilRoutingTable	kademlia/Discv5EvilTicketProtocol.java	/^	private RoutingTable evilRoutingTable; \/\/ routing table only containing evil neighbors$/;"	f	class:Discv5EvilTicketProtocol	file:
evilTopicTable	kademlia/Discv5EvilTicketProtocol.java	/^    private HashMap<Topic, ArrayList<TopicRegistration>> evilTopicTable;$/;"	f	class:Discv5EvilTicketProtocol	file:
execute	cdsim/FullNextCycle.java	/^public boolean execute() {$/;"	m	class:FullNextCycle
execute	cdsim/NextCycle.java	/^public boolean execute() {$/;"	m	class:NextCycle
execute	cdsim/Shuffle.java	/^public final boolean execute() {$/;"	m	class:Shuffle
execute	core/Control.java	/^public boolean execute();$/;"	m	interface:Control
execute	dynamics/DynamicNetwork.java	/^public final boolean execute()$/;"	m	class:DynamicNetwork
execute	dynamics/MethodInvoker.java	/^public boolean execute() {$/;"	m	class:MethodInvoker
execute	dynamics/OscillatingNetwork.java	/^public boolean execute()$/;"	m	class:OscillatingNetwork
execute	dynamics/WireGraph.java	/^public final boolean execute() {$/;"	m	class:WireGraph
execute	edsim/CDScheduler.java	/^public boolean execute() {$/;"	m	class:CDScheduler
execute	edsim/ControlEvent.java	/^public boolean execute() {$/;"	m	class:ControlEvent
execute	edsim/NextCycleEvent.java	/^public final void execute() {$/;"	m	class:NextCycleEvent
execute	kademlia/Client.java	/^	public boolean execute() {$/;"	m	class:Client
execute	kademlia/CustomDistribution.java	/^    public boolean execute() {$/;"	m	class:CustomDistribution
execute	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	public boolean execute() {$/;"	m	class:Discv5MultiTopicTrafficGenerator
execute	kademlia/Discv5TrafficGenerator.java	/^	public boolean execute() {$/;"	m	class:Discv5TrafficGenerator
execute	kademlia/Discv5ZipfTrafficGenerator.java	/^	public boolean execute() {$/;"	m	class:Discv5ZipfTrafficGenerator
execute	kademlia/DnsListDistribution.java	/^	public boolean execute() {$/;"	m	class:DnsListDistribution
execute	kademlia/EthClient.java	/^	public boolean execute() {$/;"	m	class:EthClient
execute	kademlia/KademliaObserver.java	/^    public boolean execute() {$/;"	m	class:KademliaObserver
execute	kademlia/RefreshBuckets.java	/^	public boolean execute() {$/;"	m	class:RefreshBuckets
execute	kademlia/StateBuilder.java	/^	public boolean execute() {$/;"	m	class:StateBuilder
execute	kademlia/TrafficGenerator.java	/^	public boolean execute() {$/;"	m	class:TrafficGenerator
execute	kademlia/Turbulence.java	/^	public boolean execute() {$/;"	m	class:Turbulence
execute	reports/BallExpansion.java	/^public boolean execute() {$/;"	m	class:BallExpansion
execute	reports/Clustering.java	/^public boolean execute()$/;"	m	class:Clustering
execute	reports/ConnectivityObserver.java	/^public boolean execute()$/;"	m	class:ConnectivityObserver
execute	reports/DegreeStats.java	/^public boolean execute()$/;"	m	class:DegreeStats
execute	reports/GraphPrinter.java	/^public boolean execute() {$/;"	m	class:GraphPrinter
execute	reports/GraphStats.java	/^public boolean execute() {$/;"	m	class:GraphStats
execute	reports/MemoryObserver.java	/^public boolean execute()$/;"	m	class:MemoryObserver
execute	reports/RandRemoval.java	/^public boolean execute()$/;"	m	class:RandRemoval
execute	transport/KingParser.java	/^public boolean execute()$/;"	m	class:KingParser
execute	transport/TriangularMatrixParser.java	/^public boolean execute()$/;"	m	class:TriangularMatrixParser
execute	transport/UniformRouterAssignment.java	/^public boolean execute()$/;"	m	class:UniformRouterAssignment
execute	vector/InitVectFromFile.java	/^public boolean execute() {$/;"	m	class:InitVectFromFile
execute	vector/LinearDistribution.java	/^public boolean execute() {$/;"	m	class:LinearDistribution
execute	vector/Normalizer.java	/^public boolean execute() {$/;"	m	class:Normalizer
execute	vector/PeakDistribution.java	/^public boolean execute()$/;"	m	class:PeakDistribution
execute	vector/SingleValueObserver.java	/^public boolean execute()$/;"	m	class:SingleValueObserver
execute	vector/UniformDistribution.java	/^public boolean execute() {$/;"	m	class:UniformDistribution
execute	vector/ValueDumper.java	/^public boolean execute() {$/;"	m	class:ValueDumper
execute	vector/VectAngle.java	/^public boolean execute() {$/;"	m	class:VectAngle
execute	vector/VectCopy.java	/^public boolean execute() {$/;"	m	class:VectCopy
execute	vector/VectorObserver.java	/^public boolean execute() {$/;"	m	class:VectorObserver
executeNext	edsim/EDSimulator.java	/^private static boolean executeNext() {$/;"	m	class:EDSimulator	file:
executeProcess	rangesim/RangeSimulator.java	/^private void executeProcess(List<String> list)$/;"	m	class:RangeSimulator	file:
exp	kademlia/CustomDistribution.java	/^    private final double exp;$/;"	f	class:CustomDistribution	file:
exp	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected final double exp;$/;"	f	class:Discv5ZipfTrafficGenerator
exp	kademlia/TurbulenceMultiTopic.java	/^	protected final double exp;$/;"	f	class:TurbulenceMultiTopic
exp	kademlia/TurbulenceSingleTopic.java	/^	protected final double exp;$/;"	f	class:TurbulenceSingleTopic
expiredReg	kademlia/TicketTable.java	/^	public void expiredReg(BigInteger node) {$/;"	m	class:TicketTable
ext	util/FileNameGenerator.java	/^public final String ext;$/;"	f	class:FileNameGenerator
failstate	core/GeneralNode.java	/^protected int failstate = Fallible.OK;$/;"	f	class:GeneralNode
fast	reports/GraphObserver.java	/^private static boolean fast;$/;"	f	class:GraphObserver	file:
file	dynamics/WireFromFile.java	/^private final String file;$/;"	f	class:WireFromFile	file:
file	vector/InitVectFromFile.java	/^private final String file;$/;"	f	class:InitVectFromFile	file:
filename	transport/KingParser.java	/^private String filename;$/;"	f	class:KingParser	file:
filename	transport/TriangularMatrixParser.java	/^private String filename;$/;"	f	class:TriangularMatrixParser	file:
fin	core/Scheduler.java	/^public final boolean fin;$/;"	f	class:Scheduler
findClassInJar	config/ClassFinder.java	/^private static void findClassInJar(Map<String,String> map, File pathFile)$/;"	m	class:ClassFinder	file:
findClassInPathDir	config/ClassFinder.java	/^private static void findClassInPathDir( Map<String,String> map,$/;"	m	class:ClassFinder	file:
findClasses	config/ClassFinder.java	/^private static void findClasses(Map<String,String> map)$/;"	m	class:ClassFinder	file:
find_ok	kademlia/KademliaObserver.java	/^    public static IncrementalStats find_ok = new IncrementalStats();$/;"	f	class:KademliaObserver
find_total	kademlia/KademliaObserver.java	/^    public static IncrementalStats find_total = new IncrementalStats();$/;"	f	class:KademliaObserver
finished	kademlia/operations/Operation.java	/^	public boolean finished = false;$/;"	f	class:Operation
first	kademlia/Client.java	/^	private boolean first = true;$/;"	f	class:Client	file:
first	kademlia/Discv5EvilTicketProtocol.java	/^    private boolean first=true;$/;"	f	class:Discv5EvilTicketProtocol	file:
first	kademlia/Discv5TrafficGenerator.java	/^	private boolean first = true;$/;"	f	class:Discv5TrafficGenerator	file:
first	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected boolean first = true;$/;"	f	class:Discv5ZipfTrafficGenerator
first	kademlia/EthClient.java	/^	private boolean first = true;$/;"	f	class:EthClient	file:
first	kademlia/TrafficGenerator.java	/^	private boolean first = true;$/;"	f	class:TrafficGenerator	file:
firstDelay	edsim/CDScheduler.java	/^protected long firstDelay(long cyclelength) {$/;"	m	class:CDScheduler
firstRegister	kademlia/Discv5TicketProtocol.java	/^	boolean firstRegister;$/;"	f	class:Discv5TicketProtocol
flooding	graph/GraphAlgorithms.java	/^public void flooding( Graph g, int[] b, int k ) {$/;"	m	class:GraphAlgorithms
fng	reports/GraphPrinter.java	/^private final FileNameGenerator fng;$/;"	f	class:GraphPrinter	file:
fng	vector/ValueDumper.java	/^private final FileNameGenerator fng;$/;"	f	class:ValueDumper	file:
format	reports/GraphPrinter.java	/^private final String format;$/;"	f	class:GraphPrinter	file:
freq	util/IncrementalFreq.java	/^private int[] freq = null; $/;"	f	class:IncrementalFreq	file:
from	core/Scheduler.java	/^public final long from;$/;"	f	class:Scheduler
fullDegree	core/OverlayGraph.java	/^public int fullDegree(int i) {$/;"	m	class:OverlayGraph
fvalue	vector/TestVectors.java	/^protected float fvalue;$/;"	f	class:TestVectors
g	dynamics/WireGraph.java	/^public Graph g=null;$/;"	f	class:WireGraph
g	graph/ConstUndirGraph.java	/^protected final Graph g;$/;"	f	class:ConstUndirGraph
g	graph/GraphAlgorithms.java	/^private Graph g=null;$/;"	f	class:GraphAlgorithms	file:
g	graph/PrefixSubGraph.java	/^private final Graph g;$/;"	f	class:PrefixSubGraph	file:
g	graph/SubGraphEdges.java	/^private final Graph g;$/;"	f	class:SubGraphEdges	file:
g	graph/UndirectedGraph.java	/^private final Graph g;$/;"	f	class:UndirectedGraph	file:
g	reports/GraphObserver.java	/^protected Graph g;$/;"	f	class:GraphObserver
ga	reports/GraphObserver.java	/^protected final GraphAlgorithms ga = new GraphAlgorithms();$/;"	f	class:GraphObserver
generate	kademlia/UniformRandomGenerator.java	/^	public final BigInteger generate() {$/;"	m	class:UniformRandomGenerator
generateFindNodeMessage	kademlia/Client.java	/^	private Message generateFindNodeMessage() {$/;"	m	class:Client	file:
generateFindNodeMessage	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected Message generateFindNodeMessage() {$/;"	m	class:Discv5ZipfTrafficGenerator
generateFindNodeMessage	kademlia/EthClient.java	/^	private Message generateFindNodeMessage() {$/;"	m	class:EthClient	file:
generateFindNodeMessage	kademlia/TrafficGenerator.java	/^	private Message generateFindNodeMessage() {$/;"	m	class:TrafficGenerator	file:
generateFindNodeMessage	kademlia/Turbulence.java	/^	protected Message generateFindNodeMessage() {$/;"	m	class:Turbulence
generateRandomNode	kademlia/RoutingTable.java	/^	protected BigInteger generateRandomNode(int b) {$/;"	m	class:RoutingTable
generateRegisterMessage	kademlia/Discv5TrafficGenerator.java	/^	private Message generateRegisterMessage() {$/;"	m	class:Discv5TrafficGenerator	file:
generateRegisterMessage	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected Message generateRegisterMessage(String topic) {$/;"	m	class:Discv5ZipfTrafficGenerator
generateRegisterMessage	kademlia/Turbulence.java	/^	protected Message generateRegisterMessage(String topic) {$/;"	m	class:Turbulence
generateTopicLookupMessage	kademlia/Discv5TrafficGenerator.java	/^    private Message generateTopicLookupMessage() {$/;"	m	class:Discv5TrafficGenerator	file:
generateTopicLookupMessage	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected Message generateTopicLookupMessage(String topic) {$/;"	m	class:Discv5ZipfTrafficGenerator
generateTopicLookupMessage	kademlia/KademliaNode.java	/^	protected Message generateTopicLookupMessage(String topic) {$/;"	m	class:KademliaNode
generateTopicLookupMessage	kademlia/Turbulence.java	/^	protected Message generateTopicLookupMessage(String topic) {$/;"	m	class:Turbulence
generate_id	kademlia/CustomDistribution.java	/^    private BigInteger generate_id(String idDist, int topicNo, Topic t) {$/;"	m	class:CustomDistribution	file:
generate_non_uniform_id	kademlia/CustomDistribution.java	/^    private BigInteger generate_non_uniform_id(int topicNo, Topic t) {$/;"	m	class:CustomDistribution	file:
get	core/Network.java	/^public static Node get( int index ) {$/;"	m	class:Network
get	kademlia/StateBuilder.java	/^	public final KademliaProtocol get(int i) {$/;"	m	class:StateBuilder
get	util/RandPermutation.java	/^public int get(int i) {$/;"	m	class:RandPermutation
get	vector/Getter.java	/^public Number get(Node n) {$/;"	m	class:Getter
get	vector/Getter.java	/^public Number get(int i) { return get(Network.get(i)); }$/;"	m	class:Getter
getAdLifeTime	kademlia/Discv5TopicTable.java	/^    public int getAdLifeTime() {$/;"	m	class:Discv5TopicTable
getAddr	kademlia/KademliaNode.java	/^    public String getAddr(){$/;"	m	class:KademliaNode
getAddress	kademlia/LookupInfo.java	/^	public BigInteger getAddress() {$/;"	m	class:LookupInfo
getAddresses	kademlia/KBucket.java	/^	public HashSet<String> getAddresses() {$/;"	m	class:KBucket
getAllBucketNeighbours	kademlia/operations/LookupTicketOperation.java	/^	private ArrayList<BigInteger> getAllBucketNeighbours(){$/;"	m	class:LookupTicketOperation	file:
getAllNeighbours	kademlia/RoutingTable.java	/^	public Set<BigInteger> getAllNeighbours(){$/;"	m	class:RoutingTable
getAttackerId	kademlia/KademliaNode.java	/^    public BigInteger getAttackerId() {$/;"	m	class:KademliaNode
getAvailableRequests	kademlia/TicketTable.java	/^	public int getAvailableRequests() {$/;"	m	class:TicketTable
getAverage	util/IncrementalStats.java	/^public double getAverage() { return sum\/n; }$/;"	m	class:IncrementalStats
getAvgDiscoveryTime	kademlia/RegistrationLog.java	/^	public long getAvgDiscoveryTime() {$/;"	m	class:RegistrationLog
getAvgRegisterTime	kademlia/RegistrationLog.java	/^	public long getAvgRegisterTime() {$/;"	m	class:RegistrationLog
getBaseModifier	kademlia/Discv5StatefulTopicTable.java	/^    private double getBaseModifier() {$/;"	m	class:Discv5StatefulTopicTable	file:
getBaseTime	kademlia/Discv5StatefulTopicTable.java	/^    private double getBaseTime() {$/;"	m	class:Discv5StatefulTopicTable	file:
getBestTicket	kademlia/Discv5TopicTable.java	/^    private Ticket getBestTicket(Topic topic) {$/;"	m	class:Discv5TopicTable	file:
getBool	config/ConfigContainer.java	/^private boolean getBool(String name)$/;"	m	class:ConfigContainer	file:
getBoolean	config/ConfigContainer.java	/^public boolean getBoolean(String name)$/;"	m	class:ConfigContainer
getBoolean	config/ConfigContainer.java	/^public boolean getBoolean(String name, boolean def)$/;"	m	class:ConfigContainer
getBoolean	config/Configuration.java	/^public static boolean getBoolean(String name)$/;"	m	class:Configuration
getBoolean	config/Configuration.java	/^public static boolean getBoolean(String name, boolean def)$/;"	m	class:Configuration
getBucket	kademlia/RoutingTable.java	/^	public KBucket getBucket(BigInteger node) {$/;"	m	class:RoutingTable
getBucketNum	kademlia/RoutingTable.java	/^	public int getBucketNum(BigInteger node) {$/;"	m	class:RoutingTable
getCapacity	core/Network.java	/^public static int getCapacity() { return node.length; }$/;"	m	class:Network
getCapacity	kademlia/Discv5TopicTable.java	/^    public int getCapacity() {$/;"	m	class:Discv5TopicTable
getClass	config/ConfigContainer.java	/^public Class getClass(String name)$/;"	m	class:ConfigContainer
getClass	config/ConfigContainer.java	/^public Class getClass(String name, Class def)$/;"	m	class:ConfigContainer
getClass	config/Configuration.java	/^public static Class getClass(String name)$/;"	m	class:Configuration
getClass	config/Configuration.java	/^public static Class getClass(String name, Class def)$/;"	m	class:Configuration
getClazz	config/ConfigContainer.java	/^private Class getClazz(String name)$/;"	m	class:ConfigContainer	file:
getClosestNode	kademlia/Discv5ZipfTrafficGenerator.java	/^	public BigInteger getClosestNode(BigInteger id) {$/;"	m	class:Discv5ZipfTrafficGenerator
getCompetingTickets	kademlia/Discv5TopicTable.java	/^    public HashMap<String,Integer> getCompetingTickets(){$/;"	m	class:Discv5TopicTable
getCompetingTicketsbyTopic	kademlia/Discv5TopicTable.java	/^    public HashMap<Topic,Integer> getCompetingTicketsbyTopic(){$/;"	m	class:Discv5TopicTable
getCompleteRandomWalkNeighbours	kademlia/operations/LookupTicketOperation.java	/^	private ArrayList<BigInteger> getCompleteRandomWalkNeighbours(){$/;"	m	class:LookupTicketOperation	file:
getCumWaitTime	kademlia/Ticket.java	/^    public long getCumWaitTime() {$/;"	m	class:Ticket
getCycle	cdsim/CDState.java	/^public static int getCycle()$/;"	m	class:CDState
getCycleObj	cdsim/CDState.java	/^public static Integer getCycleObj()$/;"	m	class:CDState
getCycleT	cdsim/CDState.java	/^public static int getCycleT()$/;"	m	class:CDState
getDiscovered	kademlia/RegistrationLog.java	/^	public Map<BigInteger,Long> getDiscovered(){$/;"	m	class:RegistrationLog
getDiscovered	kademlia/operations/LookupOperation.java	/^    public HashMap<KademliaNode,BigInteger> getDiscovered(){$/;"	m	class:LookupOperation
getDouble	config/ConfigContainer.java	/^public double getDouble(String name)$/;"	m	class:ConfigContainer
getDouble	config/ConfigContainer.java	/^public double getDouble(String name, double def)$/;"	m	class:ConfigContainer
getDouble	config/Configuration.java	/^public static double getDouble(String name)$/;"	m	class:Configuration
getDouble	config/Configuration.java	/^public static double getDouble(String name, double def)$/;"	m	class:Configuration
getDouble	vector/Getter.java	/^public double getDouble(Node n) {$/;"	m	class:Getter
getDouble	vector/Getter.java	/^public double getDouble(int i) { return getDouble(Network.get(i)); }$/;"	m	class:Getter
getEdge	core/OverlayGraph.java	/^public Object getEdge(int i, int j) { return null; }$/;"	m	class:OverlayGraph
getEdge	graph/BitMatrixGraph.java	/^public Object getEdge(int i, int j) { return null; }$/;"	m	class:BitMatrixGraph
getEdge	graph/ConstUndirGraph.java	/^public Object getEdge(int i, int j) {$/;"	m	class:ConstUndirGraph
getEdge	graph/Graph.java	/^	Object getEdge(int i, int j);$/;"	m	interface:Graph
getEdge	graph/NeighbourListGraph.java	/^public Object getEdge(int i, int j) { return null; }$/;"	m	class:NeighbourListGraph
getEdge	graph/PrefixSubGraph.java	/^public Object getEdge(int i, int j) {$/;"	m	class:PrefixSubGraph
getEdge	graph/SubGraphEdges.java	/^public Object getEdge(int i, int j) {$/;"	m	class:SubGraphEdges
getEdge	graph/UndirectedGraph.java	/^public Object getEdge(int i, int j) {$/;"	m	class:UndirectedGraph
getEndTime	core/CommonState.java	/^public static long getEndTime()$/;"	m	class:CommonState
getFValue	vector/TestVectors.java	/^public float getFValue() { return fvalue; }$/;"	m	class:TestVectors
getFailState	core/Fallible.java	/^	public int getFailState();$/;"	m	interface:Fallible
getFailState	core/GeneralNode.java	/^public int getFailState() { return failstate; }$/;"	m	class:GeneralNode
getFreq	util/IncrementalFreq.java	/^public int getFreq(int i) {$/;"	m	class:IncrementalFreq
getGetterMethod	vector/GetterSetterFinder.java	/^public static Method getGetterMethod(Class clazz, String methodName)$/;"	m	class:GetterSetterFinder
getGetterType	vector/GetterSetterFinder.java	/^public static Class getGetterType(Method m)$/;"	m	class:GetterSetterFinder
getHostID	kademlia/Topic.java	/^    public BigInteger getHostID(){$/;"	m	class:Topic
getID	core/GeneralNode.java	/^public long getID() { return ID; }$/;"	m	class:GeneralNode
getID	core/Node.java	/^public long getID();$/;"	m	interface:Node
getIPModifier	kademlia/Discv5GlobalTopicTable.java	/^    protected double getIPModifier(TopicRegistration reg) {$/;"	m	class:Discv5GlobalTopicTable
getIPModifier	kademlia/Discv5StatefulTopicTable.java	/^    protected double getIPModifier(TopicRegistration reg) {$/;"	m	class:Discv5StatefulTopicTable
getIValue	vector/TestVectors.java	/^public int getIValue() { return ivalue; }$/;"	m	class:TestVectors
getId	kademlia/KademliaNode.java	/^    public BigInteger getId(){$/;"	m	class:KademliaNode
getIdModifier	kademlia/Discv5GlobalTopicTable.java	/^    protected double getIdModifier(TopicRegistration reg) {$/;"	m	class:Discv5GlobalTopicTable
getIdModifier	kademlia/Discv5StatefulTopicTable.java	/^    protected double getIdModifier(TopicRegistration reg) {$/;"	m	class:Discv5StatefulTopicTable
getIncomingConnections	kademlia/KademliaNode.java	/^    public List<KademliaNode> getIncomingConnections(String topic){$/;"	m	class:KademliaNode
getIncomingConnections	kademlia/NodeConnections.java	/^	public List<KademliaNode> getIncomingConnections() {$/;"	m	class:NodeConnections
getIndex	core/GeneralNode.java	/^public int getIndex() { return index; }$/;"	m	class:GeneralNode
getIndex	core/Node.java	/^public int getIndex();$/;"	m	interface:Node
getInst	config/ConfigContainer.java	/^private Object getInst(String name)$/;"	m	class:ConfigContainer	file:
getInstance	config/ConfigContainer.java	/^public Object getInstance(String name)$/;"	m	class:ConfigContainer
getInstance	config/ConfigContainer.java	/^public Object getInstance(String name, Object def)$/;"	m	class:ConfigContainer
getInstance	config/Configuration.java	/^public static Object getInstance(String name)$/;"	m	class:Configuration
getInstance	config/Configuration.java	/^public static Object getInstance(String name, Object def)$/;"	m	class:Configuration
getInstanceArray	config/ConfigContainer.java	/^public Object[] getInstanceArray(String name)$/;"	m	class:ConfigContainer
getInstanceArray	config/Configuration.java	/^public static Object[] getInstanceArray(String name)$/;"	m	class:Configuration
getInt	config/ConfigContainer.java	/^public int getInt(String name)$/;"	m	class:ConfigContainer
getInt	config/ConfigContainer.java	/^public int getInt(String name, int def)$/;"	m	class:ConfigContainer
getInt	config/Configuration.java	/^public static int getInt(String name)$/;"	m	class:Configuration
getInt	config/Configuration.java	/^public static int getInt(String name, int def)$/;"	m	class:Configuration
getIntTime	core/CommonState.java	/^public static int getIntTime()$/;"	m	class:CommonState
getInverse	config/Operators.java	/^	public Number getInverse(Number num) {$/;"	m	class:Operators
getKClosestNeighbours	kademlia/RoutingTable.java	/^	public BigInteger[] getKClosestNeighbours (final int k, int dist) {$/;"	m	class:RoutingTable
getKademliaProtocol	core/GeneralNode.java	/^public KademliaProtocol getKademliaProtocol() {return this.kadProtocol; }$/;"	m	class:GeneralNode
getKademliaProtocol	core/Node.java	/^public KademliaProtocol getKademliaProtocol();$/;"	m	interface:Node
getKurtosis	util/MomentStats.java	/^    public double getKurtosis(){$/;"	m	class:MomentStats
getLValue	vector/TestVectors.java	/^public long getLValue() { return lvalue; }$/;"	m	class:TestVectors
getLastSeed	util/ExtendedRandom.java	/^public long getLastSeed() { return lastSeed; }$/;"	m	class:ExtendedRandom
getLatency	transport/E2ENetwork.java	/^public static int getLatency(int sender, int receiver) $/;"	m	class:E2ENetwork
getLatency	transport/E2ETransport.java	/^public long getLatency(Node src, Node dest)$/;"	m	class:E2ETransport
getLatency	transport/Transport.java	/^public long getLatency(Node src, Node dest);$/;"	m	interface:Transport
getLatency	transport/UniformRandomTransport.java	/^public long getLatency(Node src, Node dest)$/;"	m	class:UniformRandomTransport
getLatency	transport/UnreliableTransport.java	/^public long getLatency(Node src, Node dest)$/;"	m	class:UnreliableTransport
getLine	rangesim/RangeSimulator.java	/^private static String getLine(BufferedReader toprint)$/;"	m	class:RangeSimulator	file:
getLinkable	config/FastConfig.java	/^public static int getLinkable(int pid)$/;"	m	class:FastConfig
getLinkable	config/FastConfig.java	/^public static int getLinkable(int pid, int linkIndex)$/;"	m	class:FastConfig
getLong	config/ConfigContainer.java	/^public long getLong(String name)$/;"	m	class:ConfigContainer
getLong	config/ConfigContainer.java	/^public long getLong(String name, long def)$/;"	m	class:ConfigContainer
getLong	config/Configuration.java	/^public static long getLong(String name)$/;"	m	class:Configuration
getLong	config/Configuration.java	/^public static long getLong(String name, long def)$/;"	m	class:Configuration
getLong	vector/Getter.java	/^public long getLong(Node n) {$/;"	m	class:Getter
getLong	vector/Getter.java	/^public long getLong(int i) { return getLong(Network.get(i)); }$/;"	m	class:Getter
getLookupBuffer	kademlia/NodeConnections.java	/^	public List<KademliaNode> getLookupBuffer(){$/;"	m	class:NodeConnections
getLookupResult	kademlia/KademliaNode.java	/^    public List<KademliaNode> getLookupResult(String topic) {$/;"	m	class:KademliaNode
getMax	util/IncrementalStats.java	/^public double getMax() { return max; }$/;"	m	class:IncrementalStats
getMaxCount	util/IncrementalStats.java	/^public int getMaxCount() { return countmax; }$/;"	m	class:IncrementalStats
getMaxID	kademlia/UniformRandomGenerator.java	/^	public BigInteger getMaxID() {$/;"	m	class:UniformRandomGenerator
getMedian	util/MedianStats.java	/^public double getMedian()$/;"	m	class:MedianStats
getMessage	config/IllegalParameterException.java	/^public String getMessage() {$/;"	m	class:IllegalParameterException
getMessage	config/MissingParameterException.java	/^public String getMessage() {$/;"	m	class:MissingParameterException
getMethod	dynamics/MethodInvoker.java	/^private static Method getMethod(Class cl, String methodName)$/;"	m	class:MethodInvoker	file:
getMethod	dynamics/WireByMethod.java	/^private static Method getMethod(Class cl, String methodName)$/;"	m	class:WireByMethod	file:
getMin	util/IncrementalStats.java	/^public double getMin() { return min; }$/;"	m	class:IncrementalStats
getMinBucketNeighbours	kademlia/operations/LookupTicketOperation.java	/^	private ArrayList<BigInteger> getMinBucketNeighbours(){$/;"	m	class:LookupTicketOperation	file:
getMinCount	util/IncrementalStats.java	/^public int getMinCount() { return countmin; }$/;"	m	class:IncrementalStats
getMinDiscoveryTime	kademlia/RegistrationLog.java	/^	public long getMinDiscoveryTime() {$/;"	m	class:RegistrationLog
getMinID	kademlia/UniformRandomGenerator.java	/^	public BigInteger getMinID() {$/;"	m	class:UniformRandomGenerator
getMinRegisterTime	kademlia/RegistrationLog.java	/^	public long getMinRegisterTime() {$/;"	m	class:RegistrationLog
getMsg	kademlia/Ticket.java	/^    public Message getMsg() {$/;"	m	class:Ticket
getN	util/IncrementalFreq.java	/^public int getN() { return n; }$/;"	m	class:IncrementalFreq
getN	util/IncrementalStats.java	/^public int getN() { return n; }$/;"	m	class:IncrementalStats
getNames	config/ConfigContainer.java	/^public String[] getNames(String name)$/;"	m	class:ConfigContainer
getNames	config/Configuration.java	/^public static String[] getNames(String name)$/;"	m	class:Configuration
getNeighbor	core/IdleProtocol.java	/^public Node getNeighbor(int i)$/;"	m	class:IdleProtocol
getNeighbor	core/Linkable.java	/^	public Node getNeighbor(int i);$/;"	m	interface:Linkable
getNeighbor	core/OracleIdleProtocol.java	/^public Node getNeighbor(int i) {$/;"	m	class:OracleIdleProtocol
getNeighbour	kademlia/TicketTable.java	/^	public BigInteger getNeighbour() {$/;"	m	class:TicketTable
getNeighbour	kademlia/operations/LookupTicketOperation.java	/^	public BigInteger getNeighbour() {$/;"	m	class:LookupTicketOperation
getNeighbour	kademlia/operations/Operation.java	/^	public BigInteger getNeighbour() {$/;"	m	class:Operation
getNeighbours	core/OverlayGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:OverlayGraph
getNeighbours	graph/BitMatrixGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:BitMatrixGraph
getNeighbours	graph/ConstUndirGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:ConstUndirGraph
getNeighbours	graph/Graph.java	/^	Collection<Integer> getNeighbours(int i);$/;"	m	interface:Graph
getNeighbours	graph/NeighbourListGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:NeighbourListGraph
getNeighbours	graph/PrefixSubGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:PrefixSubGraph
getNeighbours	graph/SubGraphEdges.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:SubGraphEdges
getNeighbours	graph/UndirectedGraph.java	/^public Collection<Integer> getNeighbours(int i) {$/;"	m	class:UndirectedGraph
getNeighbours	kademlia/RoutingTable.java	/^	public BigInteger[] getNeighbours (final int dist) {$/;"	m	class:RoutingTable
getNeighboursList	kademlia/operations/Operation.java	/^	public List<BigInteger> getNeighboursList() {$/;"	m	class:Operation
getNext	core/Scheduler.java	/^public long getNext()$/;"	m	class:Scheduler
getNode	core/CommonState.java	/^public static Node getNode()$/;"	m	class:CommonState
getNode	core/OverlayGraph.java	/^public Object getNode(int i) { return Network.node[i]; }$/;"	m	class:OverlayGraph
getNode	graph/BitMatrixGraph.java	/^public Object getNode(int i) { return null; }$/;"	m	class:BitMatrixGraph
getNode	graph/ConstUndirGraph.java	/^public Object getNode(int i) { return g.getNode(i); }$/;"	m	class:ConstUndirGraph
getNode	graph/Graph.java	/^	Object getNode(int i);$/;"	m	interface:Graph
getNode	graph/NeighbourListGraph.java	/^public Object getNode(int i) { return (nodes==null?null:nodes.get(i)); }$/;"	m	class:NeighbourListGraph
getNode	graph/PrefixSubGraph.java	/^public Object getNode(int i) {$/;"	m	class:PrefixSubGraph
getNode	graph/SubGraphEdges.java	/^public Object getNode(int i) { return g.getNode(i); }$/;"	m	class:SubGraphEdges
getNode	graph/UndirectedGraph.java	/^public Object getNode(int i) { return g.getNode(i); }$/;"	m	class:UndirectedGraph
getNode	kademlia/KademliaProtocol.java	/^	public KademliaNode getNode() {$/;"	m	class:KademliaProtocol
getNode	kademlia/TopicRegistration.java	/^    public KademliaNode getNode() {$/;"	m	class:TopicRegistration
getNumberOfCompetingTickets	kademlia/Discv5GlobalTopicTable.java	/^    private int getNumberOfCompetingTickets() {$/;"	m	class:Discv5GlobalTopicTable	file:
getNumberOfCompetingTickets	kademlia/Discv5RRTopicTable.java	/^    private int getNumberOfCompetingTickets() {$/;"	m	class:Discv5RRTopicTable	file:
getNumberOfCompetingTicketsPerTopic	kademlia/Discv5GlobalTopicTable.java	/^    private int getNumberOfCompetingTicketsPerTopic(Topic t) {$/;"	m	class:Discv5GlobalTopicTable	file:
getNumberOfCompetingTopics	kademlia/Discv5GlobalTopicTable.java	/^    private int getNumberOfCompetingTopics() {$/;"	m	class:Discv5GlobalTopicTable	file:
getNumberOfCompetingTopics	kademlia/Discv5RRTopicTable.java	/^    private int getNumberOfCompetingTopics() {$/;"	m	class:Discv5RRTopicTable	file:
getONE	config/Operators.java	/^	public Number getONE() {$/;"	m	class:Operators
getOccupancy	kademlia/Ticket.java	/^    public int getOccupancy() {$/;"	m	class:Ticket
getOutgoingConnections	kademlia/KademliaNode.java	/^    public List<KademliaNode> getOutgoingConnections(String topic){$/;"	m	class:KademliaNode
getOutgoingConnections	kademlia/NodeConnections.java	/^	public List<KademliaNode> getOutgoingConnections() {$/;"	m	class:NodeConnections
getPhase	core/CommonState.java	/^public static int getPhase()$/;"	m	class:CommonState
getPid	config/ConfigContainer.java	/^public int getPid(String name)$/;"	m	class:ConfigContainer
getPid	config/ConfigContainer.java	/^public int getPid(String name, int pid)$/;"	m	class:ConfigContainer
getPid	config/Configuration.java	/^public static int getPid(String name)$/;"	m	class:Configuration
getPid	config/Configuration.java	/^public static int getPid(String name, int pid)$/;"	m	class:Configuration
getPid	core/CommonState.java	/^public static int getPid()$/;"	m	class:CommonState
getPort	kademlia/KademliaNode.java	/^    public int getPort(){$/;"	m	class:KademliaNode
getProtocol	core/GeneralNode.java	/^public Protocol getProtocol(int i) { return protocol[i]; }$/;"	m	class:GeneralNode
getProtocol	core/Node.java	/^public Protocol getProtocol(int i);$/;"	m	interface:Node
getProtocolID	kademlia/KademliaProtocol.java	/^    public int getProtocolID() {$/;"	m	class:KademliaProtocol
getQualifiedName	config/ClassFinder.java	/^public static String getQualifiedName(String name)$/;"	m	class:ClassFinder
getRRWaitingTime	kademlia/Discv5RRTopicTable.java	/^    protected long getRRWaitingTime(Topic topicToRegister, long curr_time) {$/;"	m	class:Discv5RRTopicTable
getRTT	kademlia/Ticket.java	/^    public long getRTT() {$/;"	m	class:Ticket
getRadiusLookup	kademlia/LookupInfo.java	/^	public boolean getRadiusLookup() {$/;"	m	class:LookupInfo
getRandomBucketNeighbours	kademlia/operations/LookupTicketOperation.java	/^	private ArrayList<BigInteger> getRandomBucketNeighbours(){$/;"	m	class:LookupTicketOperation	file:
getRegEvilbyRegistrant	kademlia/Discv5TopicTable.java	/^    public HashMap<String, HashMap<BigInteger,Integer>> getRegEvilbyRegistrant(){$/;"	m	class:Discv5TopicTable
getRegEvilbyRegistrar	kademlia/Discv5TopicTable.java	/^    public HashMap<String, Integer> getRegEvilbyRegistrar(){$/;"	m	class:Discv5TopicTable
getRegTime	kademlia/Ticket.java	/^    public long getRegTime() {$/;"	m	class:Ticket
getRegbyRegistrant	kademlia/Discv5TopicTable.java	/^    public HashMap<String, HashMap<BigInteger,Integer>> getRegbyRegistrant(){$/;"	m	class:Discv5TopicTable
getRegbyRegistrar	kademlia/Discv5TopicTable.java	/^    public HashMap<String, Integer> getRegbyRegistrar(){$/;"	m	class:Discv5TopicTable
getRegbyTopic	kademlia/Discv5TopicTable.java	/^    public HashMap<Topic,Integer> getRegbyTopic(){$/;"	m	class:Discv5TopicTable
getRegistered	kademlia/RegistrationLog.java	/^	public Map<BigInteger,Long> getRegistered(){$/;"	m	class:RegistrationLog
getRegisteringTopics	kademlia/Discv5TicketProtocol.java	/^	public List<String> getRegisteringTopics() {$/;"	m	class:Discv5TicketProtocol
getRegistrant	kademlia/RegistrationLog.java	/^	public BigInteger getRegistrant() {$/;"	m	class:RegistrationLog
getRegistration	kademlia/Discv5TopicTable.java	/^    public TopicRegistration[] getRegistration(Topic t){$/;"	m	class:Discv5TopicTable
getRegistration	kademlia/TopicTable.java	/^    public TopicRegistration[] getRegistration(Topic t);$/;"	m	interface:TopicTable
getReqTime	kademlia/Ticket.java	/^    public long getReqTime() {$/;"	m	class:Ticket
getReturnedCount	kademlia/operations/Operation.java	/^	public int getReturnedCount() {$/;"	m	class:Operation
getRouter	transport/E2ETransport.java	/^public int getRouter()$/;"	m	class:E2ETransport
getRouter	transport/RouterInfo.java	/^public int getRouter();$/;"	m	interface:RouterInfo
getSetterMethod	vector/GetterSetterFinder.java	/^public static Method getSetterMethod(Class clazz, String methodName)$/;"	m	class:GetterSetterFinder
getSetterType	vector/GetterSetterFinder.java	/^public static Class getSetterType(Method m)$/;"	m	class:GetterSetterFinder
getShortMessage	config/IllegalParameterException.java	/^public String getShortMessage()$/;"	m	class:IllegalParameterException
getShortMessage	config/MissingParameterException.java	/^public String getShortMessage()$/;"	m	class:MissingParameterException
getShortName	config/ClassFinder.java	/^public static String getShortName(String className) {$/;"	m	class:ClassFinder
getSimID	Simulator.java	/^public static int getSimID() {$/;"	m	class:Simulator
getSimID	config/CheckConfig.java	/^protected static int getSimID() {$/;"	m	class:CheckConfig
getSimilarProperty	config/ConfigContainer.java	/^private String getSimilarProperty(String property)$/;"	m	class:ConfigContainer	file:
getSize	transport/E2ENetwork.java	/^public static int getSize()$/;"	m	class:E2ENetwork
getSkewness	util/MomentStats.java	/^    public double getSkewness() {$/;"	m	class:MomentStats
getSqrSum	util/IncrementalStats.java	/^public double getSqrSum() { return sqrsum; }$/;"	m	class:IncrementalStats
getSrc	kademlia/Ticket.java	/^    public KademliaNode getSrc() {$/;"	m	class:Ticket
getStD	util/IncrementalStats.java	/^public double getStD() { return Math.sqrt(getVar()); }$/;"	m	class:IncrementalStats
getStr	config/ConfigContainer.java	/^private String getStr(String name)$/;"	m	class:ConfigContainer	file:
getString	config/ConfigContainer.java	/^public String getString(String name)$/;"	m	class:ConfigContainer
getString	config/ConfigContainer.java	/^public String getString(String name, String def)$/;"	m	class:ConfigContainer
getString	config/Configuration.java	/^public static String getString(String name)$/;"	m	class:Configuration
getString	config/Configuration.java	/^public static String getString(String name, String def)$/;"	m	class:Configuration
getSum	util/IncrementalStats.java	/^public double getSum() { return sum; }$/;"	m	class:IncrementalStats
getSymbols	config/ConfigContainer.java	/^private String[] getSymbols(org.nfunk.jep.JEP jep)$/;"	m	class:ConfigContainer	file:
getTargetTopic	kademlia/KademliaProtocol.java	/^    protected Topic getTargetTopic() {$/;"	m	class:KademliaProtocol
getTicket	kademlia/Discv5GlobalTopicTable.java	/^    protected Ticket getTicket(Topic t, KademliaNode advertiser, long rtt_delay, long curr_time) {$/;"	m	class:Discv5GlobalTopicTable
getTicket	kademlia/Discv5TopicTable.java	/^    protected Ticket getTicket(Topic t, KademliaNode advertiser, long rtt_delay, long curr_time) {$/;"	m	class:Discv5TopicTable
getTime	core/CommonState.java	/^public static long getTime()$/;"	m	class:CommonState
getTime	edsim/Heap.java	/^private long getTime(int index) {$/;"	m	class:Heap	file:
getTimeOfNextKAvailableSlot	kademlia/Discv5RRTopicTable.java	/^    private long getTimeOfNextKAvailableSlot(int slot_number, long curr_time) {$/;"	m	class:Discv5RRTopicTable	file:
getTimeToWait	kademlia/BackoffService.java	/^	 public long getTimeToWait() {$/;"	m	class:BackoffService
getTimesFailed	kademlia/BackoffService.java	/^	 public int getTimesFailed() {$/;"	m	class:BackoffService
getTimestamp	kademlia/TopicRegistration.java	/^    public long getTimestamp() {$/;"	m	class:TopicRegistration
getTopic	kademlia/LookupInfo.java	/^	public Topic getTopic() {$/;"	m	class:LookupInfo
getTopic	kademlia/Ticket.java	/^    public Topic getTopic() {$/;"	m	class:Ticket
getTopic	kademlia/TicketTable.java	/^	public Topic getTopic() {$/;"	m	class:TicketTable
getTopic	kademlia/Topic.java	/^    public String getTopic(){$/;"	m	class:Topic
getTopic	kademlia/TopicRegistration.java	/^    public Topic getTopic() {$/;"	m	class:TopicRegistration
getTopic	kademlia/operations/RegisterOperation.java	/^    public Topic getTopic() {$/;"	m	class:RegisterOperation
getTopicID	kademlia/Topic.java	/^    public BigInteger getTopicID(){$/;"	m	class:Topic
getTopicId	kademlia/TicketTable.java	/^	public BigInteger getTopicId() {$/;"	m	class:TicketTable
getTopicModifier	kademlia/Discv5GlobalTopicTable.java	/^    protected double getTopicModifier(TopicRegistration reg) {$/;"	m	class:Discv5GlobalTopicTable
getTopicModifier	kademlia/Discv5StatefulTopicTable.java	/^    protected double getTopicModifier(TopicRegistration reg) {$/;"	m	class:Discv5StatefulTopicTable
getTopicsEntropyModifier	kademlia/Discv5GlobalTopicTable.java	/^    private double getTopicsEntropyModifier(Topic topic) {$/;"	m	class:Discv5GlobalTopicTable	file:
getTotalIncomingConnections	kademlia/KademliaNode.java	/^    public List<KademliaNode> getTotalIncomingConnections(){$/;"	m	class:KademliaNode
getTotalOutgoingConnections	kademlia/KademliaNode.java	/^    public List<KademliaNode> getTotalOutgoingConnections(){$/;"	m	class:KademliaNode
getTr	kademlia/StateBuilder.java	/^	public final Transport getTr(int i) {$/;"	m	class:StateBuilder
getTransport	config/FastConfig.java	/^public static int getTransport(int pid)$/;"	m	class:FastConfig
getType	kademlia/SimpleEvent.java	/^	public int getType() {$/;"	m	class:SimpleEvent
getType	vector/Getter.java	/^public Class getType() {$/;"	m	class:Getter
getType	vector/Setter.java	/^public Class getType() {$/;"	m	class:Setter
getUsedCount	kademlia/operations/Operation.java	/^	public int getUsedCount() {$/;"	m	class:Operation
getVal	config/ConfigContainer.java	/^private Number getVal(String initial, String property, int depth)$/;"	m	class:ConfigContainer	file:
getValue	vector/SingleValue.java	/^public double getValue();$/;"	m	interface:SingleValue
getValue	vector/SingleValueHolder.java	/^public double getValue()$/;"	m	class:SingleValueHolder
getVar	util/IncrementalStats.java	/^public double getVar() {$/;"	m	class:IncrementalStats
getWaitTime	kademlia/Ticket.java	/^    public long getWaitTime() {$/;"	m	class:Ticket
getWaitingTime	kademlia/Discv5GlobalTopicTable.java	/^   protected long getWaitingTime(TopicRegistration reg, long curr_time, Ticket ticket) {$/;"	m	class:Discv5GlobalTopicTable
getWaitingTime	kademlia/Discv5RRTopicTable.java	/^    protected long getWaitingTime(TopicRegistration reg, long curr_time) {$/;"	m	class:Discv5RRTopicTable
getWaitingTime	kademlia/Discv5StatefulTopicTable.java	/^    protected long getWaitingTime(TopicRegistration reg, long curr_time, Ticket ticket) {$/;"	m	class:Discv5StatefulTopicTable
getWaitingTime	kademlia/Discv5TopicTable.java	/^    protected long getWaitingTime(TopicRegistration reg, long curr_time) {$/;"	m	class:Discv5TopicTable
getZERO	config/Operators.java	/^	public Number getZERO() {$/;"	m	class:Operators
getbucketMinDistance	kademlia/RoutingTable.java	/^	public int getbucketMinDistance() {$/;"	m	class:RoutingTable
getnBuckets	kademlia/SearchTable.java	/^	public int getnBuckets() {$/;"	m	class:SearchTable
getpair_rand	cdsim/FullNextCycle.java	/^protected final boolean getpair_rand;$/;"	f	class:FullNextCycle
getter	vector/VectControl.java	/^protected final Getter getter;$/;"	f	class:VectControl
getter1	vector/VectAngle.java	/^private final Getter getter1;$/;"	f	class:VectAngle	file:
getter2	vector/VectAngle.java	/^private final Getter getter2;$/;"	f	class:VectAngle	file:
handleFind	kademlia/Discv5EvilTicketProtocol.java	/^	protected void handleFind(Message m, int myPid, int dist) {$/;"	m	class:Discv5EvilTicketProtocol
handleFind	kademlia/KademliaProtocol.java	/^	protected void handleFind(Message m, int myPid, int dist) {$/;"	m	class:KademliaProtocol
handleInitFind	kademlia/KademliaProtocol.java	/^	protected void handleInitFind(Message m, int myPid) {$/;"	m	class:KademliaProtocol
handleInitRegisterTopic	kademlia/Discv5EvilTicketProtocol.java	/^    protected void handleInitRegisterTopic(Message m, int myPid) {$/;"	m	class:Discv5EvilTicketProtocol
handleInitRegisterTopic	kademlia/Discv5TicketProtocol.java	/^	protected void handleInitRegisterTopic(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleInitTopicLookup	kademlia/Discv5TicketProtocol.java	/^	private void handleInitTopicLookup(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol	file:
handleRegister	kademlia/Discv5EvilTicketProtocol.java	/^    protected void handleRegister(Message m, int myPid) {$/;"	m	class:Discv5EvilTicketProtocol
handleRegister	kademlia/Discv5TicketProtocol.java	/^	protected void handleRegister(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleRegisterResponse	kademlia/Discv5TicketProtocol.java	/^	protected void handleRegisterResponse(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleResponse	kademlia/Discv5TicketProtocol.java	/^	protected void handleResponse(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleResponse	kademlia/KademliaProtocol.java	/^	protected void handleResponse(Message m, int myPid) {$/;"	m	class:KademliaProtocol
handleTicketRequest	kademlia/Discv5EvilTicketProtocol.java	/^    protected void handleTicketRequest(Message m, int myPid) {$/;"	m	class:Discv5EvilTicketProtocol
handleTicketRequest	kademlia/Discv5TicketProtocol.java	/^	protected void handleTicketRequest(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleTicketResponse	kademlia/Discv5EvilTicketProtocol.java	/^	protected void handleTicketResponse(Message m, int myPid) {$/;"	m	class:Discv5EvilTicketProtocol
handleTicketResponse	kademlia/Discv5TicketProtocol.java	/^	protected void handleTicketResponse(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleTimeout	kademlia/Discv5TicketProtocol.java	/^	private void handleTimeout(Timeout t, int myPid) {$/;"	m	class:Discv5TicketProtocol	file:
handleTopicQuery	kademlia/Discv5EvilTicketProtocol.java	/^    protected void handleTopicQuery(Message m, int myPid) {$/;"	m	class:Discv5EvilTicketProtocol
handleTopicQuery	kademlia/Discv5TicketProtocol.java	/^	protected void handleTopicQuery(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
handleTopicQueryReply	kademlia/Discv5TicketProtocol.java	/^	protected void handleTopicQueryReply(Message m, int myPid) {$/;"	m	class:Discv5TicketProtocol
hasLinkable	config/FastConfig.java	/^public static boolean hasLinkable(int pid) { return numLinkables(pid) > 0; }$/;"	m	class:FastConfig
hasNext	util/IndexIterator.java	/^	public boolean hasNext();$/;"	m	interface:IndexIterator
hasNext	util/LinearIterator.java	/^public boolean hasNext() { return (reverse ? pointer >= 0 : pointer < len); }$/;"	m	class:LinearIterator
hasNext	util/RandPermutation.java	/^public boolean hasNext() { return pointer > 0; }$/;"	m	class:RandPermutation
hasNext	util/WeightedRandPerm.java	/^public boolean hasNext() { return pointer > 0; }$/;"	m	class:WeightedRandPerm
hasTransport	config/FastConfig.java	/^public static boolean hasTransport(int pid)$/;"	m	class:FastConfig
hashCode	core/GeneralNode.java	/^public int hashCode() { return (int)getID(); }$/;"	m	class:GeneralNode
hashCode	kademlia/KademliaNode.java	/^    public int hashCode()$/;"	m	class:KademliaNode
hashCode	kademlia/Topic.java	/^    public int hashCode()$/;"	m	class:Topic
hashCode	util/IncrementalFreq.java	/^public int hashCode() {$/;"	m	class:IncrementalFreq
heap	edsim/EDSimulator.java	/^private static PriorityQ heap = null;$/;"	f	class:EDSimulator	file:
hopStore	kademlia/KademliaObserver.java	/^    public static IncrementalStats hopStore = new IncrementalStats();$/;"	f	class:KademliaObserver
hostID	kademlia/Discv5TopicTable.java	/^    protected BigInteger hostID;$/;"	f	class:Discv5TopicTable
hostID	kademlia/Topic.java	/^    protected BigInteger hostID;$/;"	f	class:Topic
id	kademlia/KademliaNode.java	/^    private BigInteger id;$/;"	f	class:KademliaNode	file:
id	kademlia/Message.java	/^	public long id;$/;"	f	class:Message
idDist	kademlia/CustomDistribution.java	/^    private String idDist;$/;"	f	class:CustomDistribution	file:
idModifierExp	kademlia/Discv5GlobalTopicTable.java	/^    protected static final double idModifierExp =0.4;$/;"	f	class:Discv5GlobalTopicTable
idPoolSize	kademlia/CustomDistribution.java	/^    private int idPoolSize;$/;"	f	class:CustomDistribution	file:
id_counter	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<BigInteger, Integer> id_counter;$/;"	f	class:Discv5StatefulTopicTable	file:
id_last_modifier	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<BigInteger, Double> id_last_modifier;$/;"	f	class:Discv5StatefulTopicTable	file:
id_timestamp	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<BigInteger, Long> id_timestamp;$/;"	f	class:Discv5StatefulTopicTable	file:
in	graph/ConstUndirGraph.java	/^protected final List<Integer>[] in;$/;"	f	class:ConstUndirGraph
incomingConnections	kademlia/NodeConnections.java	/^    private List<KademliaNode> incomingConnections;$/;"	f	class:NodeConnections	file:
increaseAvailableRequests	kademlia/TicketTable.java	/^	public void increaseAvailableRequests() {$/;"	m	class:TicketTable
increaseMaliciousQueries	kademlia/operations/LookupOperation.java	/^    public void increaseMaliciousQueries() {$/;"	m	class:LookupOperation
increaseReturned	kademlia/operations/Operation.java	/^	public void increaseReturned(BigInteger res) {$/;"	m	class:Operation
increaseUsed	kademlia/operations/Operation.java	/^	public void increaseUsed(BigInteger res) {$/;"	m	class:Operation
index	core/GeneralNode.java	/^private int index;$/;"	f	class:GeneralNode	file:
info	kademlia/KademliaCommonConfig.java	/^	public static String info() {$/;"	m	class:KademliaCommonConfig
init	vector/Getter.java	/^private void init() {$/;"	m	class:Getter	file:
init	vector/Setter.java	/^private void init() {$/;"	m	class:Setter	file:
initGraph	graph/ConstUndirGraph.java	/^protected void initGraph() {$/;"	m	class:ConstUndirGraph
initGraph	graph/FastUndirGraph.java	/^protected void initGraph()$/;"	m	class:FastUndirGraph
initTicketRequestTime	kademlia/Discv5EvilTicketProtocol.java	/^	private HashMap <Topic, HashMap<BigInteger,Long> >initTicketRequestTime;$/;"	f	class:Discv5EvilTicketProtocol	file:
initialize	dynamics/MethodInvoker.java	/^public void initialize(Node n) {$/;"	m	class:MethodInvoker
initialize	dynamics/NodeInitializer.java	/^public void initialize(Node n);$/;"	m	interface:NodeInitializer
initialize	dynamics/RandNI.java	/^public void initialize(Node n)$/;"	m	class:RandNI
initialize	dynamics/StarNI.java	/^public void initialize(Node n) {$/;"	m	class:StarNI
initialize	edsim/CDScheduler.java	/^public void initialize(Node n) {$/;"	m	class:CDScheduler
initialize	vector/UniformDistribution.java	/^public void initialize(Node n) {$/;"	m	class:UniformDistribution
initialize	vector/VectCopy.java	/^public void initialize(Node n) {$/;"	m	class:VectCopy
initializeRandom	core/CommonState.java	/^public static void initializeRandom(long seed)$/;"	m	class:CommonState
inits	dynamics/DynamicNetwork.java	/^protected final NodeInitializer[] inits;$/;"	f	class:DynamicNetwork
inits	dynamics/OscillatingNetwork.java	/^private final NodeInitializer[] inits;$/;"	f	class:OscillatingNetwork	file:
inits	kademlia/DnsListDistribution.java	/^	protected NodeInitializer[] inits;$/;"	f	class:DnsListDistribution
inits	kademlia/Turbulence.java	/^	protected NodeInitializer[] inits;$/;"	f	class:Turbulence
ipModifierExp	kademlia/Discv5GlobalTopicTable.java	/^    protected static final double ipModifierExp = 0.4;$/;"	f	class:Discv5GlobalTopicTable
ipPoolSize	kademlia/CustomDistribution.java	/^    private int ipPoolSize;$/;"	f	class:CustomDistribution	file:
ip_counter	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<String, Integer> ip_counter;$/;"	f	class:Discv5StatefulTopicTable	file:
ip_last_modifier	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<String, Double> ip_last_modifier;$/;"	f	class:Discv5StatefulTopicTable	file:
ip_timestamp	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<String, Long> ip_timestamp;$/;"	f	class:Discv5StatefulTopicTable	file:
isCD	cdsim/CDState.java	/^public static boolean isCD() { return cycle >= 0; }$/;"	m	class:CDState
isConfigurationCycleDriven	cdsim/CDSimulator.java	/^public static final boolean isConfigurationCycleDriven()$/;"	m	class:CDSimulator
isConfigurationEventDriven	edsim/EDSimulator.java	/^public static final boolean isConfigurationEventDriven()$/;"	m	class:EDSimulator
isEclipsed	kademlia/KademliaNode.java	/^    public boolean isEclipsed() {$/;"	m	class:KademliaNode
isEclipsed	kademlia/KademliaNode.java	/^    public boolean isEclipsed(String topic) {$/;"	m	class:KademliaNode
isEclipsed	kademlia/NodeConnections.java	/^    public boolean isEclipsed() {$/;"	m	class:NodeConnections
isEdge	core/OverlayGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:OverlayGraph
isEdge	graph/BitMatrixGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:BitMatrixGraph
isEdge	graph/ConstUndirGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:ConstUndirGraph
isEdge	graph/FastUndirGraph.java	/^public boolean isEdge(int i, int j)$/;"	m	class:FastUndirGraph
isEdge	graph/Graph.java	/^	boolean isEdge(int i, int j);$/;"	m	interface:Graph
isEdge	graph/NeighbourListGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:NeighbourListGraph
isEdge	graph/PrefixSubGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:PrefixSubGraph
isEdge	graph/SubGraphEdges.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:SubGraphEdges
isEdge	graph/UndirectedGraph.java	/^public boolean isEdge(int i, int j) {$/;"	m	class:UndirectedGraph
isInteger	vector/Setter.java	/^public boolean isInteger() {$/;"	m	class:Setter
isNetworkConnected	kademlia/Util.java	/^	public static boolean isNetworkConnected() {$/;"	m	class:Util
isRegistered	kademlia/Ticket.java	/^    public boolean isRegistered() {$/;"	m	class:Ticket
isRegistrationComplete	kademlia/Ticket.java	/^    private boolean isRegistrationComplete;$/;"	f	class:Ticket	file:
isRegistrationComplete	kademlia/Ticket.java	/^    public boolean isRegistrationComplete() {$/;"	m	class:Ticket
isRequested	kademlia/NodeConnections.java	/^	public boolean isRequested() {$/;"	m	class:NodeConnections
isUp	core/Fallible.java	/^	public boolean isUp();$/;"	m	interface:Fallible
isUp	core/GeneralNode.java	/^public boolean isUp() { return failstate==OK; }$/;"	m	class:GeneralNode
isValidProtocolName	config/ConfigContainer.java	/^public boolean isValidProtocolName(String protname)$/;"	m	class:ConfigContainer
isValidProtocolName	config/Configuration.java	/^public static boolean isValidProtocolName(String protname)$/;"	m	class:Configuration
is_evil	kademlia/KademliaNode.java	/^    public boolean is_evil=false;$/;"	f	class:KademliaNode
ivalue	vector/TestVectors.java	/^protected int ivalue;$/;"	f	class:TestVectors
join	rangesim/ProcessHandler.java	/^public abstract void join()$/;"	m	interface:ProcessHandler
join	rangesim/RangeSimulator.java	/^public void join() throws InterruptedException$/;"	m	class:RangeSimulator
joinAll	rangesim/ProcessManager.java	/^public void joinAll()$/;"	m	class:ProcessManager
json	kademlia/DnsListDistribution.java	/^	private JSONObject json;$/;"	f	class:DnsListDistribution	file:
jvmoptions	rangesim/RangeSimulator.java	/^private String[] jvmoptions;$/;"	f	class:RangeSimulator	file:
k	dynamics/RandNI.java	/^private final int k;$/;"	f	class:RandNI	file:
k	dynamics/WireFromFile.java	/^private final int k;$/;"	f	class:WireFromFile	file:
k	dynamics/WireKOut.java	/^private final int k;$/;"	f	class:WireKOut	file:
k	dynamics/WireRegRootedTree.java	/^private final int k;$/;"	f	class:WireRegRootedTree	file:
k	dynamics/WireRingLattice.java	/^private final int k;$/;"	f	class:WireRingLattice	file:
k	dynamics/WireScaleFreeBA.java	/^private int k;$/;"	f	class:WireScaleFreeBA	file:
k	dynamics/WireScaleFreeDM.java	/^private final int k;$/;"	f	class:WireScaleFreeDM	file:
k	dynamics/WireWS.java	/^private final int k;$/;"	f	class:WireWS	file:
k	kademlia/KBucket.java	/^	protected int k,maxReplacements;$/;"	f	class:KBucket
k	kademlia/RoutingTable.java	/^	protected int nBuckets,k,maxReplacements;$/;"	f	class:RoutingTable
k_buckets	kademlia/RoutingTable.java	/^	protected KBucket k_buckets[];$/;"	f	class:RoutingTable
kadProtocol	core/GeneralNode.java	/^private KademliaProtocol kadProtocol;$/;"	f	class:GeneralNode	file:
kadProtocol	kademlia/KademliaObserver.java	/^    private static KademliaProtocol kadProtocol;$/;"	f	class:KademliaObserver	file:
kademliaid	kademlia/KademliaProtocol.java	/^	protected int kademliaid;$/;"	f	class:KademliaProtocol
kademliaid	kademlia/Turbulence.java	/^	protected int kademliaid;$/;"	f	class:Turbulence
l1	vector/Normalizer.java	/^private final double l1;$/;"	f	class:Normalizer	file:
lastAskedBucket	kademlia/TicketTable.java	/^    private int lastAskedBucket;$/;"	f	class:TicketTable	file:
lastAskedBucket	kademlia/operations/LookupTicketOperation.java	/^	int lastAskedBucket;$/;"	f	class:LookupTicketOperation
lastSeed	util/ExtendedRandom.java	/^private long lastSeed;$/;"	f	class:ExtendedRandom	file:
lastpid	reports/GraphObserver.java	/^private static int lastpid = -1234;$/;"	f	class:GraphObserver	file:
leadingZeros8	kademlia/Util.java	/^	private static int leadingZeros8(int x) {$/;"	m	class:Util	file:
len	core/IdleProtocol.java	/^protected int len;$/;"	f	class:IdleProtocol
len	core/Network.java	/^private static int len;$/;"	f	class:Network	file:
len	util/LinearIterator.java	/^private int len = 0;$/;"	f	class:LinearIterator	file:
len	util/RandPermutation.java	/^private int len = 0;$/;"	f	class:RandPermutation	file:
len	util/WeightedRandPerm.java	/^private int len = 0;$/;"	f	class:WeightedRandPerm	file:
letterPairs	config/ConfigContainer.java	/^private String[] letterPairs(String str)$/;"	m	class:ConfigContainer	file:
limit	kademlia/Discv5TrafficGenerator.java	/^	private int limit = 1;$/;"	f	class:Discv5TrafficGenerator	file:
links	config/FastConfig.java	/^protected static final int[][] links;$/;"	f	class:FastConfig
load	config/ConfigProperties.java	/^public void load( String fileName ) throws IOException {$/;"	m	class:ConfigProperties
load	config/ParsedProperties.java	/^public void load( String fileName ) throws IOException {$/;"	m	class:ParsedProperties
loadControls	cdsim/CDSimulator.java	/^private static String[] loadControls()$/;"	m	class:CDSimulator	file:
loadPropertyString	config/ConfigProperties.java	/^public void loadPropertyString( String prop ) throws IOException {$/;"	m	class:ConfigProperties
loadSystemResource	config/ConfigProperties.java	/^public void loadSystemResource( String n ) throws IOException {$/;"	m	class:ConfigProperties
local	transport/E2ETransport.java	/^private static long local;$/;"	f	class:E2ETransport	file:
log2	kademlia/Util.java	/^	public static double log2(BigInteger x)$/;"	m	class:Util
logDistance	kademlia/Util.java	/^	public static int logDistance(BigInteger a,BigInteger b)$/;"	m	class:Util
logFolderName	kademlia/KademliaObserver.java	/^    private static String logFolderName; $/;"	f	class:KademliaObserver	file:
logger	kademlia/Discv5TopicTable.java	/^    protected Logger logger;$/;"	f	class:Discv5TopicTable
logger	kademlia/KademliaProtocol.java	/^	protected Logger logger;$/;"	f	class:KademliaProtocol
logger	kademlia/SearchTable.java	/^	Logger logger;$/;"	f	class:SearchTable
logger	kademlia/TicketTable.java	/^    Logger logger;$/;"	f	class:TicketTable
logtime	edsim/EDSimulator.java	/^private static long logtime;$/;"	f	class:EDSimulator	file:
lookupPid	config/ConfigContainer.java	/^public String lookupPid(int pid)$/;"	m	class:ConfigContainer
lookupPid	config/ConfigContainer.java	/^public int lookupPid(String protname)$/;"	m	class:ConfigContainer
lookupPid	config/Configuration.java	/^public static String lookupPid(int pid)$/;"	m	class:Configuration
lookupPid	config/Configuration.java	/^public static int lookupPid(String protname)$/;"	m	class:Configuration
lookupResultBuffer	kademlia/NodeConnections.java	/^    private HashMap<KademliaNode,BigInteger> lookupResultBuffer;$/;"	f	class:NodeConnections	file:
lookup_total	kademlia/KademliaObserver.java	/^    public static IncrementalStats lookup_total = new IncrementalStats();$/;"	f	class:KademliaObserver
loss	transport/UnreliableTransport.java	/^private final float loss;$/;"	f	class:UnreliableTransport	file:
lvalue	vector/PeakDistribution.java	/^private final Number lvalue;$/;"	f	class:PeakDistribution	file:
lvalue	vector/TestVectors.java	/^protected long lvalue;$/;"	f	class:TestVectors
m	kademlia/Ticket.java	/^    Message m;$/;"	f	class:Ticket
main	Simulator.java	/^public static void main(String[] args)$/;"	m	class:Simulator
main	config/CheckConfig.java	/^public static void main(String[] args)$/;"	m	class:CheckConfig
main	config/ClassFinder.java	/^public static void main( String[] argv )$/;"	m	class:ClassFinder
main	rangesim/RangeSimulator.java	/^public static void main(String[] args)$/;"	m	class:RangeSimulator
main	util/MedianStats.java	/^public static void main( String[] args ) {$/;"	m	class:MedianStats
makeInitFindNode	kademlia/Message.java	/^	public static final Message makeInitFindNode(Object body) {$/;"	m	class:Message
makeRegister	kademlia/Message.java	/^	public static final Message makeRegister(Topic topic) {$/;"	m	class:Message
makeRegisterDecision	kademlia/Discv5GlobalTopicTable.java	/^    protected Ticket [] makeRegisterDecision(long curr_time) {   $/;"	m	class:Discv5GlobalTopicTable
makeRegisterDecision	kademlia/Discv5RRTopicTable.java	/^    protected Ticket [] makeRegisterDecision(long curr_time) {  $/;"	m	class:Discv5RRTopicTable
makeRegisterDecision	kademlia/Discv5StatefulTopicTable.java	/^    protected Ticket [] makeRegisterDecision(long curr_time) {   $/;"	m	class:Discv5StatefulTopicTable
makeRegisterDecision	kademlia/Discv5TicketProtocol.java	/^	private void makeRegisterDecision(Topic topic, int myPid) {$/;"	m	class:Discv5TicketProtocol	file:
makeRegisterDecision	kademlia/Discv5TopicTable.java	/^    protected Ticket [] makeRegisterDecision(long curr_time) {   $/;"	m	class:Discv5TopicTable
makeRegisterDecisionRoundRobin	kademlia/Discv5RRTopicTable.java	/^    private Ticket [] makeRegisterDecisionRoundRobin(long curr_time, boolean begin_of_round) {$/;"	m	class:Discv5RRTopicTable	file:
malQueried	kademlia/operations/LookupOperation.java	/^    private int malQueried;$/;"	f	class:LookupOperation	file:
maliciousDiscoveredCount	kademlia/operations/LookupOperation.java	/^    public int maliciousDiscoveredCount() {$/;"	m	class:LookupOperation
maliciousNodesQueries	kademlia/operations/LookupOperation.java	/^    public int maliciousNodesQueries() {$/;"	m	class:LookupOperation
manageDefault	config/ConfigContainer.java	/^private void manageDefault(String name, Object def, $/;"	m	class:ConfigContainer	file:
manageException	config/ConfigContainer.java	/^private void manageException(String name, RuntimeException e)$/;"	m	class:ConfigContainer	file:
map	config/ClassFinder.java	/^private static Map<String,String> map = new TreeMap<String,String>();	$/;"	f	class:ClassFinder	file:
max	util/IncrementalStats.java	/^private double max;$/;"	f	class:IncrementalStats	file:
max	vector/LinearDistribution.java	/^private final Number max;$/;"	f	class:LinearDistribution	file:
max	vector/UniformDistribution.java	/^private final Number max;$/;"	f	class:UniformDistribution	file:
maxDirs	config/ClassFinder.java	/^private static final int maxDirs;$/;"	f	class:ClassFinder	file:
maxIncomingConnections	kademlia/NodeConnections.java	/^    private int maxIncomingConnections;$/;"	f	class:NodeConnections	file:
maxOutgoingConnections	kademlia/NodeConnections.java	/^    private int maxOutgoingConnections;$/;"	f	class:NodeConnections	file:
maxPriority	edsim/Heap.java	/^public long maxPriority() { return (1L << pbits)-1; }$/;"	m	class:Heap
maxPriority	edsim/PriorityQ.java	/^public long maxPriority();$/;"	m	interface:PriorityQ
maxReplacements	kademlia/KBucket.java	/^	protected int k,maxReplacements;$/;"	f	class:KBucket
maxReplacements	kademlia/RoutingTable.java	/^	protected int nBuckets,k,maxReplacements;$/;"	f	class:RoutingTable
maxRetries	kademlia/BackoffService.java	/^	 private int maxRetries;$/;"	f	class:BackoffService	file:
maxTime	edsim/Heap.java	/^public long maxTime() { return Long.MAX_VALUE >> pbits; }$/;"	m	class:Heap
maxTime	edsim/PriorityQ.java	/^public long maxTime();$/;"	m	interface:PriorityQ
maxd	reports/BallExpansion.java	/^private final int maxd;$/;"	f	class:BallExpansion	file:
maxdepth	config/ConfigContainer.java	/^private int maxdepth;$/;"	f	class:ConfigContainer	file:
maxsize	dynamics/DynamicNetwork.java	/^protected final int maxsize;$/;"	f	class:DynamicNetwork
maxsize	dynamics/OscillatingNetwork.java	/^private final int maxsize;$/;"	f	class:OscillatingNetwork	file:
maxsize	kademlia/Turbulence.java	/^	private int maxsize;$/;"	f	class:Turbulence	file:
maxtopicNum	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	private final int maxtopicNum;$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
maxtopicNum	kademlia/TurbulenceMultiTopic.java	/^	private final int maxtopicNum;$/;"	f	class:TurbulenceMultiTopic	file:
messageTypetoString	kademlia/Message.java	/^	public String messageTypetoString() {$/;"	m	class:Message
method	dynamics/MethodInvoker.java	/^private final Method method[];$/;"	f	class:MethodInvoker	file:
method	dynamics/WireByMethod.java	/^private final Method method;$/;"	f	class:WireByMethod	file:
method	reports/DegreeStats.java	/^private final String method;$/;"	f	class:DegreeStats	file:
method	vector/Getter.java	/^private Method method = null;$/;"	f	class:Getter	file:
method	vector/Setter.java	/^private Method method=null;$/;"	f	class:Setter	file:
method	vector/VectorComparator.java	/^private final Method method;$/;"	f	class:VectorComparator	file:
methodName	dynamics/MethodInvoker.java	/^private final String methodName;$/;"	f	class:MethodInvoker	file:
methodName	vector/Getter.java	/^private String methodName;$/;"	f	class:Getter	file:
methodName	vector/Setter.java	/^private String methodName;$/;"	f	class:Setter	file:
methodn	vector/Getter.java	/^private final String methodn;$/;"	f	class:Getter	file:
methodn	vector/Setter.java	/^private final String methodn;$/;"	f	class:Setter	file:
min	transport/UniformRandomTransport.java	/^private final long min;$/;"	f	class:UniformRandomTransport	file:
min	util/IncrementalStats.java	/^private double min;$/;"	f	class:IncrementalStats	file:
min	vector/LinearDistribution.java	/^private final Number min;$/;"	f	class:LinearDistribution	file:
min	vector/UniformDistribution.java	/^private final Number min;$/;"	f	class:UniformDistribution	file:
minHeapify	edsim/Heap.java	/^private void minHeapify(int index) $/;"	m	class:Heap	file:
minsize	dynamics/DynamicNetwork.java	/^protected final int minsize;$/;"	f	class:DynamicNetwork
minsize	dynamics/OscillatingNetwork.java	/^private final int minsize;$/;"	f	class:OscillatingNetwork	file:
minsize	kademlia/Turbulence.java	/^	private int minsize;$/;"	f	class:Turbulence	file:
mintopicNum	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	private final int mintopicNum;$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
mintopicNum	kademlia/TurbulenceMultiTopic.java	/^	private final int mintopicNum;$/;"	f	class:TurbulenceMultiTopic	file:
mod	config/Operators.java	/^	public Number mod(Number num1, Number num2) {$/;"	m	class:Operators
msgID	kademlia/Timeout.java	/^	public long msgID;$/;"	f	class:Timeout
msgReceivedByNodes	kademlia/KademliaObserver.java	/^    private static HashMap<BigInteger, Integer> msgReceivedByNodes = new HashMap<BigInteger, Integer>();$/;"	f	class:KademliaObserver	file:
msgSentPerType	kademlia/KademliaObserver.java	/^    private static HashMap<Integer, Integer> msgSentPerType = new HashMap<Integer, Integer>();$/;"	f	class:KademliaObserver	file:
msgWriter	kademlia/KademliaObserver.java	/^    private static FileWriter msgWriter;$/;"	f	class:KademliaObserver	file:
msg_deliv	kademlia/KademliaObserver.java	/^    private static IncrementalStats msg_deliv = new IncrementalStats();$/;"	f	class:KademliaObserver	file:
msg_sent	kademlia/KademliaObserver.java	/^    public static IncrementalStats msg_sent = new IncrementalStats();$/;"	f	class:KademliaObserver
mul	config/Operators.java	/^	public Number mul(Number num1, Number num2) {$/;"	m	class:Operators
multicast	graph/GraphAlgorithms.java	/^public static void multicast( Graph g, int[] b, Random r ) {$/;"	m	class:GraphAlgorithms
myPid	kademlia/SearchTable.java	/^	private int myPid;$/;"	f	class:SearchTable	file:
myPid	kademlia/TicketTable.java	/^    private int myPid;$/;"	f	class:TicketTable	file:
n	kademlia/KademliaNode.java	/^    private Node n;$/;"	f	class:KademliaNode	file:
n	kademlia/NodeConnections.java	/^    private KademliaNode n;$/;"	f	class:NodeConnections	file:
n	reports/BallExpansion.java	/^private final int n;$/;"	f	class:BallExpansion	file:
n	reports/Clustering.java	/^private final int n;$/;"	f	class:Clustering	file:
n	reports/DegreeStats.java	/^private final int n;$/;"	f	class:DegreeStats	file:
n	reports/RandRemoval.java	/^private final int n;$/;"	f	class:RandRemoval	file:
n	util/IncrementalFreq.java	/^private int n;$/;"	f	class:IncrementalFreq	file:
n	util/IncrementalStats.java	/^private int n;$/;"	f	class:IncrementalStats	file:
nBuckets	kademlia/RoutingTable.java	/^	protected int nBuckets,k,maxReplacements;$/;"	f	class:RoutingTable
name	reports/GraphObserver.java	/^protected final String name;$/;"	f	class:GraphObserver
name	vector/SingleValueObserver.java	/^private final String name;$/;"	f	class:SingleValueObserver	file:
name	vector/VectAngle.java	/^private final String name;$/;"	f	class:VectAngle	file:
nc	reports/GraphStats.java	/^private final int nc;$/;"	f	class:GraphStats	file:
nce	edsim/CDScheduler.java	/^private final NextCycleEvent[] nce;$/;"	f	class:CDScheduler	file:
needUndir	reports/GraphObserver.java	/^private static boolean needUndir=false;$/;"	f	class:GraphObserver	file:
neighbors	core/IdleProtocol.java	/^protected Node[] neighbors;$/;"	f	class:IdleProtocol
neighbors	graph/NeighbourListGraph.java	/^private final ArrayList<Set<Integer>> neighbors;$/;"	f	class:NeighbourListGraph	file:
neighbours	kademlia/KBucket.java	/^	protected List<BigInteger> neighbours;$/;"	f	class:KBucket
neighbours	kademlia/Message.java	/^		public final BigInteger[] neighbours;$/;"	f	class:Message.TicketReplyBody
neighbours	kademlia/Message.java	/^		public final BigInteger[] neighbours;$/;"	f	class:Message.TopicLookupBody
neighboursList	kademlia/operations/LookupTicketOperation.java	/^    private List<BigInteger> neighboursList;$/;"	f	class:LookupTicketOperation	file:
next	core/Scheduler.java	/^protected long next = -1;$/;"	f	class:Scheduler
next	util/IndexIterator.java	/^	public int next();$/;"	m	interface:IndexIterator
next	util/LinearIterator.java	/^public int next() {$/;"	m	class:LinearIterator
next	util/RandPermutation.java	/^public int next() {$/;"	m	class:RandPermutation
next	util/WeightedRandPerm.java	/^public int next() {$/;"	m	class:WeightedRandPerm
nextCounterName	util/FileNameGenerator.java	/^public String nextCounterName() {$/;"	m	class:FileNameGenerator
nextCycle	cdsim/CDProtocol.java	/^public void nextCycle(Node node, int protocolID);$/;"	m	interface:CDProtocol
nextCycle	cdsim/DaemonProtocol.java	/^public void nextCycle( Node node, int protocolID ) {$/;"	m	class:DaemonProtocol
nextCycleStart	edsim/RegRandNextCycle.java	/^private long nextCycleStart = -1;$/;"	f	class:RegRandNextCycle	file:
nextDecisionTime	kademlia/Discv5TopicTable.java	/^    protected HashMap<Topic, Long> nextDecisionTime;$/;"	f	class:Discv5TopicTable
nextDegree	reports/DegreeStats.java	/^private int nextDegree()$/;"	m	class:DegreeStats	file:
nextDelay	edsim/NextCycleEvent.java	/^protected long nextDelay(long step) {$/;"	m	class:NextCycleEvent
nextDelay	edsim/RandNextCycle.java	/^protected long nextDelay(long step) {$/;"	m	class:RandNextCycle
nextDelay	edsim/RegRandNextCycle.java	/^protected long nextDelay(long step) {$/;"	m	class:RegRandNextCycle
nextExperiment	cdsim/CDSimulator.java	/^public static final void nextExperiment()$/;"	m	class:CDSimulator
nextExperiment	edsim/EDSimulator.java	/^public static void nextExperiment() $/;"	m	class:EDSimulator
nextExpirationTime	kademlia/Discv5GlobalTopicTable.java	/^    private long nextExpirationTime(long curr_time) {$/;"	m	class:Discv5GlobalTopicTable	file:
nextID	core/GeneralNode.java	/^private long nextID() {$/;"	m	class:GeneralNode	file:
nextLong	util/ExtendedRandom.java	/^public long nextLong(long n) {$/;"	m	class:ExtendedRandom
nextNodeId	reports/DegreeStats.java	/^private int nextNodeId()$/;"	m	class:DegreeStats	file:
nextPoisson	util/ExtendedRandom.java	/^public int nextPoisson(double mean) {$/;"	m	class:ExtendedRandom
nextRand	kademlia/UniformRandomGenerator.java	/^	private final BigInteger nextRand() {$/;"	m	class:UniformRandomGenerator	file:
nextTopicIndex	kademlia/Discv5RRTopicTable.java	/^    int nextTopicIndex; \/\/current topic index in the round-robin order$/;"	f	class:Discv5RRTopicTable
nextValues	rangesim/RangeSimulator.java	/^private void nextValues(int[] idx, String[][] values)$/;"	m	class:RangeSimulator	file:
nextlog	edsim/EDSimulator.java	/^private static long nextlog = 0;$/;"	f	class:EDSimulator	file:
nextnode	reports/DegreeStats.java	/^private int nextnode = 0;$/;"	f	class:DegreeStats	file:
nl	reports/GraphStats.java	/^private final int nl;$/;"	f	class:GraphStats	file:
node	core/CommonState.java	/^private static Node node;$/;"	f	class:CommonState	file:
node	core/Network.java	/^static Node[] node = null;$/;"	f	class:Network
node	edsim/PriorityQ.java	/^	public Node node;$/;"	f	class:PriorityQ.Event
node	kademlia/KademliaProtocol.java	/^	public KademliaNode node;$/;"	f	class:KademliaProtocol
node	kademlia/RetryTimeout.java	/^	public BigInteger node;$/;"	f	class:RetryTimeout
node	kademlia/Timeout.java	/^	public BigInteger node;$/;"	f	class:Timeout
node	kademlia/TopicRegistration.java	/^    private KademliaNode node;$/;"	f	class:TopicRegistration	file:
nodeId	kademlia/RoutingTable.java	/^	protected BigInteger nodeId = null;$/;"	f	class:RoutingTable
nodeIdtoNode	kademlia/Util.java	/^	public static Node nodeIdtoNode(BigInteger searchNodeId) {$/;"	m	class:Util
nodeInfo	kademlia/KademliaObserver.java	/^    private static HashMap<BigInteger, BigInteger> nodeInfo = new HashMap<BigInteger, BigInteger>();$/;"	f	class:KademliaObserver	file:
nodeMsgReceived	kademlia/KademliaObserver.java	/^    private static HashMap<BigInteger, Integer> nodeMsgReceived = new HashMap<BigInteger, Integer>();$/;"	f	class:KademliaObserver	file:
nodeSrc	kademlia/RetryTimeout.java	/^    public BigInteger nodeSrc; $/;"	f	class:RetryTimeout
nodeSrc	kademlia/Timeout.java	/^    public BigInteger nodeSrc; $/;"	f	class:Timeout
nodeTopicStored	kademlia/KademliaObserver.java	/^    private static HashMap<BigInteger, Integer> nodeTopicStored = new HashMap<BigInteger, Integer>();$/;"	f	class:KademliaObserver	file:
nodeindex	graph/NeighbourListGraph.java	/^private final HashMap<Object,Integer> nodeindex;$/;"	f	class:NeighbourListGraph	file:
nodes	edsim/Heap.java	/^private Node[] nodes;$/;"	f	class:Heap	file:
nodes	graph/NeighbourListGraph.java	/^private final ArrayList<Object> nodes;$/;"	f	class:NeighbourListGraph	file:
nodes	graph/SubGraphEdges.java	/^private final BitSet nodes;$/;"	f	class:SubGraphEdges	file:
nrHops	kademlia/Message.java	/^	protected int nrHops = 0;$/;"	f	class:Message
nrHops	kademlia/operations/Operation.java	/^	public int nrHops = 0;$/;"	f	class:Operation
numLinkables	config/FastConfig.java	/^public static int numLinkables(int pid) { return links[pid].length; }$/;"	m	class:FastConfig
numOfRegistrations	kademlia/Discv5EvilTicketProtocol.java	/^    private int numOfRegistrations;$/;"	f	class:Discv5EvilTicketProtocol	file:
numOfRejectedRegistrations	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfRejectedRegistrations = new HashMap<String, Integer> ();$/;"	f	class:KademliaObserver	file:
numOfRejectedRegistrationsByEvilNodes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfRejectedRegistrationsByEvilNodes = new HashMap<String, Integer> ();$/;"	f	class:KademliaObserver	file:
numOfReportedCumWaitingTimes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfReportedCumWaitingTimes = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
numOfReportedCumWaitingTimesByEvilNodes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfReportedCumWaitingTimesByEvilNodes = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
numOfReportedWaitingTimes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfReportedWaitingTimes = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
numOfReportedWaitingTimesByEvilNodes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numOfReportedWaitingTimesByEvilNodes = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
numberOfRegistrations	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> numberOfRegistrations = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
numberOfTriesLeft	kademlia/BackoffService.java	/^	 private int numberOfTriesLeft;$/;"	f	class:BackoffService	file:
o	kademlia/StateBuilder.java	/^	public static void o(Object o) {$/;"	m	class:StateBuilder
observerStep	kademlia/KademliaObserver.java	/^    private static int observerStep;$/;"	f	class:KademliaObserver	file:
obstime	rangesim/TaggedOutputStream.java	/^private final ArrayList<String> obstime;$/;"	f	class:TaggedOutputStream	file:
occupancy	kademlia/KBucket.java	/^	public int occupancy()$/;"	m	class:KBucket
occupancyPower	kademlia/Discv5GlobalTopicTable.java	/^    protected static final int occupancyPower = 4;$/;"	f	class:Discv5GlobalTopicTable
onKill	core/Cleanable.java	/^public void onKill();$/;"	m	interface:Cleanable
onKill	core/IdleProtocol.java	/^public void onKill()$/;"	m	class:IdleProtocol
onKill	core/OracleIdleProtocol.java	/^public void onKill() {}$/;"	m	class:OracleIdleProtocol
onKill	kademlia/Discv5TicketProtocol.java	/^	public void onKill() {$/;"	m	class:Discv5TicketProtocol
opID	kademlia/Timeout.java	/^	public long opID;$/;"	f	class:Timeout
opWriter	kademlia/KademliaObserver.java	/^    private static FileWriter opWriter; $/;"	f	class:KademliaObserver	file:
operationId	kademlia/Message.java	/^	public long operationId;$/;"	f	class:Message
operationId	kademlia/operations/Operation.java	/^	public long operationId;$/;"	f	class:Operation
operations	kademlia/KademliaProtocol.java	/^	protected LinkedHashMap<Long, Operation> operations;$/;"	f	class:KademliaProtocol
order	config/ConfigContainer.java	/^private String[] order(String[] names, String type)$/;"	m	class:ConfigContainer	file:
order	edsim/ControlEvent.java	/^private int order;$/;"	f	class:ControlEvent	file:
outgoingConnections	kademlia/NodeConnections.java	/^    private List<KademliaNode> outgoingConnections;$/;"	f	class:NodeConnections	file:
overflowMask	edsim/Heap.java	/^private final long overflowMask;$/;"	f	class:Heap	file:
p	rangesim/RangeSimulator.java	/^private Process p;$/;"	f	class:RangeSimulator	file:
p_add	kademlia/Turbulence.java	/^	private double p_add;$/;"	f	class:Turbulence	file:
p_idle	kademlia/Turbulence.java	/^	private double p_idle;$/;"	f	class:Turbulence	file:
p_rem	kademlia/Turbulence.java	/^	private double p_rem;$/;"	f	class:Turbulence	file:
pack	core/IdleProtocol.java	/^public void pack()$/;"	m	class:IdleProtocol
pack	core/Linkable.java	/^	public void pack();$/;"	m	interface:Linkable
pack	core/OracleIdleProtocol.java	/^public void pack() {}  $/;"	m	class:OracleIdleProtocol
pack	dynamics/RandNI.java	/^private final boolean pack;$/;"	f	class:RandNI	file:
pack	dynamics/StarNI.java	/^protected final boolean pack;$/;"	f	class:StarNI
pack	dynamics/WireGraph.java	/^private final boolean pack;$/;"	f	class:WireGraph	file:
parameterName	kademlia/KademliaObserver.java	/^    private String parameterName;$/;"	f	class:KademliaObserver	file:
parameterValue	kademlia/KademliaObserver.java	/^    private double parameterValue; $/;"	f	class:KademliaObserver	file:
pars	rangesim/RangeSimulator.java	/^private String[] pars;$/;"	f	class:RangeSimulator	file:
parseItem	util/StringListParser.java	/^private static void parseItem(List<String> list, String item)$/;"	m	class:StringListParser	file:
parseList	util/StringListParser.java	/^public static String[] parseList(String s)$/;"	m	class:StringListParser
parseRangeItem	util/StringListParser.java	/^private static void parseRangeItem(List<String> list, String start, String stop)$/;"	m	class:StringListParser	file:
parseRanges	config/CheckConfig.java	/^private static void parseRanges(Properties prop)$/;"	m	class:CheckConfig	file:
parseRanges	rangesim/RangeSimulator.java	/^private void parseRanges()$/;"	m	class:RangeSimulator	file:
parseSingleItem	util/StringListParser.java	/^private static void parseSingleItem(List<String> list, String item)$/;"	m	class:StringListParser	file:
parseStream	config/ParsedProperties.java	/^private int parseStream(BufferedReader f, String prefix, int pars, $/;"	m	class:ParsedProperties	file:
pbits	edsim/Heap.java	/^private final int pbits;$/;"	f	class:Heap	file:
peaks	vector/PeakDistribution.java	/^private final double peaks;$/;"	f	class:PeakDistribution	file:
peersim	Simulator.java	/^package peersim;$/;"	p
peersim.cdsim	cdsim/CDProtocol.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/CDSimulator.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/CDState.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/DaemonProtocol.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/FullNextCycle.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/NextCycle.java	/^package peersim.cdsim;$/;"	p
peersim.cdsim	cdsim/Shuffle.java	/^package peersim.cdsim;$/;"	p
peersim.config	config/CheckConfig.java	/^package peersim.config;$/;"	p
peersim.config	config/ClassFinder.java	/^package peersim.config;$/;"	p
peersim.config	config/ConfigContainer.java	/^package peersim.config;$/;"	p
peersim.config	config/ConfigProperties.java	/^package peersim.config;$/;"	p
peersim.config	config/Configuration.java	/^package peersim.config;$/;"	p
peersim.config	config/FastConfig.java	/^package peersim.config;$/;"	p
peersim.config	config/IllegalParameterException.java	/^package peersim.config;$/;"	p
peersim.config	config/MissingParameterException.java	/^package peersim.config;$/;"	p
peersim.config	config/NullPrintStream.java	/^package peersim.config;$/;"	p
peersim.config	config/Operators.java	/^package peersim.config;$/;"	p
peersim.config	config/ParsedProperties.java	/^package peersim.config;$/;"	p
peersim.core	core/Cleanable.java	/^package peersim.core;$/;"	p
peersim.core	core/CommonState.java	/^package peersim.core;$/;"	p
peersim.core	core/Control.java	/^package peersim.core;$/;"	p
peersim.core	core/Fallible.java	/^package peersim.core;$/;"	p
peersim.core	core/GeneralNode.java	/^package peersim.core;$/;"	p
peersim.core	core/IdleProtocol.java	/^package peersim.core;$/;"	p
peersim.core	core/Linkable.java	/^package peersim.core;$/;"	p
peersim.core	core/MaliciousProtocol.java	/^package peersim.core;$/;"	p
peersim.core	core/ModifiableNode.java	/^package peersim.core;$/;"	p
peersim.core	core/Network.java	/^package peersim.core;$/;"	p
peersim.core	core/Node.java	/^package peersim.core;$/;"	p
peersim.core	core/OracleIdleProtocol.java	/^package peersim.core;$/;"	p
peersim.core	core/OverlayGraph.java	/^package peersim.core;$/;"	p
peersim.core	core/Protocol.java	/^package peersim.core;$/;"	p
peersim.core	core/Scheduler.java	/^package peersim.core;$/;"	p
peersim.dynamics	dynamics/DynamicNetwork.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/MethodInvoker.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/NodeInitializer.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/OscillatingNetwork.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/RandNI.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/StarNI.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireByMethod.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireFromFile.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireGraph.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireKOut.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireRegRootedTree.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireRingLattice.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireScaleFreeBA.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireScaleFreeDM.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireStar.java	/^package peersim.dynamics;$/;"	p
peersim.dynamics	dynamics/WireWS.java	/^package peersim.dynamics;$/;"	p
peersim.edsim	edsim/CDScheduler.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/ControlEvent.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/EDProtocol.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/EDSimulator.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/Heap.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/NextCycleEvent.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/PriorityQ.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/RandNextCycle.java	/^package peersim.edsim;$/;"	p
peersim.edsim	edsim/RegRandNextCycle.java	/^package peersim.edsim;$/;"	p
peersim.graph	graph/BitMatrixGraph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/ConstUndirGraph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/FastUndirGraph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/Graph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/GraphAlgorithms.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/GraphFactory.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/GraphIO.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/NeighbourListGraph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/PrefixSubGraph.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/SubGraphEdges.java	/^package peersim.graph;$/;"	p
peersim.graph	graph/UndirectedGraph.java	/^package peersim.graph;$/;"	p
peersim.kademlia	kademlia/BackoffService.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Client.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/CustomDistribution.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5EvilTicketProtocol.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5GlobalTopicTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5MultiTopicTrafficGenerator.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5RRTopicTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5StatefulTopicTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5TicketProtocol.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5TopicTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5TrafficGenerator.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Discv5ZipfTrafficGenerator.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/DnsListDistribution.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/EthClient.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/KBucket.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/KademliaCommonConfig.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/KademliaNode.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/KademliaObserver.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/KademliaProtocol.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/LookupInfo.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Message.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/NodeConnections.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/RefreshBuckets.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/RegistrationLog.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/RetryTimeout.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/RoutingTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/SearchTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/SimpleEvent.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/StateBuilder.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Ticket.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TicketTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Timeout.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Topic.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TopicRegistration.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TopicTable.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TrafficGenerator.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Turbulence.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TurbulenceMultiTopic.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/TurbulenceSingleTopic.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/UniformRandomGenerator.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia	kademlia/Util.java	/^package peersim.kademlia;$/;"	p
peersim.kademlia.operations	kademlia/operations/FindOperation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.kademlia.operations	kademlia/operations/LookupOperation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.kademlia.operations	kademlia/operations/LookupTicketOperation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.kademlia.operations	kademlia/operations/Operation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.kademlia.operations	kademlia/operations/RegisterOperation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.kademlia.operations	kademlia/operations/TicketOperation.java	/^package peersim.kademlia.operations;$/;"	p
peersim.rangesim	rangesim/ProcessHandler.java	/^package peersim.rangesim;$/;"	p
peersim.rangesim	rangesim/ProcessManager.java	/^package peersim.rangesim;$/;"	p
peersim.rangesim	rangesim/RangeSimulator.java	/^package peersim.rangesim;$/;"	p
peersim.rangesim	rangesim/TaggedOutputStream.java	/^package peersim.rangesim;$/;"	p
peersim.reports	reports/BallExpansion.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/Clustering.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/ConnectivityObserver.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/DegreeStats.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/GraphObserver.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/GraphPrinter.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/GraphStats.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/MemoryObserver.java	/^package peersim.reports;$/;"	p
peersim.reports	reports/RandRemoval.java	/^package peersim.reports;$/;"	p
peersim.transport	transport/E2ENetwork.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/E2ETransport.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/KingParser.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/RouterInfo.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/Transport.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/TriangularMatrixParser.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/UniformRandomTransport.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/UniformRouterAssignment.java	/^package peersim.transport;$/;"	p
peersim.transport	transport/UnreliableTransport.java	/^package peersim.transport;$/;"	p
peersim.util	util/ExtendedRandom.java	/^package peersim.util;$/;"	p
peersim.util	util/FileNameGenerator.java	/^package peersim.util;$/;"	p
peersim.util	util/IncrementalFreq.java	/^package peersim.util;$/;"	p
peersim.util	util/IncrementalStats.java	/^package peersim.util;$/;"	p
peersim.util	util/IndexIterator.java	/^package peersim.util;$/;"	p
peersim.util	util/LinearIterator.java	/^package peersim.util;$/;"	p
peersim.util	util/MedianStats.java	/^package peersim.util;$/;"	p
peersim.util	util/MomentStats.java	/^package peersim.util;$/;"	p
peersim.util	util/RandPermutation.java	/^package peersim.util;$/;"	p
peersim.util	util/StringListParser.java	/^package peersim.util;$/;"	p
peersim.util	util/WeightedRandPerm.java	/^package peersim.util;$/;"	p
peersim.vector	vector/Getter.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/GetterSetterFinder.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/InitVectFromFile.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/LinearDistribution.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/Normalizer.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/PeakDistribution.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/Setter.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/SingleValue.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/SingleValueComparator.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/SingleValueHolder.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/SingleValueObserver.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/TestVectors.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/UniformDistribution.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/ValueDumper.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/VectAngle.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/VectControl.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/VectCopy.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/VectorComparator.java	/^package peersim.vector;$/;"	p
peersim.vector	vector/VectorObserver.java	/^package peersim.vector;$/;"	p
pendingLookup	kademlia/SearchTable.java	/^	boolean pendingLookup;$/;"	f	class:SearchTable
pendingLookups	kademlia/Discv5ZipfTrafficGenerator.java	/^	private int pendingRegistrations,pendingLookups,topicCount;$/;"	f	class:Discv5ZipfTrafficGenerator	file:
pendingRegistrations	kademlia/Discv5ZipfTrafficGenerator.java	/^	private int pendingRegistrations,pendingLookups,topicCount;$/;"	f	class:Discv5ZipfTrafficGenerator	file:
pendingTickets	kademlia/SearchTable.java	/^	private List<BigInteger> pendingTickets;$/;"	f	class:SearchTable	file:
pendingTickets	kademlia/TicketTable.java	/^    private List<BigInteger> pendingTickets;$/;"	f	class:TicketTable	file:
percentEvil	kademlia/CustomDistribution.java	/^    private double percentEvil;$/;"	f	class:CustomDistribution	file:
percentMaliciousRegistrations	kademlia/Discv5TopicTable.java	/^    public float percentMaliciousRegistrations() {$/;"	m	class:Discv5TopicTable
period	dynamics/OscillatingNetwork.java	/^private final int period;$/;"	f	class:OscillatingNetwork	file:
phase	core/CommonState.java	/^private static int phase = PHASE_UNKNOWN;$/;"	f	class:CommonState	file:
phase	reports/GraphObserver.java	/^private static int phase = -1234;$/;"	f	class:GraphObserver	file:
pid	core/CommonState.java	/^private static int pid;$/;"	f	class:CommonState	file:
pid	dynamics/MethodInvoker.java	/^private final int pid[];$/;"	f	class:MethodInvoker	file:
pid	dynamics/RandNI.java	/^private final int pid;$/;"	f	class:RandNI	file:
pid	dynamics/StarNI.java	/^protected final int pid;$/;"	f	class:StarNI
pid	dynamics/WireGraph.java	/^protected final int pid;$/;"	f	class:WireGraph
pid	edsim/CDScheduler.java	/^private final int[] pid;$/;"	f	class:CDScheduler	file:
pid	edsim/PriorityQ.java	/^	public byte pid;$/;"	f	class:PriorityQ.Event
pid	kademlia/Client.java	/^	private final int pid;$/;"	f	class:Client	file:
pid	kademlia/Discv5TrafficGenerator.java	/^	private final int pid;$/;"	f	class:Discv5TrafficGenerator	file:
pid	kademlia/EthClient.java	/^	private final int pid;$/;"	f	class:EthClient	file:
pid	kademlia/TrafficGenerator.java	/^	private final int pid;$/;"	f	class:TrafficGenerator	file:
pid	reports/GraphObserver.java	/^protected final int pid;$/;"	f	class:GraphObserver
pid	transport/UniformRouterAssignment.java	/^private int pid;	$/;"	f	class:UniformRouterAssignment	file:
pid	vector/Getter.java	/^private int pid;$/;"	f	class:Getter	file:
pid	vector/Setter.java	/^private int pid;$/;"	f	class:Setter	file:
pid	vector/SingleValueComparator.java	/^private int pid;$/;"	f	class:SingleValueComparator	file:
pid	vector/SingleValueObserver.java	/^private final int pid;$/;"	f	class:SingleValueObserver	file:
pid	vector/VectorComparator.java	/^private final int pid;$/;"	f	class:VectorComparator	file:
pids	cdsim/NextCycle.java	/^private final int[] pids;$/;"	f	class:NextCycle	file:
pids	edsim/Heap.java	/^private byte[] pids;$/;"	f	class:Heap	file:
pointer	util/LinearIterator.java	/^private int pointer = 0;$/;"	f	class:LinearIterator	file:
pointer	util/RandPermutation.java	/^private int pointer = 0;$/;"	f	class:RandPermutation	file:
pointer	util/WeightedRandPerm.java	/^private int pointer = 0;$/;"	f	class:WeightedRandPerm	file:
port	kademlia/KademliaNode.java	/^    private int port;$/;"	f	class:KademliaNode	file:
pow	config/Operators.java	/^	public Number pow(Number num1, Number num2) {$/;"	m	class:Operators
prefSize	graph/PrefixSubGraph.java	/^private int prefSize;$/;"	f	class:PrefixSubGraph	file:
prefix	kademlia/KademliaObserver.java	/^    private String prefix;$/;"	f	class:KademliaObserver	file:
prefix	kademlia/KademliaProtocol.java	/^	protected static String prefix = null;$/;"	f	class:KademliaProtocol
prefix	kademlia/RefreshBuckets.java	/^	private String prefix;$/;"	f	class:RefreshBuckets	file:
prefix	kademlia/StateBuilder.java	/^	private String prefix;$/;"	f	class:StateBuilder	file:
prefix	kademlia/Turbulence.java	/^	private String prefix;$/;"	f	class:Turbulence	file:
prefix	kademlia/Util.java	/^	public static BigInteger prefix(BigInteger address) {$/;"	m	class:Util
prefix	reports/MemoryObserver.java	/^private final String prefix;$/;"	f	class:MemoryObserver	file:
prefix	transport/KingParser.java	/^private String prefix;$/;"	f	class:KingParser	file:
prefix	util/FileNameGenerator.java	/^public final String prefix;$/;"	f	class:FileNameGenerator
prefix	vector/Getter.java	/^private final String prefix;$/;"	f	class:Getter	file:
prefix	vector/Setter.java	/^private final String prefix;$/;"	f	class:Setter	file:
prefix	vector/ValueDumper.java	/^private final String prefix;$/;"	f	class:ValueDumper	file:
prefix	vector/VectorObserver.java	/^private final String prefix;$/;"	f	class:VectorObserver	file:
prefixLen	kademlia/Util.java	/^	public static final int prefixLen(BigInteger b1, BigInteger b2) {$/;"	m	class:Util
previousTicketRequestTime	kademlia/Discv5EvilTicketProtocol.java	/^	private HashMap <Topic, HashMap<BigInteger,Long> >previousTicketRequestTime;$/;"	f	class:Discv5EvilTicketProtocol	file:
print	kademlia/SearchTable.java	/^	public void print() {$/;"	m	class:SearchTable
print	kademlia/TicketTable.java	/^	public void print() {$/;"	m	class:TicketTable
print	util/IncrementalFreq.java	/^public void print( PrintStream out ) {$/;"	m	class:IncrementalFreq
printAll	util/IncrementalFreq.java	/^public void printAll( PrintStream out ) {$/;"	m	class:IncrementalFreq
printLine	config/NullPrintStream.java	/^private void printLine()$/;"	m	class:NullPrintStream	file:
printLine	rangesim/TaggedOutputStream.java	/^private void printLine()$/;"	m	class:TaggedOutputStream	file:
printSearchTable	kademlia/Discv5TicketProtocol.java	/^	boolean printSearchTable = false;$/;"	f	class:Discv5TicketProtocol
processEvent	edsim/EDProtocol.java	/^	public void processEvent( Node node, int pid, Object event );$/;"	m	interface:EDProtocol
processEvent	kademlia/Discv5EvilTicketProtocol.java	/^    public void processEvent(Node myNode, int myPid, Object event) {$/;"	m	class:Discv5EvilTicketProtocol
processEvent	kademlia/Discv5TicketProtocol.java	/^	public void processEvent(Node myNode, int myPid, Object event) {$/;"	m	class:Discv5TicketProtocol
processEvent	kademlia/KademliaProtocol.java	/^	public void processEvent(Node myNode, int myPid, Object event) {$/;"	m	class:KademliaProtocol
protSchedules	cdsim/FullNextCycle.java	/^protected Scheduler[] protSchedules = null;$/;"	f	class:FullNextCycle
protocol	core/GeneralNode.java	/^protected Protocol[] protocol = null;$/;"	f	class:GeneralNode
protocol	kademlia/SearchTable.java	/^	private Discv5TicketProtocol protocol;$/;"	f	class:SearchTable	file:
protocol	kademlia/TicketTable.java	/^    private Discv5TicketProtocol protocol;$/;"	f	class:TicketTable	file:
protocol	vector/Getter.java	/^private final String protocol;$/;"	f	class:Getter	file:
protocol	vector/Setter.java	/^private final String protocol;$/;"	f	class:Setter	file:
protocolID	core/OverlayGraph.java	/^public final int protocolID;$/;"	f	class:OverlayGraph
protocolID	kademlia/CustomDistribution.java	/^    private int protocolID;$/;"	f	class:CustomDistribution	file:
protocolID	kademlia/DnsListDistribution.java	/^	private int protocolID;$/;"	f	class:DnsListDistribution	file:
protocolSize	core/GeneralNode.java	/^public int protocolSize() { return protocol.length; }$/;"	m	class:GeneralNode
protocolSize	core/Node.java	/^public int protocolSize();$/;"	m	interface:Node
protocols	config/ConfigContainer.java	/^private Map<String, Integer> protocols;$/;"	f	class:ConfigContainer	file:
prototype	core/Network.java	/^public static Node prototype = null;$/;"	f	class:Network
put	edsim/Heap.java	/^private void put(int index, long time, Object event, Node node, byte pid) {$/;"	m	class:Heap	file:
put0	kademlia/Util.java	/^	public static final String put0(BigInteger b) {$/;"	m	class:Util
quadsum	util/MomentStats.java	/^    private double cubicsum, quadsum; \/\/ incremental sums$/;"	f	class:MomentStats	file:
r	core/CommonState.java	/^public static ExtendedRandom r = null;$/;"	f	class:CommonState
r	reports/MemoryObserver.java	/^private final static Runtime r = Runtime.getRuntime(); $/;"	f	class:MemoryObserver	file:
r	util/RandPermutation.java	/^private final Random r;$/;"	f	class:RandPermutation	file:
r	util/WeightedRandPerm.java	/^private final Random r;$/;"	f	class:WeightedRandPerm	file:
rTable	kademlia/KBucket.java	/^	protected RoutingTable rTable;$/;"	f	class:KBucket
radiusLookup	kademlia/LookupInfo.java	/^	private boolean radiusLookup;$/;"	f	class:LookupInfo	file:
random	kademlia/BackoffService.java	/^	 private final Random random = new Random();$/;"	f	class:BackoffService	file:
randomIpAddress	kademlia/CustomDistribution.java	/^    private String randomIpAddress(Random r) {$/;"	m	class:CustomDistribution	file:
randomLookups	kademlia/Discv5MultiTopicTrafficGenerator.java	/^	private final int randomLookups;$/;"	f	class:Discv5MultiTopicTrafficGenerator	file:
randomLookups	kademlia/Discv5ZipfTrafficGenerator.java	/^	private int randomLookups = 0;$/;"	f	class:Discv5ZipfTrafficGenerator	file:
randomLookups	kademlia/TurbulenceMultiTopic.java	/^	private final int randomLookups;$/;"	f	class:TurbulenceMultiTopic	file:
randstart	edsim/CDScheduler.java	/^private final boolean randstart;$/;"	f	class:CDScheduler	file:
range	transport/UniformRandomTransport.java	/^private final long range;$/;"	f	class:UniformRandomTransport	file:
ranges	rangesim/TaggedOutputStream.java	/^private final String ranges;$/;"	f	class:TaggedOutputStream	file:
ratio	transport/KingParser.java	/^private double ratio;$/;"	f	class:KingParser	file:
ratio	transport/TriangularMatrixParser.java	/^private double ratio;$/;"	f	class:TriangularMatrixParser	file:
readAll	kademlia/DnsListDistribution.java	/^	private static String readAll(Reader rd) throws IOException {$/;"	m	class:DnsListDistribution	file:
readJsonFromUrl	kademlia/DnsListDistribution.java	/^    public static JSONObject readJsonFromUrl(String url) throws IOException, JSONException {$/;"	m	class:DnsListDistribution
readNewscastGraph	graph/GraphIO.java	/^public static Graph readNewscastGraph( String file, int direction )$/;"	m	class:GraphIO
refresh	kademlia/SearchTable.java	/^	boolean refresh;$/;"	f	class:SearchTable
refresh	kademlia/TicketTable.java	/^    boolean refresh;$/;"	f	class:TicketTable
refreshBucket	kademlia/Discv5TicketProtocol.java	/^	public void refreshBucket(TicketTable rou, BigInteger node, int distance) {$/;"	m	class:Discv5TicketProtocol
refreshBuckets	kademlia/Discv5TicketProtocol.java	/^	public void refreshBuckets() {$/;"	m	class:Discv5TicketProtocol
refreshBuckets	kademlia/KademliaProtocol.java	/^	public void refreshBuckets() {$/;"	m	class:KademliaProtocol
refreshBuckets	kademlia/RoutingTable.java	/^	public void refreshBuckets() {$/;"	m	class:RoutingTable
refreshBuckets	kademlia/SearchTable.java	/^	public void refreshBuckets() {$/;"	m	class:SearchTable
refreshBuckets	kademlia/TicketTable.java	/^	public void refreshBuckets() {$/;"	m	class:TicketTable
regByRegistrant	kademlia/KademliaObserver.java	/^    private static HashMap<String, HashMap<BigInteger,Integer>> regByRegistrant;$/;"	f	class:KademliaObserver	file:
regByRegistrantEvil	kademlia/KademliaObserver.java	/^    private static HashMap<String, HashMap<BigInteger,Integer>> regByRegistrantEvil;$/;"	f	class:KademliaObserver	file:
regByRegistrar	kademlia/KademliaObserver.java	/^    private static HashMap<String, HashMap<BigInteger,Integer>> regByRegistrar;$/;"	f	class:KademliaObserver	file:
regByRegistrarEvil	kademlia/KademliaObserver.java	/^    private static HashMap<String, HashMap<BigInteger,Integer>> regByRegistrarEvil;$/;"	f	class:KademliaObserver	file:
regByTopic	kademlia/KademliaObserver.java	/^    private static HashMap<Topic,Integer> regByTopic;$/;"	f	class:KademliaObserver	file:
reg_time	kademlia/Ticket.java	/^    private long reg_time;$/;"	f	class:Ticket	file:
register	kademlia/Discv5StatefulTopicTable.java	/^    protected void register(TopicRegistration reg) {$/;"	m	class:Discv5StatefulTopicTable
register	kademlia/Discv5TopicTable.java	/^    protected void register(TopicRegistration reg) {$/;"	m	class:Discv5TopicTable
register	kademlia/TopicTable.java	/^    public boolean register(TopicRegistration r, Topic t);$/;"	m	interface:TopicTable
registerOverhead	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> registerOverhead = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
register_ok	kademlia/KademliaObserver.java	/^    public static IncrementalStats register_ok = new IncrementalStats();$/;"	f	class:KademliaObserver
register_ticket	kademlia/Discv5TopicTable.java	/^    public boolean register_ticket(Ticket ticket, Message m, long curr_time) {$/;"	m	class:Discv5TopicTable
register_total	kademlia/KademliaObserver.java	/^    public static IncrementalStats register_total = new IncrementalStats();$/;"	f	class:KademliaObserver
registered	kademlia/RegistrationLog.java	/^	private Map<BigInteger,Long> registered;$/;"	f	class:RegistrationLog	file:
registeredNodes	kademlia/TicketTable.java	/^    private List<BigInteger> registeredNodes;$/;"	f	class:TicketTable	file:
registeredPerDist	kademlia/TicketTable.java	/^    HashMap<Integer, Integer> registeredPerDist;$/;"	f	class:TicketTable
registeredTopics	kademlia/KademliaObserver.java	/^    public static HashMap<String, HashMap<BigInteger,RegistrationLog>> registeredTopics = new HashMap<String, HashMap<BigInteger,RegistrationLog>>();$/;"	f	class:KademliaObserver
registeredWaiting	kademlia/RegistrationLog.java	/^	private Map<BigInteger,Long> registeredWaiting;$/;"	f	class:RegistrationLog	file:
registrant	kademlia/RegistrationLog.java	/^	private BigInteger registrant;$/;"	f	class:RegistrationLog	file:
registration	kademlia/operations/RegisterOperation.java	/^	private TopicRegistration registration; \/\/FIXME: is this variable used?$/;"	f	class:RegisterOperation	file:
registrationFailed	kademlia/BackoffService.java	/^	 public void registrationFailed() {$/;"	m	class:BackoffService
registrationFailed	kademlia/Discv5TicketProtocol.java	/^	protected HashMap<Ticket, BackoffService> registrationFailed;$/;"	f	class:Discv5TicketProtocol
registrationInitTime	kademlia/RegistrationLog.java	/^	private long registrationInitTime;$/;"	f	class:RegistrationLog	file:
registrationTimeout	kademlia/Discv5TicketProtocol.java	/^	private long registrationTimeout;$/;"	f	class:Discv5TicketProtocol	file:
registrationTimes	kademlia/Discv5RRTopicTable.java	/^    private SortedMap<Topic, Long> registrationTimes; $/;"	f	class:Discv5RRTopicTable	file:
registrations	kademlia/Message.java	/^		public final TopicRegistration [] registrations;$/;"	f	class:Message.TopicLookupBody
rem	kademlia/Turbulence.java	/^	public boolean rem() {$/;"	m	class:Turbulence
remove	core/Network.java	/^public static Node remove() {$/;"	m	class:Network
remove	core/Network.java	/^public static Node remove(int i) {$/;"	m	class:Network
remove	dynamics/DynamicNetwork.java	/^protected void remove(int n)$/;"	m	class:DynamicNetwork
remove	dynamics/OscillatingNetwork.java	/^protected void remove(int n)$/;"	m	class:OscillatingNetwork
remove	util/IncrementalFreq.java	/^public void remove(IncrementalFreq other, boolean strict) {$/;"	m	class:IncrementalFreq
removeFirst	edsim/Heap.java	/^public Event removeFirst() {$/;"	m	class:Heap
removeFirst	edsim/PriorityQ.java	/^public Event removeFirst();$/;"	m	interface:PriorityQ
removeIncomingNode	kademlia/NodeConnections.java	/^	public boolean removeIncomingNode(KademliaNode node) {$/;"	m	class:NodeConnections
removeNeighbour	kademlia/KBucket.java	/^	public void removeNeighbour(BigInteger node) {$/;"	m	class:KBucket
removeNeighbour	kademlia/RoutingTable.java	/^	public void removeNeighbour(BigInteger node) {$/;"	m	class:RoutingTable
removeNeighbour	kademlia/SearchTable.java	/^	public void removeNeighbour(BigInteger node) {$/;"	m	class:SearchTable
removeNeighbour	kademlia/TicketTable.java	/^	public void removeNeighbour(BigInteger node) {$/;"	m	class:TicketTable
removeNode	graph/SubGraphEdges.java	/^public boolean removeNode(int i) {$/;"	m	class:SubGraphEdges
removeOutgoingNode	kademlia/NodeConnections.java	/^	public boolean removeOutgoingNode(KademliaNode node) {$/;"	m	class:NodeConnections
removeRegisteredList	kademlia/TicketTable.java	/^	public void removeRegisteredList(BigInteger node) {$/;"	m	class:TicketTable
removeReplacement	kademlia/KBucket.java	/^	public void removeReplacement(BigInteger node) {$/;"	m	class:KBucket
removedPerDist	kademlia/SearchTable.java	/^	HashMap<Integer, Integer> removedPerDist;$/;"	f	class:SearchTable
replace	kademlia/KBucket.java	/^	public void replace() {$/;"	m	class:KBucket
replacements	kademlia/KBucket.java	/^	protected List<BigInteger> replacements;$/;"	f	class:KBucket
reportActiveRegistration	kademlia/KademliaObserver.java	/^	public static void reportActiveRegistration(Topic t, boolean is_evil) {$/;"	m	class:KademliaObserver
reportBetterWaitingTime	kademlia/KademliaObserver.java	/^	public static void reportBetterWaitingTime(String topic, long previousTime, long newTime, long spentTime) {$/;"	m	class:KademliaObserver
reportCumulativeTime	kademlia/KademliaObserver.java	/^    public static void reportCumulativeTime(Topic topic, long time, boolean is_evil) {$/;"	m	class:KademliaObserver
reportExpiredRegistration	kademlia/KademliaObserver.java	/^    public static void reportExpiredRegistration(Topic t, boolean is_evil) {$/;"	m	class:KademliaObserver
reportMsg	kademlia/KademliaObserver.java	/^	public static void reportMsg(Message m, boolean sent) {$/;"	m	class:KademliaObserver
reportMsg	kademlia/KademliaObserver.java	/^    private static int reportMsg;$/;"	f	class:KademliaObserver	file:
reportOperation	kademlia/KademliaObserver.java	/^    public static void reportOperation(Operation op) {$/;"	m	class:KademliaObserver
reportOverThresholdWaitingTime	kademlia/KademliaObserver.java	/^	public static void reportOverThresholdWaitingTime(String topic, BigInteger registrant,BigInteger registrar, long  waitingTime) {$/;"	m	class:KademliaObserver
reportReg	kademlia/KademliaObserver.java	/^    private static int reportReg;$/;"	f	class:KademliaObserver	file:
reportResponse	kademlia/TicketTable.java	/^	public void reportResponse(Ticket ticket) {$/;"	m	class:TicketTable
reportWaitingTime	kademlia/KademliaObserver.java	/^    public static void reportWaitingTime(Topic topic, long time, boolean is_evil) {$/;"	m	class:KademliaObserver
req_time	kademlia/Ticket.java	/^    private long req_time;$/;"	f	class:Ticket	file:
requested	kademlia/KademliaNode.java	/^    boolean requested=false;$/;"	f	class:KademliaNode
requested	kademlia/NodeConnections.java	/^    boolean requested;$/;"	f	class:NodeConnections
reset	core/Network.java	/^public static void reset() {$/;"	m	class:Network
reset	kademlia/BackoffService.java	/^	 public void reset() {$/;"	m	class:BackoffService
reset	transport/E2ENetwork.java	/^public static void reset(int size, boolean symm)$/;"	m	class:E2ENetwork
reset	util/IncrementalFreq.java	/^public void reset() {$/;"	m	class:IncrementalFreq
reset	util/IncrementalStats.java	/^public void reset() {$/;"	m	class:IncrementalStats
reset	util/IndexIterator.java	/^	public void reset(int k);$/;"	m	interface:IndexIterator
reset	util/LinearIterator.java	/^public void reset(int k) {$/;"	m	class:LinearIterator
reset	util/MedianStats.java	/^public void reset()$/;"	m	class:MedianStats
reset	util/MomentStats.java	/^    public void reset() {$/;"	m	class:MomentStats
reset	util/RandPermutation.java	/^public void reset(int k) {$/;"	m	class:RandPermutation
reset	util/WeightedRandPerm.java	/^public void reset(int k) {$/;"	m	class:WeightedRandPerm
retries	kademlia/BackoffService.java	/^	 private int retries;$/;"	f	class:BackoffService	file:
returned	kademlia/operations/Operation.java	/^	protected ArrayList<BigInteger> returned;$/;"	f	class:Operation
reverse	util/LinearIterator.java	/^private final boolean reverse;$/;"	f	class:LinearIterator	file:
rnd	kademlia/UniformRandomGenerator.java	/^	private final Random rnd;$/;"	f	class:UniformRandomGenerator	file:
root	graph/GraphAlgorithms.java	/^public int[] root = null;$/;"	f	class:GraphAlgorithms
roundRobin	kademlia/Discv5RRTopicTable.java	/^    boolean roundRobin;$/;"	f	class:Discv5RRTopicTable
router	transport/E2ETransport.java	/^private int router = -1;$/;"	f	class:E2ETransport	file:
routingTable	kademlia/KademliaProtocol.java	/^	protected RoutingTable routingTable;$/;"	f	class:KademliaProtocol
rp	reports/BallExpansion.java	/^private final RandPermutation rp = new RandPermutation(CommonState.r);$/;"	f	class:BallExpansion	file:
rp	reports/DegreeStats.java	/^private final RandPermutation rp = new RandPermutation(CommonState.r);$/;"	f	class:DegreeStats	file:
rperm	cdsim/FullNextCycle.java	/^protected RandPermutation rperm = new RandPermutation( CDState.r );$/;"	f	class:FullNextCycle
rtt_delay	kademlia/Ticket.java	/^    private long rtt_delay;$/;"	f	class:Ticket	file:
run	rangesim/ProcessManager.java	/^public void run()$/;"	m	class:ProcessManager
run	rangesim/RangeSimulator.java	/^public void run()$/;"	m	class:RangeSimulator
runInitializers	cdsim/CDSimulator.java	/^private static void runInitializers()$/;"	m	class:CDSimulator	file:
runInitializers	edsim/EDSimulator.java	/^private static void runInitializers() {$/;"	m	class:EDSimulator	file:
sTable	kademlia/operations/LookupTicketOperation.java	/^	SearchTable sTable;$/;"	f	class:LookupTicketOperation
sch	edsim/CDScheduler.java	/^public static final Scheduler[] sch;$/;"	f	class:CDScheduler
scheduleControls	edsim/EDSimulator.java	/^private static void scheduleControls()$/;"	m	class:EDSimulator	file:
scheduleRoundRobin	kademlia/Discv5RRTopicTable.java	/^    private void scheduleRoundRobin(long curr_time) {$/;"	m	class:Discv5RRTopicTable	file:
scheduleSendMessage	kademlia/Discv5TicketProtocol.java	/^	public void scheduleSendMessage(Message m, BigInteger destId, int myPid, long delay) {$/;"	m	class:Discv5TicketProtocol
scheduler	edsim/ControlEvent.java	/^private Scheduler scheduler;$/;"	f	class:ControlEvent	file:
searchTables	kademlia/Discv5TicketProtocol.java	/^	protected HashMap<BigInteger, SearchTable> searchTables;$/;"	f	class:Discv5TicketProtocol
second	kademlia/TrafficGenerator.java	/^	private boolean second = false;$/;"	f	class:TrafficGenerator	file:
seenNotFull	kademlia/TicketTable.java	/^    private int seenNotFull = 0; $/;"	f	class:TicketTable	file:
seenOccupancy	kademlia/TicketTable.java	/^    private List<Integer> seenOccupancy;$/;"	f	class:TicketTable	file:
send	transport/E2ETransport.java	/^public void send(Node src, Node dest, Object msg, int pid)$/;"	m	class:E2ETransport
send	transport/Transport.java	/^public void send(Node src, Node dest, Object msg, int pid);$/;"	m	interface:Transport
send	transport/UniformRandomTransport.java	/^public void send(Node src, Node dest, Object msg, int pid)$/;"	m	class:UniformRandomTransport
send	transport/UnreliableTransport.java	/^public void send(Node src, Node dest, Object msg, int pid)$/;"	m	class:UnreliableTransport
sendLookup	kademlia/Discv5TicketProtocol.java	/^	public void sendLookup(BigInteger node, int myPid) {$/;"	m	class:Discv5TicketProtocol
sendMessage	kademlia/Discv5TicketProtocol.java	/^	public void sendMessage(Message m, BigInteger destId, int myPid) {$/;"	m	class:Discv5TicketProtocol
sendMessage	kademlia/KademliaProtocol.java	/^	public void sendMessage(Message m, BigInteger destId, int myPid) {$/;"	m	class:KademliaProtocol
sendTicketRequest	kademlia/Discv5TicketProtocol.java	/^	public void sendTicketRequest(BigInteger dest, Topic t, int myPid) {$/;"	m	class:Discv5TicketProtocol
sendToFront	kademlia/RoutingTable.java	/^	public void sendToFront(BigInteger node)$/;"	m	class:RoutingTable
sendTopicLookup	kademlia/Discv5TicketProtocol.java	/^	public void sendTopicLookup(Message m, Topic t, int myPid) {$/;"	m	class:Discv5TicketProtocol
sentMsg	kademlia/KademliaProtocol.java	/^	protected TreeMap<Long, Long> sentMsg;$/;"	f	class:KademliaProtocol
set	vector/Setter.java	/^public void set(Node n, double val) {$/;"	m	class:Setter
set	vector/Setter.java	/^public void set(Node n, long val) {$/;"	m	class:Setter
set	vector/Setter.java	/^public void set(int i, double val) { set(Network.get(i),val); }$/;"	m	class:Setter
set	vector/Setter.java	/^public void set(int i, long val) { set(Network.get(i),val); }$/;"	m	class:Setter
setAdLifeTime	kademlia/Discv5TopicTable.java	/^    public void setAdLifeTime(int duration) {$/;"	m	class:Discv5TopicTable
setAdsPerQueue	kademlia/Discv5TopicTable.java	/^    public void setAdsPerQueue(int qSize) {$/;"	m	class:Discv5TopicTable
setCapacity	core/Network.java	/^public static void setCapacity(int newSize) {$/;"	m	class:Network
setCapacity	kademlia/Discv5TopicTable.java	/^    public void setCapacity(int capacity) {$/;"	m	class:Discv5TopicTable
setConfig	config/Configuration.java	/^public static void setConfig(Properties p)$/;"	m	class:Configuration
setConfig	config/Configuration.java	/^public static void setConfig(Properties p, boolean check)$/;"	m	class:Configuration
setCumWaitTime	kademlia/Ticket.java	/^    public void setCumWaitTime(long cum_wait) {$/;"	m	class:Ticket
setCycle	cdsim/CDState.java	/^public static void setCycle(int t)$/;"	m	class:CDState
setCycleT	cdsim/CDState.java	/^public static void setCycleT(int t)$/;"	m	class:CDState
setDecisionTime	kademlia/Discv5TopicTable.java	/^    public boolean setDecisionTime(Topic topic, long decisionTime) {$/;"	m	class:Discv5TopicTable
setEdge	core/OverlayGraph.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:OverlayGraph
setEdge	graph/BitMatrixGraph.java	/^public boolean setEdge(int i, int j) {$/;"	m	class:BitMatrixGraph
setEdge	graph/ConstUndirGraph.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:ConstUndirGraph
setEdge	graph/Graph.java	/^	public boolean setEdge(int i, int j);$/;"	m	interface:Graph
setEdge	graph/NeighbourListGraph.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:NeighbourListGraph
setEdge	graph/PrefixSubGraph.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:PrefixSubGraph
setEdge	graph/SubGraphEdges.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:SubGraphEdges
setEdge	graph/UndirectedGraph.java	/^public boolean setEdge( int i, int j ) {$/;"	m	class:UndirectedGraph
setEndTime	core/CommonState.java	/^public static void setEndTime(long t)$/;"	m	class:CommonState
setFValue	vector/TestVectors.java	/^public void setFValue(float value) { fvalue = value; }$/;"	m	class:TestVectors
setFailState	core/Fallible.java	/^	public void setFailState(int failState);$/;"	m	interface:Fallible
setFailState	core/GeneralNode.java	/^public void setFailState(int failState) {$/;"	m	class:GeneralNode
setHostID	kademlia/Discv5TopicTable.java	/^    public void setHostID(BigInteger id){$/;"	m	class:Discv5TopicTable
setHostID	kademlia/Topic.java	/^    public void setHostID(BigInteger hostID){$/;"	m	class:Topic
setIValue	vector/TestVectors.java	/^public void setIValue(int value) { ivalue = value; }$/;"	m	class:TestVectors
setIndex	core/GeneralNode.java	/^public void setIndex(int index) { this.index = index; }$/;"	m	class:GeneralNode
setIndex	core/Node.java	/^public void setIndex(int index);$/;"	m	interface:Node
setKademliaProtocol	core/GeneralNode.java	/^public void setKademliaProtocol(KademliaProtocol proto) {this.kadProtocol = proto; }$/;"	m	class:GeneralNode
setKademliaProtocol	core/Node.java	/^public void setKademliaProtocol(KademliaProtocol proto);$/;"	m	interface:Node
setLValue	vector/TestVectors.java	/^public void setLValue(long value) { lvalue = value; }$/;"	m	class:TestVectors
setLatency	transport/E2ENetwork.java	/^public static void setLatency(int sender, int receiver, int latency) $/;"	m	class:E2ENetwork
setLookupResult	kademlia/KademliaNode.java	/^    public void setLookupResult(HashMap<KademliaNode,BigInteger> result, String topic) {$/;"	m	class:KademliaNode
setMsg	kademlia/Ticket.java	/^    public void setMsg(Message m) {$/;"	m	class:Ticket
setNode	core/CommonState.java	/^public static void setNode(Node n)$/;"	m	class:CommonState
setNode	kademlia/Discv5TicketProtocol.java	/^	public void setNode(KademliaNode node) {$/;"	m	class:Discv5TicketProtocol
setNode	kademlia/KademliaProtocol.java	/^	public void setNode(KademliaNode node) {$/;"	m	class:KademliaProtocol
setNodeId	kademlia/RoutingTable.java	/^	public void setNodeId(BigInteger id){$/;"	m	class:RoutingTable
setNodeListResult	kademlia/Client.java	/^	public void setNodeListResult(List<BigInteger> result) {$/;"	m	class:Client
setNodeListResult	kademlia/EthClient.java	/^	public void setNodeListResult(List<BigInteger> result) {$/;"	m	class:EthClient
setOccupancy	kademlia/Ticket.java	/^    public void setOccupancy(int occupancy) {$/;"	m	class:Ticket
setPermutation	util/RandPermutation.java	/^public void setPermutation(int k) {$/;"	m	class:RandPermutation
setPhase	core/CommonState.java	/^public static void setPhase(int p)$/;"	m	class:CommonState
setPid	core/CommonState.java	/^public static void setPid(int p)$/;"	m	class:CommonState
setProtocol	core/GeneralNode.java	/^public void setProtocol(int i, Protocol p) { protocol[i] = p; }$/;"	m	class:GeneralNode
setProtocol	core/ModifiableNode.java	/^public void setProtocol(int pid, Protocol prot)$/;"	m	class:ModifiableNode
setProtocol	core/Node.java	/^public void setProtocol(int i, Protocol p);$/;"	m	interface:Node
setProtocolID	kademlia/KademliaProtocol.java	/^    public void setProtocolID(int protocolID) {$/;"	m	class:KademliaProtocol
setRTT	kademlia/Ticket.java	/^    public void setRTT(long delay) {$/;"	m	class:Ticket
setRegTime	kademlia/Ticket.java	/^    public void setRegTime(long reg_time) {$/;"	m	class:Ticket
setRegistrationComplete	kademlia/Ticket.java	/^    public void setRegistrationComplete(boolean complete) {$/;"	m	class:Ticket
setReqTime	kademlia/Ticket.java	/^    public void setReqTime(long req_time) {$/;"	m	class:Ticket
setRequested	kademlia/NodeConnections.java	/^	public void setRequested(boolean req) {$/;"	m	class:NodeConnections
setRouter	transport/E2ETransport.java	/^public void setRouter(int router)$/;"	m	class:E2ETransport
setRouter	transport/RouterInfo.java	/^public void setRouter(int router);$/;"	m	interface:RouterInfo
setSeed	util/ExtendedRandom.java	/^public void setSeed( long seed ) {$/;"	m	class:ExtendedRandom
setSize	graph/PrefixSubGraph.java	/^public int setSize(int i) {$/;"	m	class:PrefixSubGraph
setTargetTopic	kademlia/KademliaProtocol.java	/^    protected void setTargetTopic(Topic t) {$/;"	m	class:KademliaProtocol
setTime	core/CommonState.java	/^public static void setTime(long t)$/;"	m	class:CommonState
setTimestamp	kademlia/TopicRegistration.java	/^    public void setTimestamp(long t){$/;"	m	class:TopicRegistration
setTimestamp	kademlia/operations/RegisterOperation.java	/^    public void setTimestamp(long timestamp) {$/;"	m	class:RegisterOperation
setTimestamp	kademlia/operations/TicketOperation.java	/^    public void setTimestamp(long timestamp) {$/;"	m	class:TicketOperation
setTopic	kademlia/KademliaNode.java	/^    public void setTopic(String t, Node n) {$/;"	m	class:KademliaNode
setTopic	kademlia/Ticket.java	/^    public void setTopic() {$/;"	m	class:Ticket
setTopicID	kademlia/Topic.java	/^    private void setTopicID() {$/;"	m	class:Topic	file:
setTopicList	kademlia/KademliaNode.java	/^    public void setTopicList(List<String> t, Node n) {$/;"	m	class:KademliaNode
setValue	vector/SingleValue.java	/^public void setValue(double value);$/;"	m	interface:SingleValue
setValue	vector/SingleValueHolder.java	/^public void setValue(double value)$/;"	m	class:SingleValueHolder
setWaitTime	kademlia/Ticket.java	/^    public void setWaitTime(long wait_time) {$/;"	m	class:Ticket
sets	graph/BitMatrixGraph.java	/^private final List<BitSet> sets;$/;"	f	class:BitMatrixGraph	file:
setter	vector/VectControl.java	/^protected final Setter setter;$/;"	f	class:VectControl
shallContinueRegistration	kademlia/TicketTable.java	/^	public boolean shallContinueRegistration() {$/;"	m	class:TicketTable
shouldRetry	kademlia/BackoffService.java	/^	 public boolean shouldRetry() {$/;"	m	class:BackoffService
shuffle	cdsim/FullNextCycle.java	/^protected final boolean shuffle;$/;"	f	class:FullNextCycle
shuffle	core/Network.java	/^public static void shuffle() {$/;"	m	class:Network
simID	Simulator.java	/^private static int simID = UNKNOWN;$/;"	f	class:Simulator	file:
simName	Simulator.java	/^protected static final String[] simName = {$/;"	f	class:Simulator
simName	config/CheckConfig.java	/^protected static final String[] simName = {$/;"	f	class:CheckConfig
simpCounter	kademlia/KademliaObserver.java	/^    private static int simpCounter;$/;"	f	class:KademliaObserver	file:
size	core/Network.java	/^public static int size() { return len; }$/;"	m	class:Network
size	core/OverlayGraph.java	/^public int size() { return Network.size(); }$/;"	m	class:OverlayGraph
size	edsim/Heap.java	/^private int size;$/;"	f	class:Heap	file:
size	edsim/Heap.java	/^public int size()$/;"	m	class:Heap
size	edsim/PriorityQ.java	/^public int size();$/;"	m	interface:PriorityQ
size	graph/BitMatrixGraph.java	/^public int size() { return sets.size(); }$/;"	m	class:BitMatrixGraph
size	graph/ConstUndirGraph.java	/^public int size() { return g.size(); }$/;"	m	class:ConstUndirGraph
size	graph/Graph.java	/^	int size();$/;"	m	interface:Graph
size	graph/NeighbourListGraph.java	/^public int size() { return neighbors.size(); }$/;"	m	class:NeighbourListGraph
size	graph/PrefixSubGraph.java	/^public int size() { return prefSize; }$/;"	m	class:PrefixSubGraph
size	graph/SubGraphEdges.java	/^public int size() { return g.size(); }$/;"	m	class:SubGraphEdges
size	graph/UndirectedGraph.java	/^public int size() { return g.size(); }$/;"	m	class:UndirectedGraph
size	rangesim/TaggedOutputStream.java	/^private int size;$/;"	f	class:TaggedOutputStream	file:
size	transport/E2ENetwork.java	/^private static int size;$/;"	f	class:E2ENetwork	file:
sizestats	reports/ConnectivityObserver.java	/^private final boolean sizestats;$/;"	f	class:ConnectivityObserver	file:
slotTime	kademlia/BackoffService.java	/^	 private int slotTime;$/;"	f	class:BackoffService	file:
sort	core/Network.java	/^public static void sort(Comparator<? super Node> c) {$/;"	m	class:Network
sortNet	kademlia/Turbulence.java	/^	public void sortNet() {$/;"	m	class:Turbulence
source	vector/VectCopy.java	/^private final Getter source;$/;"	f	class:VectCopy	file:
sources	kademlia/NodeConnections.java	/^    private HashMap<BigInteger,Integer> sources;$/;"	f	class:NodeConnections	file:
sqrsum	util/IncrementalStats.java	/^private double sqrsum;$/;"	f	class:IncrementalStats	file:
src	kademlia/Message.java	/^	public KademliaNode src;$/;"	f	class:Message
src	kademlia/Ticket.java	/^    private KademliaNode src;$/;"	f	class:Ticket	file:
srcNode	kademlia/operations/Operation.java	/^	public BigInteger srcNode;$/;"	f	class:Operation
stack	graph/GraphAlgorithms.java	/^private Stack<Integer> stack = new Stack<Integer>();$/;"	f	class:GraphAlgorithms	file:
startConnection	kademlia/NodeConnections.java	/^    private boolean startConnection(KademliaNode node) {$/;"	m	class:NodeConnections	file:
startOfRoundTime	kademlia/Discv5RRTopicTable.java	/^    Long startOfRoundTime; \/\/ time of current round start$/;"	f	class:Discv5RRTopicTable
stats	reports/BallExpansion.java	/^private final boolean stats;$/;"	f	class:BallExpansion	file:
stdout	rangesim/TaggedOutputStream.java	/^private PrintStream stdout;$/;"	f	class:TaggedOutputStream	file:
step	cdsim/DaemonProtocol.java	/^private static int step;$/;"	f	class:DaemonProtocol	file:
step	core/Scheduler.java	/^public final long step;$/;"	f	class:Scheduler
step	vector/LinearDistribution.java	/^private final double step;$/;"	f	class:LinearDistribution	file:
sub	config/Operators.java	/^	public Number sub(Number num1, Number num2) {$/;"	m	class:Operators
subGraphSize	graph/SubGraphEdges.java	/^public int subGraphSize() { return nodes.cardinality(); }$/;"	m	class:SubGraphEdges
substitute	dynamics/DynamicNetwork.java	/^protected final boolean substitute;$/;"	f	class:DynamicNetwork
subtract	kademlia/CustomDistribution.java	/^    private int[] subtract; $/;"	f	class:CustomDistribution	file:
sum	util/IncrementalStats.java	/^private double sum;$/;"	f	class:IncrementalStats	file:
sum	util/WeightedRandPerm.java	/^private double sum = 0.0;$/;"	f	class:WeightedRandPerm	file:
swap	core/Network.java	/^public static void swap(int i, int j) {$/;"	m	class:Network
swap	edsim/Heap.java	/^private void swap(int i1, int i2) {$/;"	m	class:Heap	file:
symm	transport/E2ENetwork.java	/^private static boolean symm;	$/;"	f	class:E2ENetwork	file:
t	kademlia/SearchTable.java	/^	private Topic t;$/;"	f	class:SearchTable	file:
t	kademlia/TicketTable.java	/^    private Topic t;$/;"	f	class:TicketTable	file:
tableCapacity	kademlia/Discv5TopicTable.java	/^    protected int tableCapacity = KademliaCommonConfig.TOPIC_TABLE_CAP;$/;"	f	class:Discv5TopicTable
targetNumOfRegistrations	kademlia/Discv5EvilTicketProtocol.java	/^    private int targetNumOfRegistrations;$/;"	f	class:Discv5EvilTicketProtocol	file:
targetTopic	kademlia/KademliaProtocol.java	/^    protected Topic targetTopic=null;$/;"	f	class:KademliaProtocol
tarjan	graph/GraphAlgorithms.java	/^public Map tarjan( Graph g ) {$/;"	m	class:GraphAlgorithms
tarjanVisit	graph/GraphAlgorithms.java	/^private void tarjanVisit(int i) {$/;"	m	class:GraphAlgorithms	file:
test	core/Network.java	/^public static void test() {$/;"	m	class:Network
threads	rangesim/ProcessManager.java	/^private List<ProcessHandler> threads;$/;"	f	class:ProcessManager	file:
ticket	kademlia/Message.java	/^		public final Ticket ticket;$/;"	f	class:Message.TicketReplyBody
ticketCompetingList	kademlia/Discv5TopicTable.java	/^    protected HashMap<String,Integer> ticketCompetingList;$/;"	f	class:Discv5TopicTable
ticketTables	kademlia/Discv5TicketProtocol.java	/^	protected HashMap<BigInteger, TicketTable> ticketTables;$/;"	f	class:Discv5TicketProtocol
ticket_request_to_evil_nodes	kademlia/KademliaObserver.java	/^    private static int ticket_request_to_evil_nodes = 0;$/;"	f	class:KademliaObserver	file:
ticket_request_to_good_nodes	kademlia/KademliaObserver.java	/^    private static int ticket_request_to_good_nodes = 0;$/;"	f	class:KademliaObserver	file:
tid	kademlia/KademliaProtocol.java	/^	protected int tid;$/;"	f	class:KademliaProtocol
tid	transport/E2ETransport.java	/^private static int tid;$/;"	f	class:E2ETransport	file:
time	core/CommonState.java	/^private static long time = 0;$/;"	f	class:CommonState	file:
time	edsim/PriorityQ.java	/^	public long time;$/;"	f	class:PriorityQ.Event
time	reports/GraphObserver.java	/^private static long time = -1234;$/;"	f	class:GraphObserver	file:
timeOverThreshold	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> timeOverThreshold = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
timeOverThresholdCount	kademlia/KademliaObserver.java	/^    private static HashMap<String, Integer> timeOverThresholdCount = new HashMap<String, Integer>();$/;"	f	class:KademliaObserver	file:
timeStore	kademlia/KademliaObserver.java	/^    public static IncrementalStats timeStore = new IncrementalStats();$/;"	f	class:KademliaObserver
timeToWait	kademlia/BackoffService.java	/^	 private int timeToWait;$/;"	f	class:BackoffService	file:
times	edsim/Heap.java	/^private long[] times;$/;"	f	class:Heap	file:
timestamp	kademlia/SimpleEvent.java	/^	public long timestamp;$/;"	f	class:SimpleEvent
timestamp	kademlia/TopicRegistration.java	/^    private long timestamp;$/;"	f	class:TopicRegistration	file:
timestamp	kademlia/operations/Operation.java	/^	protected long timestamp = 0;$/;"	f	class:Operation
toArithmeticExpression	util/IncrementalFreq.java	/^public String toArithmeticExpression() {$/;"	m	class:IncrementalFreq
toString	config/Operators.java	/^	public String toString() { return ""; }$/;"	m	class:Operators
toString	core/GeneralNode.java	/^public String toString() $/;"	m	class:GeneralNode
toString	core/IdleProtocol.java	/^public String toString()$/;"	m	class:IdleProtocol
toString	core/OracleIdleProtocol.java	/^public String toString() {$/;"	m	class:OracleIdleProtocol
toString	edsim/Heap.java	/^public String toString()$/;"	m	class:Heap
toString	edsim/PriorityQ.java	/^	public String toString() {$/;"	m	class:PriorityQ.Event
toString	kademlia/KBucket.java	/^	public String toString() {$/;"	m	class:KBucket
toString	kademlia/Message.java	/^	public String toString() {$/;"	m	class:Message
toString	kademlia/RoutingTable.java	/^	public String toString() {$/;"	m	class:RoutingTable
toString	kademlia/Topic.java	/^    public String toString(){$/;"	m	class:Topic
toString	kademlia/TopicRegistration.java	/^    public String toString(){$/;"	m	class:TopicRegistration
toString	util/IncrementalFreq.java	/^public String toString() {$/;"	m	class:IncrementalFreq
toString	util/IncrementalStats.java	/^public String toString() {$/;"	m	class:IncrementalStats
toString	util/MomentStats.java	/^    public String toString() {$/;"	m	class:MomentStats
toString	vector/SingleValueHolder.java	/^public String toString() { return ""+value; }$/;"	m	class:SingleValueHolder
toString	vector/TestVectors.java	/^public String toString() { return value+" "+fvalue+" "+ivalue+" "+lvalue; }$/;"	m	class:TestVectors
topic	kademlia/LookupInfo.java	/^	private Topic topic;$/;"	f	class:LookupInfo	file:
topic	kademlia/NodeConnections.java	/^    private String topic;$/;"	f	class:NodeConnections	file:
topic	kademlia/RetryTimeout.java	/^    public Topic topic;$/;"	f	class:RetryTimeout
topic	kademlia/Ticket.java	/^    private Topic topic; $/;"	f	class:Ticket	file:
topic	kademlia/Timeout.java	/^    public Topic topic;$/;"	f	class:Timeout
topic	kademlia/Topic.java	/^    protected String topic;$/;"	f	class:Topic
topic	kademlia/TopicRegistration.java	/^    private Topic topic;$/;"	f	class:TopicRegistration	file:
topic	kademlia/operations/LookupOperation.java	/^    public final Topic topic;$/;"	f	class:LookupOperation
topic	kademlia/operations/RegisterOperation.java	/^	public Topic topic;$/;"	f	class:RegisterOperation
topic	kademlia/operations/TicketOperation.java	/^	private Topic topic;$/;"	f	class:TicketOperation	file:
topicCount	kademlia/Discv5ZipfTrafficGenerator.java	/^	private int pendingRegistrations,pendingLookups,topicCount;$/;"	f	class:Discv5ZipfTrafficGenerator	file:
topicCounter	kademlia/Discv5TrafficGenerator.java	/^	private int topicCounter = 0;$/;"	f	class:Discv5TrafficGenerator	file:
topicCounter	kademlia/TrafficGenerator.java	/^	private static Integer topicCounter = 0;$/;"	f	class:TrafficGenerator	file:
topicID	kademlia/Topic.java	/^    protected BigInteger topicID;$/;"	f	class:Topic
topicModifierExp	kademlia/Discv5GlobalTopicTable.java	/^    protected static final double topicModifierExp = 15;$/;"	f	class:Discv5GlobalTopicTable
topicNum	kademlia/CustomDistribution.java	/^    private final int topicNum;$/;"	f	class:CustomDistribution	file:
topicNum	kademlia/Discv5ZipfTrafficGenerator.java	/^	private final int topicNum;$/;"	f	class:Discv5ZipfTrafficGenerator	file:
topicNum	kademlia/TurbulenceSingleTopic.java	/^	private final int topicNum;$/;"	f	class:TurbulenceSingleTopic	file:
topicOccupancy	kademlia/Ticket.java	/^    private int topicOccupancy;$/;"	f	class:Ticket	file:
topicQueueOccupancy	kademlia/Discv5TopicTable.java	/^    protected int topicQueueOccupancy(Topic topic) {$/;"	m	class:Discv5TopicTable
topicRegistrationCount	kademlia/KademliaObserver.java	/^    public static int topicRegistrationCount(String topic) {$/;"	m	class:KademliaObserver
topicTable	kademlia/Discv5TicketProtocol.java	/^	public Discv5TopicTable topicTable;$/;"	f	class:Discv5TicketProtocol
topicTable	kademlia/Discv5TopicTable.java	/^    protected HashMap<Topic, ArrayDeque<TopicRegistration>> topicTable;$/;"	f	class:Discv5TopicTable
topicTableUtilisation	kademlia/Discv5TopicTable.java	/^    public double topicTableUtilisation() {$/;"	m	class:Discv5TopicTable
topic_last_modifier	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<Topic, Double> topic_last_modifier;$/;"	f	class:Discv5StatefulTopicTable	file:
topic_timestamp	kademlia/Discv5StatefulTopicTable.java	/^    private HashMap<Topic, Long> topic_timestamp;$/;"	f	class:Discv5StatefulTopicTable	file:
topicsList	kademlia/KademliaObserver.java	/^    private HashMap<String, Integer> topicsList;$/;"	f	class:KademliaObserver	file:
topicsSet	kademlia/KademliaObserver.java	/^    private static HashSet<String> topicsSet;$/;"	f	class:KademliaObserver	file:
toshift	core/CommonState.java	/^private static int toshift = -1;$/;"	f	class:CommonState	file:
trace	reports/DegreeStats.java	/^private final boolean trace;$/;"	f	class:DegreeStats	file:
traced	reports/DegreeStats.java	/^private Node[] traced = null;$/;"	f	class:DegreeStats	file:
transport	kademlia/KademliaProtocol.java	/^	protected UnreliableTransport transport;$/;"	f	class:KademliaProtocol
transport	transport/UnreliableTransport.java	/^private final int transport;$/;"	f	class:UnreliableTransport	file:
transportid	kademlia/StateBuilder.java	/^	private int transportid;$/;"	f	class:StateBuilder	file:
transportid	kademlia/Turbulence.java	/^	private int transportid;$/;"	f	class:Turbulence	file:
transports	config/FastConfig.java	/^protected static final int[] transports;$/;"	f	class:FastConfig
triangle	graph/FastUndirGraph.java	/^private BitSet[] triangle;$/;"	f	class:FastUndirGraph	file:
triesWithinBucket	kademlia/TicketTable.java	/^    private int triesWithinBucket;$/;"	f	class:TicketTable	file:
tryNewConnections	kademlia/KademliaNode.java	/^    private void tryNewConnections(String topic) {$/;"	m	class:KademliaNode	file:
tryNewConnections	kademlia/NodeConnections.java	/^	public void tryNewConnections() {$/;"	m	class:NodeConnections
type	kademlia/SimpleEvent.java	/^	protected int type;$/;"	f	class:SimpleEvent
type	kademlia/operations/Operation.java	/^	public int type;$/;"	f	class:Operation
type	reports/ConnectivityObserver.java	/^private final String type;$/;"	f	class:ConnectivityObserver	file:
type	reports/DegreeStats.java	/^private final String type;$/;"	f	class:DegreeStats	file:
type	vector/Getter.java	/^private Class type;$/;"	f	class:Getter	file:
type	vector/Setter.java	/^private Class type;$/;"	f	class:Setter	file:
undir	dynamics/WireGraph.java	/^public final boolean undir;$/;"	f	class:WireGraph
undir	reports/GraphObserver.java	/^protected final boolean undir;$/;"	f	class:GraphObserver
undirg	reports/GraphObserver.java	/^private static Graph undirg;$/;"	f	class:GraphObserver	file:
until	core/Scheduler.java	/^public final long until;$/;"	f	class:Scheduler
updateGraph	reports/GraphObserver.java	/^protected void updateGraph() {$/;"	m	class:GraphObserver
updateTopicTable	kademlia/Discv5StatefulTopicTable.java	/^    protected void updateTopicTable(long curr_time) {$/;"	m	class:Discv5StatefulTopicTable
updateTopicTable	kademlia/Discv5TopicTable.java	/^    protected void updateTopicTable(long curr_time) {$/;"	m	class:Discv5TopicTable
updateWaitingTime	kademlia/Ticket.java	/^    public void updateWaitingTime(long delay) {$/;"	m	class:Ticket
urg	kademlia/Client.java	/^	UniformRandomGenerator urg;$/;"	f	class:Client
urg	kademlia/CustomDistribution.java	/^    private UniformRandomGenerator urg;$/;"	f	class:CustomDistribution	file:
urg	kademlia/DnsListDistribution.java	/^	private UniformRandomGenerator urg;$/;"	f	class:DnsListDistribution	file:
urg	kademlia/EthClient.java	/^	UniformRandomGenerator urg;$/;"	f	class:EthClient
usage	rangesim/RangeSimulator.java	/^private static void usage()$/;"	m	class:RangeSimulator	file:
used	kademlia/NodeConnections.java	/^    private HashMap<KademliaNode,BigInteger> used;$/;"	f	class:NodeConnections	file:
used	kademlia/operations/Operation.java	/^	protected ArrayList<BigInteger> used;$/;"	f	class:Operation
value	vector/PeakDistribution.java	/^private final Number value;$/;"	f	class:PeakDistribution	file:
value	vector/SingleValueHolder.java	/^protected double value;$/;"	f	class:SingleValueHolder
valueOf	config/Operators.java	/^	public Number valueOf(String str) {$/;"	m	class:Operators
values	rangesim/RangeSimulator.java	/^private String[][] values;$/;"	f	class:RangeSimulator	file:
visitedDirs	config/ClassFinder.java	/^private static int visitedDirs = 0;$/;"	f	class:ClassFinder	file:
visualize	kademlia/operations/Operation.java	/^	public void visualize() {$/;"	m	class:Operation
w	util/WeightedRandPerm.java	/^private final double[] w;$/;"	f	class:WeightedRandPerm	file:
wait_time	kademlia/Ticket.java	/^	private long wait_time;$/;"	f	class:Ticket	file:
waitingTimes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> waitingTimes = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
waitingTimesByEvilNodes	kademlia/KademliaObserver.java	/^    private static HashMap<String, Long> waitingTimesByEvilNodes = new HashMap<String, Long>();$/;"	f	class:KademliaObserver	file:
weaklyConnectedClusters	graph/GraphAlgorithms.java	/^public Map weaklyConnectedClusters( Graph g ) {$/;"	m	class:GraphAlgorithms
weights	util/WeightedRandPerm.java	/^private double[] weights = null;$/;"	f	class:WeightedRandPerm	file:
wire	dynamics/WireByMethod.java	/^public void wire(Graph g) {$/;"	m	class:WireByMethod
wire	dynamics/WireFromFile.java	/^public void wire(Graph g) {$/;"	m	class:WireFromFile
wire	dynamics/WireGraph.java	/^public abstract void wire(Graph g);$/;"	m	class:WireGraph
wire	dynamics/WireKOut.java	/^public void wire(Graph g) {$/;"	m	class:WireKOut
wire	dynamics/WireRegRootedTree.java	/^public void wire(Graph g) {$/;"	m	class:WireRegRootedTree
wire	dynamics/WireRingLattice.java	/^public void wire(Graph g)$/;"	m	class:WireRingLattice
wire	dynamics/WireScaleFreeBA.java	/^public void wire(Graph g) {$/;"	m	class:WireScaleFreeBA
wire	dynamics/WireScaleFreeDM.java	/^public void wire(Graph g) {$/;"	m	class:WireScaleFreeDM
wire	dynamics/WireStar.java	/^public void wire(Graph g) {$/;"	m	class:WireStar
wire	dynamics/WireWS.java	/^public void wire(Graph g) {$/;"	m	class:WireWS
wireDirected	core/OverlayGraph.java	/^public final boolean wireDirected;$/;"	f	class:OverlayGraph
wireHypercube	graph/GraphFactory.java	/^public static Graph wireHypercube( Graph g ) {$/;"	m	class:GraphFactory
wireKOut	graph/GraphFactory.java	/^public static Graph wireKOut( Graph g, int k, Random r ) {$/;"	m	class:GraphFactory
wireRegRootedTree	graph/GraphFactory.java	/^public static Graph wireRegRootedTree( Graph g, int k ) {$/;"	m	class:GraphFactory
wireRingLattice	graph/GraphFactory.java	/^public static Graph wireRingLattice(Graph g, int k) {$/;"	m	class:GraphFactory
wireScaleFreeBA	graph/GraphFactory.java	/^public static Graph wireScaleFreeBA( Graph g, int k, Random r ) {$/;"	m	class:GraphFactory
wireStar	graph/GraphFactory.java	/^public static Graph wireStar( Graph g ) {$/;"	m	class:GraphFactory
wireWS	graph/GraphFactory.java	/^public static Graph wireWS( Graph g, int k, double p, Random r ) {$/;"	m	class:GraphFactory
wordLetterPairs	config/ConfigContainer.java	/^private ArrayList<String> wordLetterPairs(String str)$/;"	m	class:ConfigContainer	file:
write	config/NullPrintStream.java	/^public synchronized void write(byte[] b, int off, int len)$/;"	m	class:NullPrintStream
write	config/NullPrintStream.java	/^public synchronized void write(int b)$/;"	m	class:NullPrintStream
write	rangesim/TaggedOutputStream.java	/^public synchronized void write(byte[] b, int off, int len)$/;"	m	class:TaggedOutputStream
write	rangesim/TaggedOutputStream.java	/^public synchronized void write(int b)$/;"	m	class:TaggedOutputStream
writeChaco	graph/GraphIO.java	/^public static void writeChaco( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeDOT	graph/GraphIO.java	/^public static void writeDOT( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeEdgeList	graph/GraphIO.java	/^public static void writeEdgeList( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeGML	graph/GraphIO.java	/^public static void writeGML( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeNeighborList	graph/GraphIO.java	/^public static void writeNeighborList( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeNetmeter	graph/GraphIO.java	/^public static void writeNetmeter( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeUCINET_DL	graph/GraphIO.java	/^public static void writeUCINET_DL( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
writeUCINET_DLMatrix	graph/GraphIO.java	/^public static void writeUCINET_DLMatrix( Graph g, PrintStream out ) {$/;"	m	class:GraphIO
write_average_storage_utilisation_per_topic	kademlia/KademliaObserver.java	/^    private void write_average_storage_utilisation_per_topic() {$/;"	m	class:KademliaObserver	file:
write_better_waiting_time	kademlia/KademliaObserver.java	/^	private void write_better_waiting_time () {$/;"	m	class:KademliaObserver	file:
write_competingtickets	kademlia/KademliaObserver.java	/^    private void write_competingtickets() {$/;"	m	class:KademliaObserver	file:
write_eclipsing_results	kademlia/KademliaObserver.java	/^    private void write_eclipsing_results() {$/;"	m	class:KademliaObserver	file:
write_exchanged_msg_stats_over_time	kademlia/KademliaObserver.java	/^    private void write_exchanged_msg_stats_over_time() {$/;"	m	class:KademliaObserver	file:
write_msg_received_by_nodes	kademlia/KademliaObserver.java	/^    private void write_msg_received_by_nodes() {$/;"	m	class:KademliaObserver	file:
write_node_info	kademlia/KademliaObserver.java	/^    private void write_node_info() {$/;"	m	class:KademliaObserver	file:
write_overthreshold_time	kademlia/KademliaObserver.java	/^	private void write_overthreshold_time () {$/;"	m	class:KademliaObserver	file:
write_register_overhead	kademlia/KademliaObserver.java	/^    private void write_register_overhead() {$/;"	m	class:KademliaObserver	file:
write_registered_registrant_average	kademlia/KademliaObserver.java	/^    private void write_registered_registrant_average() {$/;"	m	class:KademliaObserver	file:
write_registered_registrar_average	kademlia/KademliaObserver.java	/^    private void write_registered_registrar_average() {$/;"	m	class:KademliaObserver	file:
write_registered_topics_average	kademlia/KademliaObserver.java	/^    private void write_registered_topics_average() {$/;"	m	class:KademliaObserver	file:
write_registered_topics_timing	kademlia/KademliaObserver.java	/^    private void write_registered_topics_timing() {$/;"	m	class:KademliaObserver	file:
write_registration_stats	kademlia/KademliaObserver.java	/^    private void write_registration_stats() {$/;"	m	class:KademliaObserver	file:
write_topics	kademlia/KademliaObserver.java	/^    private void write_topics() {$/;"	m	class:KademliaObserver	file:
write_waiting_times	kademlia/KademliaObserver.java	/^    private void write_waiting_times() {$/;"	m	class:KademliaObserver	file:
writtenNodeIDs	kademlia/KademliaObserver.java	/^    private static HashSet<BigInteger> writtenNodeIDs = new HashSet<BigInteger>();$/;"	f	class:KademliaObserver	file:
wsum	util/WeightedRandPerm.java	/^private final double[] wsum;$/;"	f	class:WeightedRandPerm	file:
zipf	kademlia/CustomDistribution.java	/^    private ZipfDistribution zipf;$/;"	f	class:CustomDistribution	file:
zipf	kademlia/Discv5ZipfTrafficGenerator.java	/^	protected ZipfDistribution zipf;$/;"	f	class:Discv5ZipfTrafficGenerator
zipf	kademlia/TurbulenceMultiTopic.java	/^	protected ZipfDistribution zipf;$/;"	f	class:TurbulenceMultiTopic
zipf	kademlia/TurbulenceSingleTopic.java	/^	protected ZipfDistribution zipf;$/;"	f	class:TurbulenceSingleTopic
